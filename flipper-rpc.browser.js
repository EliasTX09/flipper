(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("protobufjs/minimal"));

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots.FlipperRPC || ($protobuf.roots.FlipperRPC = {});
    
    $root.PB = (function() {
    
        /**
         * Namespace PB.
         * @exports PB
         * @namespace
         */
        var PB = {};
    
        /**
         * CommandStatus enum.
         * @name PB.CommandStatus
         * @enum {number}
         * @property {number} OK=0 OK value
         * @property {number} ERROR=1 < Common Errors
         * @property {number} ERROR_DECODE=2 ERROR_DECODE value
         * @property {number} ERROR_NOT_IMPLEMENTED=3 ERROR_NOT_IMPLEMENTED value
         * @property {number} ERROR_BUSY=4 ERROR_BUSY value
         * @property {number} ERROR_CONTINUOUS_COMMAND_INTERRUPTED=14 ERROR_CONTINUOUS_COMMAND_INTERRUPTED value
         * @property {number} ERROR_INVALID_PARAMETERS=15 ERROR_INVALID_PARAMETERS value
         * @property {number} ERROR_STORAGE_NOT_READY=5 < Storage Errors
         * @property {number} ERROR_STORAGE_EXIST=6 ERROR_STORAGE_EXIST value
         * @property {number} ERROR_STORAGE_NOT_EXIST=7 ERROR_STORAGE_NOT_EXIST value
         * @property {number} ERROR_STORAGE_INVALID_PARAMETER=8 ERROR_STORAGE_INVALID_PARAMETER value
         * @property {number} ERROR_STORAGE_DENIED=9 ERROR_STORAGE_DENIED value
         * @property {number} ERROR_STORAGE_INVALID_NAME=10 ERROR_STORAGE_INVALID_NAME value
         * @property {number} ERROR_STORAGE_INTERNAL=11 ERROR_STORAGE_INTERNAL value
         * @property {number} ERROR_STORAGE_NOT_IMPLEMENTED=12 ERROR_STORAGE_NOT_IMPLEMENTED value
         * @property {number} ERROR_STORAGE_ALREADY_OPEN=13 ERROR_STORAGE_ALREADY_OPEN value
         * @property {number} ERROR_STORAGE_DIR_NOT_EMPTY=18 ERROR_STORAGE_DIR_NOT_EMPTY value
         * @property {number} ERROR_APP_CANT_START=16 < Application Errors
         * @property {number} ERROR_APP_SYSTEM_LOCKED=17 ERROR_APP_SYSTEM_LOCKED value
         * @property {number} ERROR_APP_NOT_RUNNING=21 ERROR_APP_NOT_RUNNING value
         * @property {number} ERROR_APP_CMD_ERROR=22 ERROR_APP_CMD_ERROR value
         * @property {number} ERROR_VIRTUAL_DISPLAY_ALREADY_STARTED=19 < Virtual Display Errors
         * @property {number} ERROR_VIRTUAL_DISPLAY_NOT_STARTED=20 ERROR_VIRTUAL_DISPLAY_NOT_STARTED value
         * @property {number} ERROR_GPIO_MODE_INCORRECT=58 < GPIO Errors
         * @property {number} ERROR_GPIO_UNKNOWN_PIN_MODE=59 ERROR_GPIO_UNKNOWN_PIN_MODE value
         */
        PB.CommandStatus = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "OK"] = 0;
            values[valuesById[1] = "ERROR"] = 1;
            values[valuesById[2] = "ERROR_DECODE"] = 2;
            values[valuesById[3] = "ERROR_NOT_IMPLEMENTED"] = 3;
            values[valuesById[4] = "ERROR_BUSY"] = 4;
            values[valuesById[14] = "ERROR_CONTINUOUS_COMMAND_INTERRUPTED"] = 14;
            values[valuesById[15] = "ERROR_INVALID_PARAMETERS"] = 15;
            values[valuesById[5] = "ERROR_STORAGE_NOT_READY"] = 5;
            values[valuesById[6] = "ERROR_STORAGE_EXIST"] = 6;
            values[valuesById[7] = "ERROR_STORAGE_NOT_EXIST"] = 7;
            values[valuesById[8] = "ERROR_STORAGE_INVALID_PARAMETER"] = 8;
            values[valuesById[9] = "ERROR_STORAGE_DENIED"] = 9;
            values[valuesById[10] = "ERROR_STORAGE_INVALID_NAME"] = 10;
            values[valuesById[11] = "ERROR_STORAGE_INTERNAL"] = 11;
            values[valuesById[12] = "ERROR_STORAGE_NOT_IMPLEMENTED"] = 12;
            values[valuesById[13] = "ERROR_STORAGE_ALREADY_OPEN"] = 13;
            values[valuesById[18] = "ERROR_STORAGE_DIR_NOT_EMPTY"] = 18;
            values[valuesById[16] = "ERROR_APP_CANT_START"] = 16;
            values[valuesById[17] = "ERROR_APP_SYSTEM_LOCKED"] = 17;
            values[valuesById[21] = "ERROR_APP_NOT_RUNNING"] = 21;
            values[valuesById[22] = "ERROR_APP_CMD_ERROR"] = 22;
            values[valuesById[19] = "ERROR_VIRTUAL_DISPLAY_ALREADY_STARTED"] = 19;
            values[valuesById[20] = "ERROR_VIRTUAL_DISPLAY_NOT_STARTED"] = 20;
            values[valuesById[58] = "ERROR_GPIO_MODE_INCORRECT"] = 58;
            values[valuesById[59] = "ERROR_GPIO_UNKNOWN_PIN_MODE"] = 59;
            return values;
        })();
    
        PB.Empty = (function() {
    
            /**
             * Properties of an Empty.
             * @memberof PB
             * @interface IEmpty
             */
    
            /**
             * Constructs a new Empty.
             * @memberof PB
             * @classdesc Represents an Empty.
             * @implements IEmpty
             * @constructor
             * @param {PB.IEmpty=} [properties] Properties to set
             */
            function Empty(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new Empty instance using the specified properties.
             * @function create
             * @memberof PB.Empty
             * @static
             * @param {PB.IEmpty=} [properties] Properties to set
             * @returns {PB.Empty} Empty instance
             */
            Empty.create = function create(properties) {
                return new Empty(properties);
            };
    
            /**
             * Encodes the specified Empty message. Does not implicitly {@link PB.Empty.verify|verify} messages.
             * @function encode
             * @memberof PB.Empty
             * @static
             * @param {PB.IEmpty} message Empty message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Empty.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified Empty message, length delimited. Does not implicitly {@link PB.Empty.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB.Empty
             * @static
             * @param {PB.IEmpty} message Empty message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Empty.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an Empty message from the specified reader or buffer.
             * @function decode
             * @memberof PB.Empty
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB.Empty} Empty
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Empty.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB.Empty();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an Empty message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB.Empty
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB.Empty} Empty
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Empty.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an Empty message.
             * @function verify
             * @memberof PB.Empty
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Empty.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates an Empty message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB.Empty
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB.Empty} Empty
             */
            Empty.fromObject = function fromObject(object) {
                if (object instanceof $root.PB.Empty)
                    return object;
                return new $root.PB.Empty();
            };
    
            /**
             * Creates a plain object from an Empty message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB.Empty
             * @static
             * @param {PB.Empty} message Empty
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Empty.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this Empty to JSON.
             * @function toJSON
             * @memberof PB.Empty
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Empty.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Empty
             * @function getTypeUrl
             * @memberof PB.Empty
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB.Empty";
            };
    
            return Empty;
        })();
    
        PB.StopSession = (function() {
    
            /**
             * Properties of a StopSession.
             * @memberof PB
             * @interface IStopSession
             */
    
            /**
             * Constructs a new StopSession.
             * @memberof PB
             * @classdesc Represents a StopSession.
             * @implements IStopSession
             * @constructor
             * @param {PB.IStopSession=} [properties] Properties to set
             */
            function StopSession(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new StopSession instance using the specified properties.
             * @function create
             * @memberof PB.StopSession
             * @static
             * @param {PB.IStopSession=} [properties] Properties to set
             * @returns {PB.StopSession} StopSession instance
             */
            StopSession.create = function create(properties) {
                return new StopSession(properties);
            };
    
            /**
             * Encodes the specified StopSession message. Does not implicitly {@link PB.StopSession.verify|verify} messages.
             * @function encode
             * @memberof PB.StopSession
             * @static
             * @param {PB.IStopSession} message StopSession message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StopSession.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified StopSession message, length delimited. Does not implicitly {@link PB.StopSession.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB.StopSession
             * @static
             * @param {PB.IStopSession} message StopSession message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StopSession.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a StopSession message from the specified reader or buffer.
             * @function decode
             * @memberof PB.StopSession
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB.StopSession} StopSession
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StopSession.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB.StopSession();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a StopSession message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB.StopSession
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB.StopSession} StopSession
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StopSession.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a StopSession message.
             * @function verify
             * @memberof PB.StopSession
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StopSession.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a StopSession message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB.StopSession
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB.StopSession} StopSession
             */
            StopSession.fromObject = function fromObject(object) {
                if (object instanceof $root.PB.StopSession)
                    return object;
                return new $root.PB.StopSession();
            };
    
            /**
             * Creates a plain object from a StopSession message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB.StopSession
             * @static
             * @param {PB.StopSession} message StopSession
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StopSession.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this StopSession to JSON.
             * @function toJSON
             * @memberof PB.StopSession
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StopSession.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for StopSession
             * @function getTypeUrl
             * @memberof PB.StopSession
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            StopSession.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB.StopSession";
            };
    
            return StopSession;
        })();
    
        PB.Main = (function() {
    
            /**
             * Properties of a Main.
             * @memberof PB
             * @interface IMain
             * @property {number|null} [commandId] Main commandId
             * @property {PB.CommandStatus|null} [commandStatus] Main commandStatus
             * @property {boolean|null} [hasNext] Main hasNext
             * @property {PB.IEmpty|null} [empty] Main empty
             * @property {PB.IStopSession|null} [stopSession] Main stopSession
             * @property {PB_System.IPingRequest|null} [systemPingRequest] Main systemPingRequest
             * @property {PB_System.IPingResponse|null} [systemPingResponse] Main systemPingResponse
             * @property {PB_System.IRebootRequest|null} [systemRebootRequest] Main systemRebootRequest
             * @property {PB_System.IDeviceInfoRequest|null} [systemDeviceInfoRequest] Main systemDeviceInfoRequest
             * @property {PB_System.IDeviceInfoResponse|null} [systemDeviceInfoResponse] Main systemDeviceInfoResponse
             * @property {PB_System.IFactoryResetRequest|null} [systemFactoryResetRequest] Main systemFactoryResetRequest
             * @property {PB_System.IGetDateTimeRequest|null} [systemGetDatetimeRequest] Main systemGetDatetimeRequest
             * @property {PB_System.IGetDateTimeResponse|null} [systemGetDatetimeResponse] Main systemGetDatetimeResponse
             * @property {PB_System.ISetDateTimeRequest|null} [systemSetDatetimeRequest] Main systemSetDatetimeRequest
             * @property {PB_System.IPlayAudiovisualAlertRequest|null} [systemPlayAudiovisualAlertRequest] Main systemPlayAudiovisualAlertRequest
             * @property {PB_System.IProtobufVersionRequest|null} [systemProtobufVersionRequest] Main systemProtobufVersionRequest
             * @property {PB_System.IProtobufVersionResponse|null} [systemProtobufVersionResponse] Main systemProtobufVersionResponse
             * @property {PB_System.IUpdateRequest|null} [systemUpdateRequest] Main systemUpdateRequest
             * @property {PB_System.IUpdateResponse|null} [systemUpdateResponse] Main systemUpdateResponse
             * @property {PB_System.IPowerInfoRequest|null} [systemPowerInfoRequest] Main systemPowerInfoRequest
             * @property {PB_System.IPowerInfoResponse|null} [systemPowerInfoResponse] Main systemPowerInfoResponse
             * @property {PB_Storage.IInfoRequest|null} [storageInfoRequest] Main storageInfoRequest
             * @property {PB_Storage.IInfoResponse|null} [storageInfoResponse] Main storageInfoResponse
             * @property {PB_Storage.ITimestampRequest|null} [storageTimestampRequest] Main storageTimestampRequest
             * @property {PB_Storage.ITimestampResponse|null} [storageTimestampResponse] Main storageTimestampResponse
             * @property {PB_Storage.IStatRequest|null} [storageStatRequest] Main storageStatRequest
             * @property {PB_Storage.IStatResponse|null} [storageStatResponse] Main storageStatResponse
             * @property {PB_Storage.IListRequest|null} [storageListRequest] Main storageListRequest
             * @property {PB_Storage.IListResponse|null} [storageListResponse] Main storageListResponse
             * @property {PB_Storage.IReadRequest|null} [storageReadRequest] Main storageReadRequest
             * @property {PB_Storage.IReadResponse|null} [storageReadResponse] Main storageReadResponse
             * @property {PB_Storage.IWriteRequest|null} [storageWriteRequest] Main storageWriteRequest
             * @property {PB_Storage.IDeleteRequest|null} [storageDeleteRequest] Main storageDeleteRequest
             * @property {PB_Storage.IMkdirRequest|null} [storageMkdirRequest] Main storageMkdirRequest
             * @property {PB_Storage.IMd5sumRequest|null} [storageMd5sumRequest] Main storageMd5sumRequest
             * @property {PB_Storage.IMd5sumResponse|null} [storageMd5sumResponse] Main storageMd5sumResponse
             * @property {PB_Storage.IRenameRequest|null} [storageRenameRequest] Main storageRenameRequest
             * @property {PB_Storage.IBackupCreateRequest|null} [storageBackupCreateRequest] Main storageBackupCreateRequest
             * @property {PB_Storage.IBackupRestoreRequest|null} [storageBackupRestoreRequest] Main storageBackupRestoreRequest
             * @property {PB_Storage.ITarExtractRequest|null} [storageTarExtractRequest] Main storageTarExtractRequest
             * @property {PB_App.IStartRequest|null} [appStartRequest] Main appStartRequest
             * @property {PB_App.ILockStatusRequest|null} [appLockStatusRequest] Main appLockStatusRequest
             * @property {PB_App.ILockStatusResponse|null} [appLockStatusResponse] Main appLockStatusResponse
             * @property {PB_App.IAppExitRequest|null} [appExitRequest] Main appExitRequest
             * @property {PB_App.IAppLoadFileRequest|null} [appLoadFileRequest] Main appLoadFileRequest
             * @property {PB_App.IAppButtonPressRequest|null} [appButtonPressRequest] Main appButtonPressRequest
             * @property {PB_App.IAppButtonReleaseRequest|null} [appButtonReleaseRequest] Main appButtonReleaseRequest
             * @property {PB_App.IAppButtonPressReleaseRequest|null} [appButtonPressReleaseRequest] Main appButtonPressReleaseRequest
             * @property {PB_App.IGetErrorRequest|null} [appGetErrorRequest] Main appGetErrorRequest
             * @property {PB_App.IGetErrorResponse|null} [appGetErrorResponse] Main appGetErrorResponse
             * @property {PB_App.IDataExchangeRequest|null} [appDataExchangeRequest] Main appDataExchangeRequest
             * @property {PB_Gui.IStartScreenStreamRequest|null} [guiStartScreenStreamRequest] Main guiStartScreenStreamRequest
             * @property {PB_Gui.IStopScreenStreamRequest|null} [guiStopScreenStreamRequest] Main guiStopScreenStreamRequest
             * @property {PB_Gui.IScreenFrame|null} [guiScreenFrame] Main guiScreenFrame
             * @property {PB_Gui.ISendInputEventRequest|null} [guiSendInputEventRequest] Main guiSendInputEventRequest
             * @property {PB_Gui.IStartVirtualDisplayRequest|null} [guiStartVirtualDisplayRequest] Main guiStartVirtualDisplayRequest
             * @property {PB_Gui.IStopVirtualDisplayRequest|null} [guiStopVirtualDisplayRequest] Main guiStopVirtualDisplayRequest
             * @property {PB_Gpio.ISetPinMode|null} [gpioSetPinMode] Main gpioSetPinMode
             * @property {PB_Gpio.ISetInputPull|null} [gpioSetInputPull] Main gpioSetInputPull
             * @property {PB_Gpio.IGetPinMode|null} [gpioGetPinMode] Main gpioGetPinMode
             * @property {PB_Gpio.IGetPinModeResponse|null} [gpioGetPinModeResponse] Main gpioGetPinModeResponse
             * @property {PB_Gpio.IReadPin|null} [gpioReadPin] Main gpioReadPin
             * @property {PB_Gpio.IReadPinResponse|null} [gpioReadPinResponse] Main gpioReadPinResponse
             * @property {PB_Gpio.IWritePin|null} [gpioWritePin] Main gpioWritePin
             * @property {PB_Gpio.IGetOtgMode|null} [gpioGetOtgMode] Main gpioGetOtgMode
             * @property {PB_Gpio.IGetOtgModeResponse|null} [gpioGetOtgModeResponse] Main gpioGetOtgModeResponse
             * @property {PB_Gpio.ISetOtgMode|null} [gpioSetOtgMode] Main gpioSetOtgMode
             * @property {PB_App.IAppStateResponse|null} [appStateResponse] Main appStateResponse
             * @property {PB_Property.IGetRequest|null} [propertyGetRequest] Main propertyGetRequest
             * @property {PB_Property.IGetResponse|null} [propertyGetResponse] Main propertyGetResponse
             * @property {PB_Desktop.IIsLockedRequest|null} [desktopIsLockedRequest] Main desktopIsLockedRequest
             * @property {PB_Desktop.IUnlockRequest|null} [desktopUnlockRequest] Main desktopUnlockRequest
             * @property {PB_Desktop.IStatusSubscribeRequest|null} [desktopStatusSubscribeRequest] Main desktopStatusSubscribeRequest
             * @property {PB_Desktop.IStatusUnsubscribeRequest|null} [desktopStatusUnsubscribeRequest] Main desktopStatusUnsubscribeRequest
             * @property {PB_Desktop.IStatus|null} [desktopStatus] Main desktopStatus
             */
    
            /**
             * Constructs a new Main.
             * @memberof PB
             * @classdesc Represents a Main.
             * @implements IMain
             * @constructor
             * @param {PB.IMain=} [properties] Properties to set
             */
            function Main(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Main commandId.
             * @member {number} commandId
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.commandId = 0;
    
            /**
             * Main commandStatus.
             * @member {PB.CommandStatus} commandStatus
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.commandStatus = 0;
    
            /**
             * Main hasNext.
             * @member {boolean} hasNext
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.hasNext = false;
    
            /**
             * Main empty.
             * @member {PB.IEmpty|null|undefined} empty
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.empty = null;
    
            /**
             * Main stopSession.
             * @member {PB.IStopSession|null|undefined} stopSession
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.stopSession = null;
    
            /**
             * Main systemPingRequest.
             * @member {PB_System.IPingRequest|null|undefined} systemPingRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemPingRequest = null;
    
            /**
             * Main systemPingResponse.
             * @member {PB_System.IPingResponse|null|undefined} systemPingResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemPingResponse = null;
    
            /**
             * Main systemRebootRequest.
             * @member {PB_System.IRebootRequest|null|undefined} systemRebootRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemRebootRequest = null;
    
            /**
             * Main systemDeviceInfoRequest.
             * @member {PB_System.IDeviceInfoRequest|null|undefined} systemDeviceInfoRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemDeviceInfoRequest = null;
    
            /**
             * Main systemDeviceInfoResponse.
             * @member {PB_System.IDeviceInfoResponse|null|undefined} systemDeviceInfoResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemDeviceInfoResponse = null;
    
            /**
             * Main systemFactoryResetRequest.
             * @member {PB_System.IFactoryResetRequest|null|undefined} systemFactoryResetRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemFactoryResetRequest = null;
    
            /**
             * Main systemGetDatetimeRequest.
             * @member {PB_System.IGetDateTimeRequest|null|undefined} systemGetDatetimeRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemGetDatetimeRequest = null;
    
            /**
             * Main systemGetDatetimeResponse.
             * @member {PB_System.IGetDateTimeResponse|null|undefined} systemGetDatetimeResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemGetDatetimeResponse = null;
    
            /**
             * Main systemSetDatetimeRequest.
             * @member {PB_System.ISetDateTimeRequest|null|undefined} systemSetDatetimeRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemSetDatetimeRequest = null;
    
            /**
             * Main systemPlayAudiovisualAlertRequest.
             * @member {PB_System.IPlayAudiovisualAlertRequest|null|undefined} systemPlayAudiovisualAlertRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemPlayAudiovisualAlertRequest = null;
    
            /**
             * Main systemProtobufVersionRequest.
             * @member {PB_System.IProtobufVersionRequest|null|undefined} systemProtobufVersionRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemProtobufVersionRequest = null;
    
            /**
             * Main systemProtobufVersionResponse.
             * @member {PB_System.IProtobufVersionResponse|null|undefined} systemProtobufVersionResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemProtobufVersionResponse = null;
    
            /**
             * Main systemUpdateRequest.
             * @member {PB_System.IUpdateRequest|null|undefined} systemUpdateRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemUpdateRequest = null;
    
            /**
             * Main systemUpdateResponse.
             * @member {PB_System.IUpdateResponse|null|undefined} systemUpdateResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemUpdateResponse = null;
    
            /**
             * Main systemPowerInfoRequest.
             * @member {PB_System.IPowerInfoRequest|null|undefined} systemPowerInfoRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemPowerInfoRequest = null;
    
            /**
             * Main systemPowerInfoResponse.
             * @member {PB_System.IPowerInfoResponse|null|undefined} systemPowerInfoResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.systemPowerInfoResponse = null;
    
            /**
             * Main storageInfoRequest.
             * @member {PB_Storage.IInfoRequest|null|undefined} storageInfoRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageInfoRequest = null;
    
            /**
             * Main storageInfoResponse.
             * @member {PB_Storage.IInfoResponse|null|undefined} storageInfoResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageInfoResponse = null;
    
            /**
             * Main storageTimestampRequest.
             * @member {PB_Storage.ITimestampRequest|null|undefined} storageTimestampRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageTimestampRequest = null;
    
            /**
             * Main storageTimestampResponse.
             * @member {PB_Storage.ITimestampResponse|null|undefined} storageTimestampResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageTimestampResponse = null;
    
            /**
             * Main storageStatRequest.
             * @member {PB_Storage.IStatRequest|null|undefined} storageStatRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageStatRequest = null;
    
            /**
             * Main storageStatResponse.
             * @member {PB_Storage.IStatResponse|null|undefined} storageStatResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageStatResponse = null;
    
            /**
             * Main storageListRequest.
             * @member {PB_Storage.IListRequest|null|undefined} storageListRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageListRequest = null;
    
            /**
             * Main storageListResponse.
             * @member {PB_Storage.IListResponse|null|undefined} storageListResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageListResponse = null;
    
            /**
             * Main storageReadRequest.
             * @member {PB_Storage.IReadRequest|null|undefined} storageReadRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageReadRequest = null;
    
            /**
             * Main storageReadResponse.
             * @member {PB_Storage.IReadResponse|null|undefined} storageReadResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageReadResponse = null;
    
            /**
             * Main storageWriteRequest.
             * @member {PB_Storage.IWriteRequest|null|undefined} storageWriteRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageWriteRequest = null;
    
            /**
             * Main storageDeleteRequest.
             * @member {PB_Storage.IDeleteRequest|null|undefined} storageDeleteRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageDeleteRequest = null;
    
            /**
             * Main storageMkdirRequest.
             * @member {PB_Storage.IMkdirRequest|null|undefined} storageMkdirRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageMkdirRequest = null;
    
            /**
             * Main storageMd5sumRequest.
             * @member {PB_Storage.IMd5sumRequest|null|undefined} storageMd5sumRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageMd5sumRequest = null;
    
            /**
             * Main storageMd5sumResponse.
             * @member {PB_Storage.IMd5sumResponse|null|undefined} storageMd5sumResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageMd5sumResponse = null;
    
            /**
             * Main storageRenameRequest.
             * @member {PB_Storage.IRenameRequest|null|undefined} storageRenameRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageRenameRequest = null;
    
            /**
             * Main storageBackupCreateRequest.
             * @member {PB_Storage.IBackupCreateRequest|null|undefined} storageBackupCreateRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageBackupCreateRequest = null;
    
            /**
             * Main storageBackupRestoreRequest.
             * @member {PB_Storage.IBackupRestoreRequest|null|undefined} storageBackupRestoreRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageBackupRestoreRequest = null;
    
            /**
             * Main storageTarExtractRequest.
             * @member {PB_Storage.ITarExtractRequest|null|undefined} storageTarExtractRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.storageTarExtractRequest = null;
    
            /**
             * Main appStartRequest.
             * @member {PB_App.IStartRequest|null|undefined} appStartRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.appStartRequest = null;
    
            /**
             * Main appLockStatusRequest.
             * @member {PB_App.ILockStatusRequest|null|undefined} appLockStatusRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.appLockStatusRequest = null;
    
            /**
             * Main appLockStatusResponse.
             * @member {PB_App.ILockStatusResponse|null|undefined} appLockStatusResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.appLockStatusResponse = null;
    
            /**
             * Main appExitRequest.
             * @member {PB_App.IAppExitRequest|null|undefined} appExitRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.appExitRequest = null;
    
            /**
             * Main appLoadFileRequest.
             * @member {PB_App.IAppLoadFileRequest|null|undefined} appLoadFileRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.appLoadFileRequest = null;
    
            /**
             * Main appButtonPressRequest.
             * @member {PB_App.IAppButtonPressRequest|null|undefined} appButtonPressRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.appButtonPressRequest = null;
    
            /**
             * Main appButtonReleaseRequest.
             * @member {PB_App.IAppButtonReleaseRequest|null|undefined} appButtonReleaseRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.appButtonReleaseRequest = null;
    
            /**
             * Main appButtonPressReleaseRequest.
             * @member {PB_App.IAppButtonPressReleaseRequest|null|undefined} appButtonPressReleaseRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.appButtonPressReleaseRequest = null;
    
            /**
             * Main appGetErrorRequest.
             * @member {PB_App.IGetErrorRequest|null|undefined} appGetErrorRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.appGetErrorRequest = null;
    
            /**
             * Main appGetErrorResponse.
             * @member {PB_App.IGetErrorResponse|null|undefined} appGetErrorResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.appGetErrorResponse = null;
    
            /**
             * Main appDataExchangeRequest.
             * @member {PB_App.IDataExchangeRequest|null|undefined} appDataExchangeRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.appDataExchangeRequest = null;
    
            /**
             * Main guiStartScreenStreamRequest.
             * @member {PB_Gui.IStartScreenStreamRequest|null|undefined} guiStartScreenStreamRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.guiStartScreenStreamRequest = null;
    
            /**
             * Main guiStopScreenStreamRequest.
             * @member {PB_Gui.IStopScreenStreamRequest|null|undefined} guiStopScreenStreamRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.guiStopScreenStreamRequest = null;
    
            /**
             * Main guiScreenFrame.
             * @member {PB_Gui.IScreenFrame|null|undefined} guiScreenFrame
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.guiScreenFrame = null;
    
            /**
             * Main guiSendInputEventRequest.
             * @member {PB_Gui.ISendInputEventRequest|null|undefined} guiSendInputEventRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.guiSendInputEventRequest = null;
    
            /**
             * Main guiStartVirtualDisplayRequest.
             * @member {PB_Gui.IStartVirtualDisplayRequest|null|undefined} guiStartVirtualDisplayRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.guiStartVirtualDisplayRequest = null;
    
            /**
             * Main guiStopVirtualDisplayRequest.
             * @member {PB_Gui.IStopVirtualDisplayRequest|null|undefined} guiStopVirtualDisplayRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.guiStopVirtualDisplayRequest = null;
    
            /**
             * Main gpioSetPinMode.
             * @member {PB_Gpio.ISetPinMode|null|undefined} gpioSetPinMode
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.gpioSetPinMode = null;
    
            /**
             * Main gpioSetInputPull.
             * @member {PB_Gpio.ISetInputPull|null|undefined} gpioSetInputPull
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.gpioSetInputPull = null;
    
            /**
             * Main gpioGetPinMode.
             * @member {PB_Gpio.IGetPinMode|null|undefined} gpioGetPinMode
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.gpioGetPinMode = null;
    
            /**
             * Main gpioGetPinModeResponse.
             * @member {PB_Gpio.IGetPinModeResponse|null|undefined} gpioGetPinModeResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.gpioGetPinModeResponse = null;
    
            /**
             * Main gpioReadPin.
             * @member {PB_Gpio.IReadPin|null|undefined} gpioReadPin
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.gpioReadPin = null;
    
            /**
             * Main gpioReadPinResponse.
             * @member {PB_Gpio.IReadPinResponse|null|undefined} gpioReadPinResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.gpioReadPinResponse = null;
    
            /**
             * Main gpioWritePin.
             * @member {PB_Gpio.IWritePin|null|undefined} gpioWritePin
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.gpioWritePin = null;
    
            /**
             * Main gpioGetOtgMode.
             * @member {PB_Gpio.IGetOtgMode|null|undefined} gpioGetOtgMode
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.gpioGetOtgMode = null;
    
            /**
             * Main gpioGetOtgModeResponse.
             * @member {PB_Gpio.IGetOtgModeResponse|null|undefined} gpioGetOtgModeResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.gpioGetOtgModeResponse = null;
    
            /**
             * Main gpioSetOtgMode.
             * @member {PB_Gpio.ISetOtgMode|null|undefined} gpioSetOtgMode
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.gpioSetOtgMode = null;
    
            /**
             * Main appStateResponse.
             * @member {PB_App.IAppStateResponse|null|undefined} appStateResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.appStateResponse = null;
    
            /**
             * Main propertyGetRequest.
             * @member {PB_Property.IGetRequest|null|undefined} propertyGetRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.propertyGetRequest = null;
    
            /**
             * Main propertyGetResponse.
             * @member {PB_Property.IGetResponse|null|undefined} propertyGetResponse
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.propertyGetResponse = null;
    
            /**
             * Main desktopIsLockedRequest.
             * @member {PB_Desktop.IIsLockedRequest|null|undefined} desktopIsLockedRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.desktopIsLockedRequest = null;
    
            /**
             * Main desktopUnlockRequest.
             * @member {PB_Desktop.IUnlockRequest|null|undefined} desktopUnlockRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.desktopUnlockRequest = null;
    
            /**
             * Main desktopStatusSubscribeRequest.
             * @member {PB_Desktop.IStatusSubscribeRequest|null|undefined} desktopStatusSubscribeRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.desktopStatusSubscribeRequest = null;
    
            /**
             * Main desktopStatusUnsubscribeRequest.
             * @member {PB_Desktop.IStatusUnsubscribeRequest|null|undefined} desktopStatusUnsubscribeRequest
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.desktopStatusUnsubscribeRequest = null;
    
            /**
             * Main desktopStatus.
             * @member {PB_Desktop.IStatus|null|undefined} desktopStatus
             * @memberof PB.Main
             * @instance
             */
            Main.prototype.desktopStatus = null;
    
            // OneOf field names bound to virtual getters and setters
            var $oneOfFields;
    
            /**
             * Main content.
             * @member {"empty"|"stopSession"|"systemPingRequest"|"systemPingResponse"|"systemRebootRequest"|"systemDeviceInfoRequest"|"systemDeviceInfoResponse"|"systemFactoryResetRequest"|"systemGetDatetimeRequest"|"systemGetDatetimeResponse"|"systemSetDatetimeRequest"|"systemPlayAudiovisualAlertRequest"|"systemProtobufVersionRequest"|"systemProtobufVersionResponse"|"systemUpdateRequest"|"systemUpdateResponse"|"systemPowerInfoRequest"|"systemPowerInfoResponse"|"storageInfoRequest"|"storageInfoResponse"|"storageTimestampRequest"|"storageTimestampResponse"|"storageStatRequest"|"storageStatResponse"|"storageListRequest"|"storageListResponse"|"storageReadRequest"|"storageReadResponse"|"storageWriteRequest"|"storageDeleteRequest"|"storageMkdirRequest"|"storageMd5sumRequest"|"storageMd5sumResponse"|"storageRenameRequest"|"storageBackupCreateRequest"|"storageBackupRestoreRequest"|"storageTarExtractRequest"|"appStartRequest"|"appLockStatusRequest"|"appLockStatusResponse"|"appExitRequest"|"appLoadFileRequest"|"appButtonPressRequest"|"appButtonReleaseRequest"|"appButtonPressReleaseRequest"|"appGetErrorRequest"|"appGetErrorResponse"|"appDataExchangeRequest"|"guiStartScreenStreamRequest"|"guiStopScreenStreamRequest"|"guiScreenFrame"|"guiSendInputEventRequest"|"guiStartVirtualDisplayRequest"|"guiStopVirtualDisplayRequest"|"gpioSetPinMode"|"gpioSetInputPull"|"gpioGetPinMode"|"gpioGetPinModeResponse"|"gpioReadPin"|"gpioReadPinResponse"|"gpioWritePin"|"gpioGetOtgMode"|"gpioGetOtgModeResponse"|"gpioSetOtgMode"|"appStateResponse"|"propertyGetRequest"|"propertyGetResponse"|"desktopIsLockedRequest"|"desktopUnlockRequest"|"desktopStatusSubscribeRequest"|"desktopStatusUnsubscribeRequest"|"desktopStatus"|undefined} content
             * @memberof PB.Main
             * @instance
             */
            Object.defineProperty(Main.prototype, "content", {
                get: $util.oneOfGetter($oneOfFields = ["empty", "stopSession", "systemPingRequest", "systemPingResponse", "systemRebootRequest", "systemDeviceInfoRequest", "systemDeviceInfoResponse", "systemFactoryResetRequest", "systemGetDatetimeRequest", "systemGetDatetimeResponse", "systemSetDatetimeRequest", "systemPlayAudiovisualAlertRequest", "systemProtobufVersionRequest", "systemProtobufVersionResponse", "systemUpdateRequest", "systemUpdateResponse", "systemPowerInfoRequest", "systemPowerInfoResponse", "storageInfoRequest", "storageInfoResponse", "storageTimestampRequest", "storageTimestampResponse", "storageStatRequest", "storageStatResponse", "storageListRequest", "storageListResponse", "storageReadRequest", "storageReadResponse", "storageWriteRequest", "storageDeleteRequest", "storageMkdirRequest", "storageMd5sumRequest", "storageMd5sumResponse", "storageRenameRequest", "storageBackupCreateRequest", "storageBackupRestoreRequest", "storageTarExtractRequest", "appStartRequest", "appLockStatusRequest", "appLockStatusResponse", "appExitRequest", "appLoadFileRequest", "appButtonPressRequest", "appButtonReleaseRequest", "appButtonPressReleaseRequest", "appGetErrorRequest", "appGetErrorResponse", "appDataExchangeRequest", "guiStartScreenStreamRequest", "guiStopScreenStreamRequest", "guiScreenFrame", "guiSendInputEventRequest", "guiStartVirtualDisplayRequest", "guiStopVirtualDisplayRequest", "gpioSetPinMode", "gpioSetInputPull", "gpioGetPinMode", "gpioGetPinModeResponse", "gpioReadPin", "gpioReadPinResponse", "gpioWritePin", "gpioGetOtgMode", "gpioGetOtgModeResponse", "gpioSetOtgMode", "appStateResponse", "propertyGetRequest", "propertyGetResponse", "desktopIsLockedRequest", "desktopUnlockRequest", "desktopStatusSubscribeRequest", "desktopStatusUnsubscribeRequest", "desktopStatus"]),
                set: $util.oneOfSetter($oneOfFields)
            });
    
            /**
             * Creates a new Main instance using the specified properties.
             * @function create
             * @memberof PB.Main
             * @static
             * @param {PB.IMain=} [properties] Properties to set
             * @returns {PB.Main} Main instance
             */
            Main.create = function create(properties) {
                return new Main(properties);
            };
    
            /**
             * Encodes the specified Main message. Does not implicitly {@link PB.Main.verify|verify} messages.
             * @function encode
             * @memberof PB.Main
             * @static
             * @param {PB.IMain} message Main message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Main.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.commandId != null && Object.hasOwnProperty.call(message, "commandId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.commandId);
                if (message.commandStatus != null && Object.hasOwnProperty.call(message, "commandStatus"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.commandStatus);
                if (message.hasNext != null && Object.hasOwnProperty.call(message, "hasNext"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.hasNext);
                if (message.empty != null && Object.hasOwnProperty.call(message, "empty"))
                    $root.PB.Empty.encode(message.empty, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                if (message.systemPingRequest != null && Object.hasOwnProperty.call(message, "systemPingRequest"))
                    $root.PB_System.PingRequest.encode(message.systemPingRequest, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                if (message.systemPingResponse != null && Object.hasOwnProperty.call(message, "systemPingResponse"))
                    $root.PB_System.PingResponse.encode(message.systemPingResponse, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                if (message.storageListRequest != null && Object.hasOwnProperty.call(message, "storageListRequest"))
                    $root.PB_Storage.ListRequest.encode(message.storageListRequest, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                if (message.storageListResponse != null && Object.hasOwnProperty.call(message, "storageListResponse"))
                    $root.PB_Storage.ListResponse.encode(message.storageListResponse, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                if (message.storageReadRequest != null && Object.hasOwnProperty.call(message, "storageReadRequest"))
                    $root.PB_Storage.ReadRequest.encode(message.storageReadRequest, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                if (message.storageReadResponse != null && Object.hasOwnProperty.call(message, "storageReadResponse"))
                    $root.PB_Storage.ReadResponse.encode(message.storageReadResponse, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                if (message.storageWriteRequest != null && Object.hasOwnProperty.call(message, "storageWriteRequest"))
                    $root.PB_Storage.WriteRequest.encode(message.storageWriteRequest, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                if (message.storageDeleteRequest != null && Object.hasOwnProperty.call(message, "storageDeleteRequest"))
                    $root.PB_Storage.DeleteRequest.encode(message.storageDeleteRequest, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                if (message.storageMkdirRequest != null && Object.hasOwnProperty.call(message, "storageMkdirRequest"))
                    $root.PB_Storage.MkdirRequest.encode(message.storageMkdirRequest, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                if (message.storageMd5sumRequest != null && Object.hasOwnProperty.call(message, "storageMd5sumRequest"))
                    $root.PB_Storage.Md5sumRequest.encode(message.storageMd5sumRequest, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                if (message.storageMd5sumResponse != null && Object.hasOwnProperty.call(message, "storageMd5sumResponse"))
                    $root.PB_Storage.Md5sumResponse.encode(message.storageMd5sumResponse, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                if (message.appStartRequest != null && Object.hasOwnProperty.call(message, "appStartRequest"))
                    $root.PB_App.StartRequest.encode(message.appStartRequest, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                if (message.appLockStatusRequest != null && Object.hasOwnProperty.call(message, "appLockStatusRequest"))
                    $root.PB_App.LockStatusRequest.encode(message.appLockStatusRequest, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                if (message.appLockStatusResponse != null && Object.hasOwnProperty.call(message, "appLockStatusResponse"))
                    $root.PB_App.LockStatusResponse.encode(message.appLockStatusResponse, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                if (message.stopSession != null && Object.hasOwnProperty.call(message, "stopSession"))
                    $root.PB.StopSession.encode(message.stopSession, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                if (message.guiStartScreenStreamRequest != null && Object.hasOwnProperty.call(message, "guiStartScreenStreamRequest"))
                    $root.PB_Gui.StartScreenStreamRequest.encode(message.guiStartScreenStreamRequest, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                if (message.guiStopScreenStreamRequest != null && Object.hasOwnProperty.call(message, "guiStopScreenStreamRequest"))
                    $root.PB_Gui.StopScreenStreamRequest.encode(message.guiStopScreenStreamRequest, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                if (message.guiScreenFrame != null && Object.hasOwnProperty.call(message, "guiScreenFrame"))
                    $root.PB_Gui.ScreenFrame.encode(message.guiScreenFrame, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                if (message.guiSendInputEventRequest != null && Object.hasOwnProperty.call(message, "guiSendInputEventRequest"))
                    $root.PB_Gui.SendInputEventRequest.encode(message.guiSendInputEventRequest, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                if (message.storageStatRequest != null && Object.hasOwnProperty.call(message, "storageStatRequest"))
                    $root.PB_Storage.StatRequest.encode(message.storageStatRequest, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                if (message.storageStatResponse != null && Object.hasOwnProperty.call(message, "storageStatResponse"))
                    $root.PB_Storage.StatResponse.encode(message.storageStatResponse, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                if (message.guiStartVirtualDisplayRequest != null && Object.hasOwnProperty.call(message, "guiStartVirtualDisplayRequest"))
                    $root.PB_Gui.StartVirtualDisplayRequest.encode(message.guiStartVirtualDisplayRequest, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                if (message.guiStopVirtualDisplayRequest != null && Object.hasOwnProperty.call(message, "guiStopVirtualDisplayRequest"))
                    $root.PB_Gui.StopVirtualDisplayRequest.encode(message.guiStopVirtualDisplayRequest, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                if (message.storageInfoRequest != null && Object.hasOwnProperty.call(message, "storageInfoRequest"))
                    $root.PB_Storage.InfoRequest.encode(message.storageInfoRequest, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                if (message.storageInfoResponse != null && Object.hasOwnProperty.call(message, "storageInfoResponse"))
                    $root.PB_Storage.InfoResponse.encode(message.storageInfoResponse, writer.uint32(/* id 29, wireType 2 =*/234).fork()).ldelim();
                if (message.storageRenameRequest != null && Object.hasOwnProperty.call(message, "storageRenameRequest"))
                    $root.PB_Storage.RenameRequest.encode(message.storageRenameRequest, writer.uint32(/* id 30, wireType 2 =*/242).fork()).ldelim();
                if (message.systemRebootRequest != null && Object.hasOwnProperty.call(message, "systemRebootRequest"))
                    $root.PB_System.RebootRequest.encode(message.systemRebootRequest, writer.uint32(/* id 31, wireType 2 =*/250).fork()).ldelim();
                if (message.systemDeviceInfoRequest != null && Object.hasOwnProperty.call(message, "systemDeviceInfoRequest"))
                    $root.PB_System.DeviceInfoRequest.encode(message.systemDeviceInfoRequest, writer.uint32(/* id 32, wireType 2 =*/258).fork()).ldelim();
                if (message.systemDeviceInfoResponse != null && Object.hasOwnProperty.call(message, "systemDeviceInfoResponse"))
                    $root.PB_System.DeviceInfoResponse.encode(message.systemDeviceInfoResponse, writer.uint32(/* id 33, wireType 2 =*/266).fork()).ldelim();
                if (message.systemFactoryResetRequest != null && Object.hasOwnProperty.call(message, "systemFactoryResetRequest"))
                    $root.PB_System.FactoryResetRequest.encode(message.systemFactoryResetRequest, writer.uint32(/* id 34, wireType 2 =*/274).fork()).ldelim();
                if (message.systemGetDatetimeRequest != null && Object.hasOwnProperty.call(message, "systemGetDatetimeRequest"))
                    $root.PB_System.GetDateTimeRequest.encode(message.systemGetDatetimeRequest, writer.uint32(/* id 35, wireType 2 =*/282).fork()).ldelim();
                if (message.systemGetDatetimeResponse != null && Object.hasOwnProperty.call(message, "systemGetDatetimeResponse"))
                    $root.PB_System.GetDateTimeResponse.encode(message.systemGetDatetimeResponse, writer.uint32(/* id 36, wireType 2 =*/290).fork()).ldelim();
                if (message.systemSetDatetimeRequest != null && Object.hasOwnProperty.call(message, "systemSetDatetimeRequest"))
                    $root.PB_System.SetDateTimeRequest.encode(message.systemSetDatetimeRequest, writer.uint32(/* id 37, wireType 2 =*/298).fork()).ldelim();
                if (message.systemPlayAudiovisualAlertRequest != null && Object.hasOwnProperty.call(message, "systemPlayAudiovisualAlertRequest"))
                    $root.PB_System.PlayAudiovisualAlertRequest.encode(message.systemPlayAudiovisualAlertRequest, writer.uint32(/* id 38, wireType 2 =*/306).fork()).ldelim();
                if (message.systemProtobufVersionRequest != null && Object.hasOwnProperty.call(message, "systemProtobufVersionRequest"))
                    $root.PB_System.ProtobufVersionRequest.encode(message.systemProtobufVersionRequest, writer.uint32(/* id 39, wireType 2 =*/314).fork()).ldelim();
                if (message.systemProtobufVersionResponse != null && Object.hasOwnProperty.call(message, "systemProtobufVersionResponse"))
                    $root.PB_System.ProtobufVersionResponse.encode(message.systemProtobufVersionResponse, writer.uint32(/* id 40, wireType 2 =*/322).fork()).ldelim();
                if (message.systemUpdateRequest != null && Object.hasOwnProperty.call(message, "systemUpdateRequest"))
                    $root.PB_System.UpdateRequest.encode(message.systemUpdateRequest, writer.uint32(/* id 41, wireType 2 =*/330).fork()).ldelim();
                if (message.storageBackupCreateRequest != null && Object.hasOwnProperty.call(message, "storageBackupCreateRequest"))
                    $root.PB_Storage.BackupCreateRequest.encode(message.storageBackupCreateRequest, writer.uint32(/* id 42, wireType 2 =*/338).fork()).ldelim();
                if (message.storageBackupRestoreRequest != null && Object.hasOwnProperty.call(message, "storageBackupRestoreRequest"))
                    $root.PB_Storage.BackupRestoreRequest.encode(message.storageBackupRestoreRequest, writer.uint32(/* id 43, wireType 2 =*/346).fork()).ldelim();
                if (message.systemPowerInfoRequest != null && Object.hasOwnProperty.call(message, "systemPowerInfoRequest"))
                    $root.PB_System.PowerInfoRequest.encode(message.systemPowerInfoRequest, writer.uint32(/* id 44, wireType 2 =*/354).fork()).ldelim();
                if (message.systemPowerInfoResponse != null && Object.hasOwnProperty.call(message, "systemPowerInfoResponse"))
                    $root.PB_System.PowerInfoResponse.encode(message.systemPowerInfoResponse, writer.uint32(/* id 45, wireType 2 =*/362).fork()).ldelim();
                if (message.systemUpdateResponse != null && Object.hasOwnProperty.call(message, "systemUpdateResponse"))
                    $root.PB_System.UpdateResponse.encode(message.systemUpdateResponse, writer.uint32(/* id 46, wireType 2 =*/370).fork()).ldelim();
                if (message.appExitRequest != null && Object.hasOwnProperty.call(message, "appExitRequest"))
                    $root.PB_App.AppExitRequest.encode(message.appExitRequest, writer.uint32(/* id 47, wireType 2 =*/378).fork()).ldelim();
                if (message.appLoadFileRequest != null && Object.hasOwnProperty.call(message, "appLoadFileRequest"))
                    $root.PB_App.AppLoadFileRequest.encode(message.appLoadFileRequest, writer.uint32(/* id 48, wireType 2 =*/386).fork()).ldelim();
                if (message.appButtonPressRequest != null && Object.hasOwnProperty.call(message, "appButtonPressRequest"))
                    $root.PB_App.AppButtonPressRequest.encode(message.appButtonPressRequest, writer.uint32(/* id 49, wireType 2 =*/394).fork()).ldelim();
                if (message.appButtonReleaseRequest != null && Object.hasOwnProperty.call(message, "appButtonReleaseRequest"))
                    $root.PB_App.AppButtonReleaseRequest.encode(message.appButtonReleaseRequest, writer.uint32(/* id 50, wireType 2 =*/402).fork()).ldelim();
                if (message.gpioSetPinMode != null && Object.hasOwnProperty.call(message, "gpioSetPinMode"))
                    $root.PB_Gpio.SetPinMode.encode(message.gpioSetPinMode, writer.uint32(/* id 51, wireType 2 =*/410).fork()).ldelim();
                if (message.gpioSetInputPull != null && Object.hasOwnProperty.call(message, "gpioSetInputPull"))
                    $root.PB_Gpio.SetInputPull.encode(message.gpioSetInputPull, writer.uint32(/* id 52, wireType 2 =*/418).fork()).ldelim();
                if (message.gpioGetPinMode != null && Object.hasOwnProperty.call(message, "gpioGetPinMode"))
                    $root.PB_Gpio.GetPinMode.encode(message.gpioGetPinMode, writer.uint32(/* id 53, wireType 2 =*/426).fork()).ldelim();
                if (message.gpioGetPinModeResponse != null && Object.hasOwnProperty.call(message, "gpioGetPinModeResponse"))
                    $root.PB_Gpio.GetPinModeResponse.encode(message.gpioGetPinModeResponse, writer.uint32(/* id 54, wireType 2 =*/434).fork()).ldelim();
                if (message.gpioReadPin != null && Object.hasOwnProperty.call(message, "gpioReadPin"))
                    $root.PB_Gpio.ReadPin.encode(message.gpioReadPin, writer.uint32(/* id 55, wireType 2 =*/442).fork()).ldelim();
                if (message.gpioReadPinResponse != null && Object.hasOwnProperty.call(message, "gpioReadPinResponse"))
                    $root.PB_Gpio.ReadPinResponse.encode(message.gpioReadPinResponse, writer.uint32(/* id 56, wireType 2 =*/450).fork()).ldelim();
                if (message.gpioWritePin != null && Object.hasOwnProperty.call(message, "gpioWritePin"))
                    $root.PB_Gpio.WritePin.encode(message.gpioWritePin, writer.uint32(/* id 57, wireType 2 =*/458).fork()).ldelim();
                if (message.appStateResponse != null && Object.hasOwnProperty.call(message, "appStateResponse"))
                    $root.PB_App.AppStateResponse.encode(message.appStateResponse, writer.uint32(/* id 58, wireType 2 =*/466).fork()).ldelim();
                if (message.storageTimestampRequest != null && Object.hasOwnProperty.call(message, "storageTimestampRequest"))
                    $root.PB_Storage.TimestampRequest.encode(message.storageTimestampRequest, writer.uint32(/* id 59, wireType 2 =*/474).fork()).ldelim();
                if (message.storageTimestampResponse != null && Object.hasOwnProperty.call(message, "storageTimestampResponse"))
                    $root.PB_Storage.TimestampResponse.encode(message.storageTimestampResponse, writer.uint32(/* id 60, wireType 2 =*/482).fork()).ldelim();
                if (message.propertyGetRequest != null && Object.hasOwnProperty.call(message, "propertyGetRequest"))
                    $root.PB_Property.GetRequest.encode(message.propertyGetRequest, writer.uint32(/* id 61, wireType 2 =*/490).fork()).ldelim();
                if (message.propertyGetResponse != null && Object.hasOwnProperty.call(message, "propertyGetResponse"))
                    $root.PB_Property.GetResponse.encode(message.propertyGetResponse, writer.uint32(/* id 62, wireType 2 =*/498).fork()).ldelim();
                if (message.appGetErrorRequest != null && Object.hasOwnProperty.call(message, "appGetErrorRequest"))
                    $root.PB_App.GetErrorRequest.encode(message.appGetErrorRequest, writer.uint32(/* id 63, wireType 2 =*/506).fork()).ldelim();
                if (message.appGetErrorResponse != null && Object.hasOwnProperty.call(message, "appGetErrorResponse"))
                    $root.PB_App.GetErrorResponse.encode(message.appGetErrorResponse, writer.uint32(/* id 64, wireType 2 =*/514).fork()).ldelim();
                if (message.appDataExchangeRequest != null && Object.hasOwnProperty.call(message, "appDataExchangeRequest"))
                    $root.PB_App.DataExchangeRequest.encode(message.appDataExchangeRequest, writer.uint32(/* id 65, wireType 2 =*/522).fork()).ldelim();
                if (message.desktopIsLockedRequest != null && Object.hasOwnProperty.call(message, "desktopIsLockedRequest"))
                    $root.PB_Desktop.IsLockedRequest.encode(message.desktopIsLockedRequest, writer.uint32(/* id 66, wireType 2 =*/530).fork()).ldelim();
                if (message.desktopUnlockRequest != null && Object.hasOwnProperty.call(message, "desktopUnlockRequest"))
                    $root.PB_Desktop.UnlockRequest.encode(message.desktopUnlockRequest, writer.uint32(/* id 67, wireType 2 =*/538).fork()).ldelim();
                if (message.desktopStatusSubscribeRequest != null && Object.hasOwnProperty.call(message, "desktopStatusSubscribeRequest"))
                    $root.PB_Desktop.StatusSubscribeRequest.encode(message.desktopStatusSubscribeRequest, writer.uint32(/* id 68, wireType 2 =*/546).fork()).ldelim();
                if (message.desktopStatusUnsubscribeRequest != null && Object.hasOwnProperty.call(message, "desktopStatusUnsubscribeRequest"))
                    $root.PB_Desktop.StatusUnsubscribeRequest.encode(message.desktopStatusUnsubscribeRequest, writer.uint32(/* id 69, wireType 2 =*/554).fork()).ldelim();
                if (message.desktopStatus != null && Object.hasOwnProperty.call(message, "desktopStatus"))
                    $root.PB_Desktop.Status.encode(message.desktopStatus, writer.uint32(/* id 70, wireType 2 =*/562).fork()).ldelim();
                if (message.storageTarExtractRequest != null && Object.hasOwnProperty.call(message, "storageTarExtractRequest"))
                    $root.PB_Storage.TarExtractRequest.encode(message.storageTarExtractRequest, writer.uint32(/* id 71, wireType 2 =*/570).fork()).ldelim();
                if (message.gpioGetOtgMode != null && Object.hasOwnProperty.call(message, "gpioGetOtgMode"))
                    $root.PB_Gpio.GetOtgMode.encode(message.gpioGetOtgMode, writer.uint32(/* id 72, wireType 2 =*/578).fork()).ldelim();
                if (message.gpioGetOtgModeResponse != null && Object.hasOwnProperty.call(message, "gpioGetOtgModeResponse"))
                    $root.PB_Gpio.GetOtgModeResponse.encode(message.gpioGetOtgModeResponse, writer.uint32(/* id 73, wireType 2 =*/586).fork()).ldelim();
                if (message.gpioSetOtgMode != null && Object.hasOwnProperty.call(message, "gpioSetOtgMode"))
                    $root.PB_Gpio.SetOtgMode.encode(message.gpioSetOtgMode, writer.uint32(/* id 74, wireType 2 =*/594).fork()).ldelim();
                if (message.appButtonPressReleaseRequest != null && Object.hasOwnProperty.call(message, "appButtonPressReleaseRequest"))
                    $root.PB_App.AppButtonPressReleaseRequest.encode(message.appButtonPressReleaseRequest, writer.uint32(/* id 75, wireType 2 =*/602).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified Main message, length delimited. Does not implicitly {@link PB.Main.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB.Main
             * @static
             * @param {PB.IMain} message Main message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Main.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Main message from the specified reader or buffer.
             * @function decode
             * @memberof PB.Main
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB.Main} Main
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Main.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB.Main();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.commandId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.commandStatus = reader.int32();
                            break;
                        }
                    case 3: {
                            message.hasNext = reader.bool();
                            break;
                        }
                    case 4: {
                            message.empty = $root.PB.Empty.decode(reader, reader.uint32());
                            break;
                        }
                    case 19: {
                            message.stopSession = $root.PB.StopSession.decode(reader, reader.uint32());
                            break;
                        }
                    case 5: {
                            message.systemPingRequest = $root.PB_System.PingRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 6: {
                            message.systemPingResponse = $root.PB_System.PingResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 31: {
                            message.systemRebootRequest = $root.PB_System.RebootRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 32: {
                            message.systemDeviceInfoRequest = $root.PB_System.DeviceInfoRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 33: {
                            message.systemDeviceInfoResponse = $root.PB_System.DeviceInfoResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 34: {
                            message.systemFactoryResetRequest = $root.PB_System.FactoryResetRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 35: {
                            message.systemGetDatetimeRequest = $root.PB_System.GetDateTimeRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 36: {
                            message.systemGetDatetimeResponse = $root.PB_System.GetDateTimeResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 37: {
                            message.systemSetDatetimeRequest = $root.PB_System.SetDateTimeRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 38: {
                            message.systemPlayAudiovisualAlertRequest = $root.PB_System.PlayAudiovisualAlertRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 39: {
                            message.systemProtobufVersionRequest = $root.PB_System.ProtobufVersionRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 40: {
                            message.systemProtobufVersionResponse = $root.PB_System.ProtobufVersionResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 41: {
                            message.systemUpdateRequest = $root.PB_System.UpdateRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 46: {
                            message.systemUpdateResponse = $root.PB_System.UpdateResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 44: {
                            message.systemPowerInfoRequest = $root.PB_System.PowerInfoRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 45: {
                            message.systemPowerInfoResponse = $root.PB_System.PowerInfoResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 28: {
                            message.storageInfoRequest = $root.PB_Storage.InfoRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 29: {
                            message.storageInfoResponse = $root.PB_Storage.InfoResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 59: {
                            message.storageTimestampRequest = $root.PB_Storage.TimestampRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 60: {
                            message.storageTimestampResponse = $root.PB_Storage.TimestampResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 24: {
                            message.storageStatRequest = $root.PB_Storage.StatRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 25: {
                            message.storageStatResponse = $root.PB_Storage.StatResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 7: {
                            message.storageListRequest = $root.PB_Storage.ListRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 8: {
                            message.storageListResponse = $root.PB_Storage.ListResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 9: {
                            message.storageReadRequest = $root.PB_Storage.ReadRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 10: {
                            message.storageReadResponse = $root.PB_Storage.ReadResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 11: {
                            message.storageWriteRequest = $root.PB_Storage.WriteRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 12: {
                            message.storageDeleteRequest = $root.PB_Storage.DeleteRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 13: {
                            message.storageMkdirRequest = $root.PB_Storage.MkdirRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 14: {
                            message.storageMd5sumRequest = $root.PB_Storage.Md5sumRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 15: {
                            message.storageMd5sumResponse = $root.PB_Storage.Md5sumResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 30: {
                            message.storageRenameRequest = $root.PB_Storage.RenameRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 42: {
                            message.storageBackupCreateRequest = $root.PB_Storage.BackupCreateRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 43: {
                            message.storageBackupRestoreRequest = $root.PB_Storage.BackupRestoreRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 71: {
                            message.storageTarExtractRequest = $root.PB_Storage.TarExtractRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 16: {
                            message.appStartRequest = $root.PB_App.StartRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 17: {
                            message.appLockStatusRequest = $root.PB_App.LockStatusRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 18: {
                            message.appLockStatusResponse = $root.PB_App.LockStatusResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 47: {
                            message.appExitRequest = $root.PB_App.AppExitRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 48: {
                            message.appLoadFileRequest = $root.PB_App.AppLoadFileRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 49: {
                            message.appButtonPressRequest = $root.PB_App.AppButtonPressRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 50: {
                            message.appButtonReleaseRequest = $root.PB_App.AppButtonReleaseRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 75: {
                            message.appButtonPressReleaseRequest = $root.PB_App.AppButtonPressReleaseRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 63: {
                            message.appGetErrorRequest = $root.PB_App.GetErrorRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 64: {
                            message.appGetErrorResponse = $root.PB_App.GetErrorResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 65: {
                            message.appDataExchangeRequest = $root.PB_App.DataExchangeRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 20: {
                            message.guiStartScreenStreamRequest = $root.PB_Gui.StartScreenStreamRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 21: {
                            message.guiStopScreenStreamRequest = $root.PB_Gui.StopScreenStreamRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 22: {
                            message.guiScreenFrame = $root.PB_Gui.ScreenFrame.decode(reader, reader.uint32());
                            break;
                        }
                    case 23: {
                            message.guiSendInputEventRequest = $root.PB_Gui.SendInputEventRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 26: {
                            message.guiStartVirtualDisplayRequest = $root.PB_Gui.StartVirtualDisplayRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 27: {
                            message.guiStopVirtualDisplayRequest = $root.PB_Gui.StopVirtualDisplayRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 51: {
                            message.gpioSetPinMode = $root.PB_Gpio.SetPinMode.decode(reader, reader.uint32());
                            break;
                        }
                    case 52: {
                            message.gpioSetInputPull = $root.PB_Gpio.SetInputPull.decode(reader, reader.uint32());
                            break;
                        }
                    case 53: {
                            message.gpioGetPinMode = $root.PB_Gpio.GetPinMode.decode(reader, reader.uint32());
                            break;
                        }
                    case 54: {
                            message.gpioGetPinModeResponse = $root.PB_Gpio.GetPinModeResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 55: {
                            message.gpioReadPin = $root.PB_Gpio.ReadPin.decode(reader, reader.uint32());
                            break;
                        }
                    case 56: {
                            message.gpioReadPinResponse = $root.PB_Gpio.ReadPinResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 57: {
                            message.gpioWritePin = $root.PB_Gpio.WritePin.decode(reader, reader.uint32());
                            break;
                        }
                    case 72: {
                            message.gpioGetOtgMode = $root.PB_Gpio.GetOtgMode.decode(reader, reader.uint32());
                            break;
                        }
                    case 73: {
                            message.gpioGetOtgModeResponse = $root.PB_Gpio.GetOtgModeResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 74: {
                            message.gpioSetOtgMode = $root.PB_Gpio.SetOtgMode.decode(reader, reader.uint32());
                            break;
                        }
                    case 58: {
                            message.appStateResponse = $root.PB_App.AppStateResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 61: {
                            message.propertyGetRequest = $root.PB_Property.GetRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 62: {
                            message.propertyGetResponse = $root.PB_Property.GetResponse.decode(reader, reader.uint32());
                            break;
                        }
                    case 66: {
                            message.desktopIsLockedRequest = $root.PB_Desktop.IsLockedRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 67: {
                            message.desktopUnlockRequest = $root.PB_Desktop.UnlockRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 68: {
                            message.desktopStatusSubscribeRequest = $root.PB_Desktop.StatusSubscribeRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 69: {
                            message.desktopStatusUnsubscribeRequest = $root.PB_Desktop.StatusUnsubscribeRequest.decode(reader, reader.uint32());
                            break;
                        }
                    case 70: {
                            message.desktopStatus = $root.PB_Desktop.Status.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Main message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB.Main
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB.Main} Main
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Main.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Main message.
             * @function verify
             * @memberof PB.Main
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Main.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                var properties = {};
                if (message.commandId != null && message.hasOwnProperty("commandId"))
                    if (!$util.isInteger(message.commandId))
                        return "commandId: integer expected";
                if (message.commandStatus != null && message.hasOwnProperty("commandStatus"))
                    switch (message.commandStatus) {
                    default:
                        return "commandStatus: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 14:
                    case 15:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 18:
                    case 16:
                    case 17:
                    case 21:
                    case 22:
                    case 19:
                    case 20:
                    case 58:
                    case 59:
                        break;
                    }
                if (message.hasNext != null && message.hasOwnProperty("hasNext"))
                    if (typeof message.hasNext !== "boolean")
                        return "hasNext: boolean expected";
                if (message.empty != null && message.hasOwnProperty("empty")) {
                    properties.content = 1;
                    {
                        var error = $root.PB.Empty.verify(message.empty);
                        if (error)
                            return "empty." + error;
                    }
                }
                if (message.stopSession != null && message.hasOwnProperty("stopSession")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB.StopSession.verify(message.stopSession);
                        if (error)
                            return "stopSession." + error;
                    }
                }
                if (message.systemPingRequest != null && message.hasOwnProperty("systemPingRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.PingRequest.verify(message.systemPingRequest);
                        if (error)
                            return "systemPingRequest." + error;
                    }
                }
                if (message.systemPingResponse != null && message.hasOwnProperty("systemPingResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.PingResponse.verify(message.systemPingResponse);
                        if (error)
                            return "systemPingResponse." + error;
                    }
                }
                if (message.systemRebootRequest != null && message.hasOwnProperty("systemRebootRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.RebootRequest.verify(message.systemRebootRequest);
                        if (error)
                            return "systemRebootRequest." + error;
                    }
                }
                if (message.systemDeviceInfoRequest != null && message.hasOwnProperty("systemDeviceInfoRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.DeviceInfoRequest.verify(message.systemDeviceInfoRequest);
                        if (error)
                            return "systemDeviceInfoRequest." + error;
                    }
                }
                if (message.systemDeviceInfoResponse != null && message.hasOwnProperty("systemDeviceInfoResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.DeviceInfoResponse.verify(message.systemDeviceInfoResponse);
                        if (error)
                            return "systemDeviceInfoResponse." + error;
                    }
                }
                if (message.systemFactoryResetRequest != null && message.hasOwnProperty("systemFactoryResetRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.FactoryResetRequest.verify(message.systemFactoryResetRequest);
                        if (error)
                            return "systemFactoryResetRequest." + error;
                    }
                }
                if (message.systemGetDatetimeRequest != null && message.hasOwnProperty("systemGetDatetimeRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.GetDateTimeRequest.verify(message.systemGetDatetimeRequest);
                        if (error)
                            return "systemGetDatetimeRequest." + error;
                    }
                }
                if (message.systemGetDatetimeResponse != null && message.hasOwnProperty("systemGetDatetimeResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.GetDateTimeResponse.verify(message.systemGetDatetimeResponse);
                        if (error)
                            return "systemGetDatetimeResponse." + error;
                    }
                }
                if (message.systemSetDatetimeRequest != null && message.hasOwnProperty("systemSetDatetimeRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.SetDateTimeRequest.verify(message.systemSetDatetimeRequest);
                        if (error)
                            return "systemSetDatetimeRequest." + error;
                    }
                }
                if (message.systemPlayAudiovisualAlertRequest != null && message.hasOwnProperty("systemPlayAudiovisualAlertRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.PlayAudiovisualAlertRequest.verify(message.systemPlayAudiovisualAlertRequest);
                        if (error)
                            return "systemPlayAudiovisualAlertRequest." + error;
                    }
                }
                if (message.systemProtobufVersionRequest != null && message.hasOwnProperty("systemProtobufVersionRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.ProtobufVersionRequest.verify(message.systemProtobufVersionRequest);
                        if (error)
                            return "systemProtobufVersionRequest." + error;
                    }
                }
                if (message.systemProtobufVersionResponse != null && message.hasOwnProperty("systemProtobufVersionResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.ProtobufVersionResponse.verify(message.systemProtobufVersionResponse);
                        if (error)
                            return "systemProtobufVersionResponse." + error;
                    }
                }
                if (message.systemUpdateRequest != null && message.hasOwnProperty("systemUpdateRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.UpdateRequest.verify(message.systemUpdateRequest);
                        if (error)
                            return "systemUpdateRequest." + error;
                    }
                }
                if (message.systemUpdateResponse != null && message.hasOwnProperty("systemUpdateResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.UpdateResponse.verify(message.systemUpdateResponse);
                        if (error)
                            return "systemUpdateResponse." + error;
                    }
                }
                if (message.systemPowerInfoRequest != null && message.hasOwnProperty("systemPowerInfoRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.PowerInfoRequest.verify(message.systemPowerInfoRequest);
                        if (error)
                            return "systemPowerInfoRequest." + error;
                    }
                }
                if (message.systemPowerInfoResponse != null && message.hasOwnProperty("systemPowerInfoResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_System.PowerInfoResponse.verify(message.systemPowerInfoResponse);
                        if (error)
                            return "systemPowerInfoResponse." + error;
                    }
                }
                if (message.storageInfoRequest != null && message.hasOwnProperty("storageInfoRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.InfoRequest.verify(message.storageInfoRequest);
                        if (error)
                            return "storageInfoRequest." + error;
                    }
                }
                if (message.storageInfoResponse != null && message.hasOwnProperty("storageInfoResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.InfoResponse.verify(message.storageInfoResponse);
                        if (error)
                            return "storageInfoResponse." + error;
                    }
                }
                if (message.storageTimestampRequest != null && message.hasOwnProperty("storageTimestampRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.TimestampRequest.verify(message.storageTimestampRequest);
                        if (error)
                            return "storageTimestampRequest." + error;
                    }
                }
                if (message.storageTimestampResponse != null && message.hasOwnProperty("storageTimestampResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.TimestampResponse.verify(message.storageTimestampResponse);
                        if (error)
                            return "storageTimestampResponse." + error;
                    }
                }
                if (message.storageStatRequest != null && message.hasOwnProperty("storageStatRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.StatRequest.verify(message.storageStatRequest);
                        if (error)
                            return "storageStatRequest." + error;
                    }
                }
                if (message.storageStatResponse != null && message.hasOwnProperty("storageStatResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.StatResponse.verify(message.storageStatResponse);
                        if (error)
                            return "storageStatResponse." + error;
                    }
                }
                if (message.storageListRequest != null && message.hasOwnProperty("storageListRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.ListRequest.verify(message.storageListRequest);
                        if (error)
                            return "storageListRequest." + error;
                    }
                }
                if (message.storageListResponse != null && message.hasOwnProperty("storageListResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.ListResponse.verify(message.storageListResponse);
                        if (error)
                            return "storageListResponse." + error;
                    }
                }
                if (message.storageReadRequest != null && message.hasOwnProperty("storageReadRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.ReadRequest.verify(message.storageReadRequest);
                        if (error)
                            return "storageReadRequest." + error;
                    }
                }
                if (message.storageReadResponse != null && message.hasOwnProperty("storageReadResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.ReadResponse.verify(message.storageReadResponse);
                        if (error)
                            return "storageReadResponse." + error;
                    }
                }
                if (message.storageWriteRequest != null && message.hasOwnProperty("storageWriteRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.WriteRequest.verify(message.storageWriteRequest);
                        if (error)
                            return "storageWriteRequest." + error;
                    }
                }
                if (message.storageDeleteRequest != null && message.hasOwnProperty("storageDeleteRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.DeleteRequest.verify(message.storageDeleteRequest);
                        if (error)
                            return "storageDeleteRequest." + error;
                    }
                }
                if (message.storageMkdirRequest != null && message.hasOwnProperty("storageMkdirRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.MkdirRequest.verify(message.storageMkdirRequest);
                        if (error)
                            return "storageMkdirRequest." + error;
                    }
                }
                if (message.storageMd5sumRequest != null && message.hasOwnProperty("storageMd5sumRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.Md5sumRequest.verify(message.storageMd5sumRequest);
                        if (error)
                            return "storageMd5sumRequest." + error;
                    }
                }
                if (message.storageMd5sumResponse != null && message.hasOwnProperty("storageMd5sumResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.Md5sumResponse.verify(message.storageMd5sumResponse);
                        if (error)
                            return "storageMd5sumResponse." + error;
                    }
                }
                if (message.storageRenameRequest != null && message.hasOwnProperty("storageRenameRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.RenameRequest.verify(message.storageRenameRequest);
                        if (error)
                            return "storageRenameRequest." + error;
                    }
                }
                if (message.storageBackupCreateRequest != null && message.hasOwnProperty("storageBackupCreateRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.BackupCreateRequest.verify(message.storageBackupCreateRequest);
                        if (error)
                            return "storageBackupCreateRequest." + error;
                    }
                }
                if (message.storageBackupRestoreRequest != null && message.hasOwnProperty("storageBackupRestoreRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.BackupRestoreRequest.verify(message.storageBackupRestoreRequest);
                        if (error)
                            return "storageBackupRestoreRequest." + error;
                    }
                }
                if (message.storageTarExtractRequest != null && message.hasOwnProperty("storageTarExtractRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Storage.TarExtractRequest.verify(message.storageTarExtractRequest);
                        if (error)
                            return "storageTarExtractRequest." + error;
                    }
                }
                if (message.appStartRequest != null && message.hasOwnProperty("appStartRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_App.StartRequest.verify(message.appStartRequest);
                        if (error)
                            return "appStartRequest." + error;
                    }
                }
                if (message.appLockStatusRequest != null && message.hasOwnProperty("appLockStatusRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_App.LockStatusRequest.verify(message.appLockStatusRequest);
                        if (error)
                            return "appLockStatusRequest." + error;
                    }
                }
                if (message.appLockStatusResponse != null && message.hasOwnProperty("appLockStatusResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_App.LockStatusResponse.verify(message.appLockStatusResponse);
                        if (error)
                            return "appLockStatusResponse." + error;
                    }
                }
                if (message.appExitRequest != null && message.hasOwnProperty("appExitRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_App.AppExitRequest.verify(message.appExitRequest);
                        if (error)
                            return "appExitRequest." + error;
                    }
                }
                if (message.appLoadFileRequest != null && message.hasOwnProperty("appLoadFileRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_App.AppLoadFileRequest.verify(message.appLoadFileRequest);
                        if (error)
                            return "appLoadFileRequest." + error;
                    }
                }
                if (message.appButtonPressRequest != null && message.hasOwnProperty("appButtonPressRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_App.AppButtonPressRequest.verify(message.appButtonPressRequest);
                        if (error)
                            return "appButtonPressRequest." + error;
                    }
                }
                if (message.appButtonReleaseRequest != null && message.hasOwnProperty("appButtonReleaseRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_App.AppButtonReleaseRequest.verify(message.appButtonReleaseRequest);
                        if (error)
                            return "appButtonReleaseRequest." + error;
                    }
                }
                if (message.appButtonPressReleaseRequest != null && message.hasOwnProperty("appButtonPressReleaseRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_App.AppButtonPressReleaseRequest.verify(message.appButtonPressReleaseRequest);
                        if (error)
                            return "appButtonPressReleaseRequest." + error;
                    }
                }
                if (message.appGetErrorRequest != null && message.hasOwnProperty("appGetErrorRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_App.GetErrorRequest.verify(message.appGetErrorRequest);
                        if (error)
                            return "appGetErrorRequest." + error;
                    }
                }
                if (message.appGetErrorResponse != null && message.hasOwnProperty("appGetErrorResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_App.GetErrorResponse.verify(message.appGetErrorResponse);
                        if (error)
                            return "appGetErrorResponse." + error;
                    }
                }
                if (message.appDataExchangeRequest != null && message.hasOwnProperty("appDataExchangeRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_App.DataExchangeRequest.verify(message.appDataExchangeRequest);
                        if (error)
                            return "appDataExchangeRequest." + error;
                    }
                }
                if (message.guiStartScreenStreamRequest != null && message.hasOwnProperty("guiStartScreenStreamRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gui.StartScreenStreamRequest.verify(message.guiStartScreenStreamRequest);
                        if (error)
                            return "guiStartScreenStreamRequest." + error;
                    }
                }
                if (message.guiStopScreenStreamRequest != null && message.hasOwnProperty("guiStopScreenStreamRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gui.StopScreenStreamRequest.verify(message.guiStopScreenStreamRequest);
                        if (error)
                            return "guiStopScreenStreamRequest." + error;
                    }
                }
                if (message.guiScreenFrame != null && message.hasOwnProperty("guiScreenFrame")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gui.ScreenFrame.verify(message.guiScreenFrame);
                        if (error)
                            return "guiScreenFrame." + error;
                    }
                }
                if (message.guiSendInputEventRequest != null && message.hasOwnProperty("guiSendInputEventRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gui.SendInputEventRequest.verify(message.guiSendInputEventRequest);
                        if (error)
                            return "guiSendInputEventRequest." + error;
                    }
                }
                if (message.guiStartVirtualDisplayRequest != null && message.hasOwnProperty("guiStartVirtualDisplayRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gui.StartVirtualDisplayRequest.verify(message.guiStartVirtualDisplayRequest);
                        if (error)
                            return "guiStartVirtualDisplayRequest." + error;
                    }
                }
                if (message.guiStopVirtualDisplayRequest != null && message.hasOwnProperty("guiStopVirtualDisplayRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gui.StopVirtualDisplayRequest.verify(message.guiStopVirtualDisplayRequest);
                        if (error)
                            return "guiStopVirtualDisplayRequest." + error;
                    }
                }
                if (message.gpioSetPinMode != null && message.hasOwnProperty("gpioSetPinMode")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gpio.SetPinMode.verify(message.gpioSetPinMode);
                        if (error)
                            return "gpioSetPinMode." + error;
                    }
                }
                if (message.gpioSetInputPull != null && message.hasOwnProperty("gpioSetInputPull")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gpio.SetInputPull.verify(message.gpioSetInputPull);
                        if (error)
                            return "gpioSetInputPull." + error;
                    }
                }
                if (message.gpioGetPinMode != null && message.hasOwnProperty("gpioGetPinMode")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gpio.GetPinMode.verify(message.gpioGetPinMode);
                        if (error)
                            return "gpioGetPinMode." + error;
                    }
                }
                if (message.gpioGetPinModeResponse != null && message.hasOwnProperty("gpioGetPinModeResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gpio.GetPinModeResponse.verify(message.gpioGetPinModeResponse);
                        if (error)
                            return "gpioGetPinModeResponse." + error;
                    }
                }
                if (message.gpioReadPin != null && message.hasOwnProperty("gpioReadPin")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gpio.ReadPin.verify(message.gpioReadPin);
                        if (error)
                            return "gpioReadPin." + error;
                    }
                }
                if (message.gpioReadPinResponse != null && message.hasOwnProperty("gpioReadPinResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gpio.ReadPinResponse.verify(message.gpioReadPinResponse);
                        if (error)
                            return "gpioReadPinResponse." + error;
                    }
                }
                if (message.gpioWritePin != null && message.hasOwnProperty("gpioWritePin")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gpio.WritePin.verify(message.gpioWritePin);
                        if (error)
                            return "gpioWritePin." + error;
                    }
                }
                if (message.gpioGetOtgMode != null && message.hasOwnProperty("gpioGetOtgMode")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gpio.GetOtgMode.verify(message.gpioGetOtgMode);
                        if (error)
                            return "gpioGetOtgMode." + error;
                    }
                }
                if (message.gpioGetOtgModeResponse != null && message.hasOwnProperty("gpioGetOtgModeResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gpio.GetOtgModeResponse.verify(message.gpioGetOtgModeResponse);
                        if (error)
                            return "gpioGetOtgModeResponse." + error;
                    }
                }
                if (message.gpioSetOtgMode != null && message.hasOwnProperty("gpioSetOtgMode")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Gpio.SetOtgMode.verify(message.gpioSetOtgMode);
                        if (error)
                            return "gpioSetOtgMode." + error;
                    }
                }
                if (message.appStateResponse != null && message.hasOwnProperty("appStateResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_App.AppStateResponse.verify(message.appStateResponse);
                        if (error)
                            return "appStateResponse." + error;
                    }
                }
                if (message.propertyGetRequest != null && message.hasOwnProperty("propertyGetRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Property.GetRequest.verify(message.propertyGetRequest);
                        if (error)
                            return "propertyGetRequest." + error;
                    }
                }
                if (message.propertyGetResponse != null && message.hasOwnProperty("propertyGetResponse")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Property.GetResponse.verify(message.propertyGetResponse);
                        if (error)
                            return "propertyGetResponse." + error;
                    }
                }
                if (message.desktopIsLockedRequest != null && message.hasOwnProperty("desktopIsLockedRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Desktop.IsLockedRequest.verify(message.desktopIsLockedRequest);
                        if (error)
                            return "desktopIsLockedRequest." + error;
                    }
                }
                if (message.desktopUnlockRequest != null && message.hasOwnProperty("desktopUnlockRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Desktop.UnlockRequest.verify(message.desktopUnlockRequest);
                        if (error)
                            return "desktopUnlockRequest." + error;
                    }
                }
                if (message.desktopStatusSubscribeRequest != null && message.hasOwnProperty("desktopStatusSubscribeRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Desktop.StatusSubscribeRequest.verify(message.desktopStatusSubscribeRequest);
                        if (error)
                            return "desktopStatusSubscribeRequest." + error;
                    }
                }
                if (message.desktopStatusUnsubscribeRequest != null && message.hasOwnProperty("desktopStatusUnsubscribeRequest")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Desktop.StatusUnsubscribeRequest.verify(message.desktopStatusUnsubscribeRequest);
                        if (error)
                            return "desktopStatusUnsubscribeRequest." + error;
                    }
                }
                if (message.desktopStatus != null && message.hasOwnProperty("desktopStatus")) {
                    if (properties.content === 1)
                        return "content: multiple values";
                    properties.content = 1;
                    {
                        var error = $root.PB_Desktop.Status.verify(message.desktopStatus);
                        if (error)
                            return "desktopStatus." + error;
                    }
                }
                return null;
            };
    
            /**
             * Creates a Main message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB.Main
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB.Main} Main
             */
            Main.fromObject = function fromObject(object) {
                if (object instanceof $root.PB.Main)
                    return object;
                var message = new $root.PB.Main();
                if (object.commandId != null)
                    message.commandId = object.commandId >>> 0;
                switch (object.commandStatus) {
                default:
                    if (typeof object.commandStatus === "number") {
                        message.commandStatus = object.commandStatus;
                        break;
                    }
                    break;
                case "OK":
                case 0:
                    message.commandStatus = 0;
                    break;
                case "ERROR":
                case 1:
                    message.commandStatus = 1;
                    break;
                case "ERROR_DECODE":
                case 2:
                    message.commandStatus = 2;
                    break;
                case "ERROR_NOT_IMPLEMENTED":
                case 3:
                    message.commandStatus = 3;
                    break;
                case "ERROR_BUSY":
                case 4:
                    message.commandStatus = 4;
                    break;
                case "ERROR_CONTINUOUS_COMMAND_INTERRUPTED":
                case 14:
                    message.commandStatus = 14;
                    break;
                case "ERROR_INVALID_PARAMETERS":
                case 15:
                    message.commandStatus = 15;
                    break;
                case "ERROR_STORAGE_NOT_READY":
                case 5:
                    message.commandStatus = 5;
                    break;
                case "ERROR_STORAGE_EXIST":
                case 6:
                    message.commandStatus = 6;
                    break;
                case "ERROR_STORAGE_NOT_EXIST":
                case 7:
                    message.commandStatus = 7;
                    break;
                case "ERROR_STORAGE_INVALID_PARAMETER":
                case 8:
                    message.commandStatus = 8;
                    break;
                case "ERROR_STORAGE_DENIED":
                case 9:
                    message.commandStatus = 9;
                    break;
                case "ERROR_STORAGE_INVALID_NAME":
                case 10:
                    message.commandStatus = 10;
                    break;
                case "ERROR_STORAGE_INTERNAL":
                case 11:
                    message.commandStatus = 11;
                    break;
                case "ERROR_STORAGE_NOT_IMPLEMENTED":
                case 12:
                    message.commandStatus = 12;
                    break;
                case "ERROR_STORAGE_ALREADY_OPEN":
                case 13:
                    message.commandStatus = 13;
                    break;
                case "ERROR_STORAGE_DIR_NOT_EMPTY":
                case 18:
                    message.commandStatus = 18;
                    break;
                case "ERROR_APP_CANT_START":
                case 16:
                    message.commandStatus = 16;
                    break;
                case "ERROR_APP_SYSTEM_LOCKED":
                case 17:
                    message.commandStatus = 17;
                    break;
                case "ERROR_APP_NOT_RUNNING":
                case 21:
                    message.commandStatus = 21;
                    break;
                case "ERROR_APP_CMD_ERROR":
                case 22:
                    message.commandStatus = 22;
                    break;
                case "ERROR_VIRTUAL_DISPLAY_ALREADY_STARTED":
                case 19:
                    message.commandStatus = 19;
                    break;
                case "ERROR_VIRTUAL_DISPLAY_NOT_STARTED":
                case 20:
                    message.commandStatus = 20;
                    break;
                case "ERROR_GPIO_MODE_INCORRECT":
                case 58:
                    message.commandStatus = 58;
                    break;
                case "ERROR_GPIO_UNKNOWN_PIN_MODE":
                case 59:
                    message.commandStatus = 59;
                    break;
                }
                if (object.hasNext != null)
                    message.hasNext = Boolean(object.hasNext);
                if (object.empty != null) {
                    if (typeof object.empty !== "object")
                        throw TypeError(".PB.Main.empty: object expected");
                    message.empty = $root.PB.Empty.fromObject(object.empty);
                }
                if (object.stopSession != null) {
                    if (typeof object.stopSession !== "object")
                        throw TypeError(".PB.Main.stopSession: object expected");
                    message.stopSession = $root.PB.StopSession.fromObject(object.stopSession);
                }
                if (object.systemPingRequest != null) {
                    if (typeof object.systemPingRequest !== "object")
                        throw TypeError(".PB.Main.systemPingRequest: object expected");
                    message.systemPingRequest = $root.PB_System.PingRequest.fromObject(object.systemPingRequest);
                }
                if (object.systemPingResponse != null) {
                    if (typeof object.systemPingResponse !== "object")
                        throw TypeError(".PB.Main.systemPingResponse: object expected");
                    message.systemPingResponse = $root.PB_System.PingResponse.fromObject(object.systemPingResponse);
                }
                if (object.systemRebootRequest != null) {
                    if (typeof object.systemRebootRequest !== "object")
                        throw TypeError(".PB.Main.systemRebootRequest: object expected");
                    message.systemRebootRequest = $root.PB_System.RebootRequest.fromObject(object.systemRebootRequest);
                }
                if (object.systemDeviceInfoRequest != null) {
                    if (typeof object.systemDeviceInfoRequest !== "object")
                        throw TypeError(".PB.Main.systemDeviceInfoRequest: object expected");
                    message.systemDeviceInfoRequest = $root.PB_System.DeviceInfoRequest.fromObject(object.systemDeviceInfoRequest);
                }
                if (object.systemDeviceInfoResponse != null) {
                    if (typeof object.systemDeviceInfoResponse !== "object")
                        throw TypeError(".PB.Main.systemDeviceInfoResponse: object expected");
                    message.systemDeviceInfoResponse = $root.PB_System.DeviceInfoResponse.fromObject(object.systemDeviceInfoResponse);
                }
                if (object.systemFactoryResetRequest != null) {
                    if (typeof object.systemFactoryResetRequest !== "object")
                        throw TypeError(".PB.Main.systemFactoryResetRequest: object expected");
                    message.systemFactoryResetRequest = $root.PB_System.FactoryResetRequest.fromObject(object.systemFactoryResetRequest);
                }
                if (object.systemGetDatetimeRequest != null) {
                    if (typeof object.systemGetDatetimeRequest !== "object")
                        throw TypeError(".PB.Main.systemGetDatetimeRequest: object expected");
                    message.systemGetDatetimeRequest = $root.PB_System.GetDateTimeRequest.fromObject(object.systemGetDatetimeRequest);
                }
                if (object.systemGetDatetimeResponse != null) {
                    if (typeof object.systemGetDatetimeResponse !== "object")
                        throw TypeError(".PB.Main.systemGetDatetimeResponse: object expected");
                    message.systemGetDatetimeResponse = $root.PB_System.GetDateTimeResponse.fromObject(object.systemGetDatetimeResponse);
                }
                if (object.systemSetDatetimeRequest != null) {
                    if (typeof object.systemSetDatetimeRequest !== "object")
                        throw TypeError(".PB.Main.systemSetDatetimeRequest: object expected");
                    message.systemSetDatetimeRequest = $root.PB_System.SetDateTimeRequest.fromObject(object.systemSetDatetimeRequest);
                }
                if (object.systemPlayAudiovisualAlertRequest != null) {
                    if (typeof object.systemPlayAudiovisualAlertRequest !== "object")
                        throw TypeError(".PB.Main.systemPlayAudiovisualAlertRequest: object expected");
                    message.systemPlayAudiovisualAlertRequest = $root.PB_System.PlayAudiovisualAlertRequest.fromObject(object.systemPlayAudiovisualAlertRequest);
                }
                if (object.systemProtobufVersionRequest != null) {
                    if (typeof object.systemProtobufVersionRequest !== "object")
                        throw TypeError(".PB.Main.systemProtobufVersionRequest: object expected");
                    message.systemProtobufVersionRequest = $root.PB_System.ProtobufVersionRequest.fromObject(object.systemProtobufVersionRequest);
                }
                if (object.systemProtobufVersionResponse != null) {
                    if (typeof object.systemProtobufVersionResponse !== "object")
                        throw TypeError(".PB.Main.systemProtobufVersionResponse: object expected");
                    message.systemProtobufVersionResponse = $root.PB_System.ProtobufVersionResponse.fromObject(object.systemProtobufVersionResponse);
                }
                if (object.systemUpdateRequest != null) {
                    if (typeof object.systemUpdateRequest !== "object")
                        throw TypeError(".PB.Main.systemUpdateRequest: object expected");
                    message.systemUpdateRequest = $root.PB_System.UpdateRequest.fromObject(object.systemUpdateRequest);
                }
                if (object.systemUpdateResponse != null) {
                    if (typeof object.systemUpdateResponse !== "object")
                        throw TypeError(".PB.Main.systemUpdateResponse: object expected");
                    message.systemUpdateResponse = $root.PB_System.UpdateResponse.fromObject(object.systemUpdateResponse);
                }
                if (object.systemPowerInfoRequest != null) {
                    if (typeof object.systemPowerInfoRequest !== "object")
                        throw TypeError(".PB.Main.systemPowerInfoRequest: object expected");
                    message.systemPowerInfoRequest = $root.PB_System.PowerInfoRequest.fromObject(object.systemPowerInfoRequest);
                }
                if (object.systemPowerInfoResponse != null) {
                    if (typeof object.systemPowerInfoResponse !== "object")
                        throw TypeError(".PB.Main.systemPowerInfoResponse: object expected");
                    message.systemPowerInfoResponse = $root.PB_System.PowerInfoResponse.fromObject(object.systemPowerInfoResponse);
                }
                if (object.storageInfoRequest != null) {
                    if (typeof object.storageInfoRequest !== "object")
                        throw TypeError(".PB.Main.storageInfoRequest: object expected");
                    message.storageInfoRequest = $root.PB_Storage.InfoRequest.fromObject(object.storageInfoRequest);
                }
                if (object.storageInfoResponse != null) {
                    if (typeof object.storageInfoResponse !== "object")
                        throw TypeError(".PB.Main.storageInfoResponse: object expected");
                    message.storageInfoResponse = $root.PB_Storage.InfoResponse.fromObject(object.storageInfoResponse);
                }
                if (object.storageTimestampRequest != null) {
                    if (typeof object.storageTimestampRequest !== "object")
                        throw TypeError(".PB.Main.storageTimestampRequest: object expected");
                    message.storageTimestampRequest = $root.PB_Storage.TimestampRequest.fromObject(object.storageTimestampRequest);
                }
                if (object.storageTimestampResponse != null) {
                    if (typeof object.storageTimestampResponse !== "object")
                        throw TypeError(".PB.Main.storageTimestampResponse: object expected");
                    message.storageTimestampResponse = $root.PB_Storage.TimestampResponse.fromObject(object.storageTimestampResponse);
                }
                if (object.storageStatRequest != null) {
                    if (typeof object.storageStatRequest !== "object")
                        throw TypeError(".PB.Main.storageStatRequest: object expected");
                    message.storageStatRequest = $root.PB_Storage.StatRequest.fromObject(object.storageStatRequest);
                }
                if (object.storageStatResponse != null) {
                    if (typeof object.storageStatResponse !== "object")
                        throw TypeError(".PB.Main.storageStatResponse: object expected");
                    message.storageStatResponse = $root.PB_Storage.StatResponse.fromObject(object.storageStatResponse);
                }
                if (object.storageListRequest != null) {
                    if (typeof object.storageListRequest !== "object")
                        throw TypeError(".PB.Main.storageListRequest: object expected");
                    message.storageListRequest = $root.PB_Storage.ListRequest.fromObject(object.storageListRequest);
                }
                if (object.storageListResponse != null) {
                    if (typeof object.storageListResponse !== "object")
                        throw TypeError(".PB.Main.storageListResponse: object expected");
                    message.storageListResponse = $root.PB_Storage.ListResponse.fromObject(object.storageListResponse);
                }
                if (object.storageReadRequest != null) {
                    if (typeof object.storageReadRequest !== "object")
                        throw TypeError(".PB.Main.storageReadRequest: object expected");
                    message.storageReadRequest = $root.PB_Storage.ReadRequest.fromObject(object.storageReadRequest);
                }
                if (object.storageReadResponse != null) {
                    if (typeof object.storageReadResponse !== "object")
                        throw TypeError(".PB.Main.storageReadResponse: object expected");
                    message.storageReadResponse = $root.PB_Storage.ReadResponse.fromObject(object.storageReadResponse);
                }
                if (object.storageWriteRequest != null) {
                    if (typeof object.storageWriteRequest !== "object")
                        throw TypeError(".PB.Main.storageWriteRequest: object expected");
                    message.storageWriteRequest = $root.PB_Storage.WriteRequest.fromObject(object.storageWriteRequest);
                }
                if (object.storageDeleteRequest != null) {
                    if (typeof object.storageDeleteRequest !== "object")
                        throw TypeError(".PB.Main.storageDeleteRequest: object expected");
                    message.storageDeleteRequest = $root.PB_Storage.DeleteRequest.fromObject(object.storageDeleteRequest);
                }
                if (object.storageMkdirRequest != null) {
                    if (typeof object.storageMkdirRequest !== "object")
                        throw TypeError(".PB.Main.storageMkdirRequest: object expected");
                    message.storageMkdirRequest = $root.PB_Storage.MkdirRequest.fromObject(object.storageMkdirRequest);
                }
                if (object.storageMd5sumRequest != null) {
                    if (typeof object.storageMd5sumRequest !== "object")
                        throw TypeError(".PB.Main.storageMd5sumRequest: object expected");
                    message.storageMd5sumRequest = $root.PB_Storage.Md5sumRequest.fromObject(object.storageMd5sumRequest);
                }
                if (object.storageMd5sumResponse != null) {
                    if (typeof object.storageMd5sumResponse !== "object")
                        throw TypeError(".PB.Main.storageMd5sumResponse: object expected");
                    message.storageMd5sumResponse = $root.PB_Storage.Md5sumResponse.fromObject(object.storageMd5sumResponse);
                }
                if (object.storageRenameRequest != null) {
                    if (typeof object.storageRenameRequest !== "object")
                        throw TypeError(".PB.Main.storageRenameRequest: object expected");
                    message.storageRenameRequest = $root.PB_Storage.RenameRequest.fromObject(object.storageRenameRequest);
                }
                if (object.storageBackupCreateRequest != null) {
                    if (typeof object.storageBackupCreateRequest !== "object")
                        throw TypeError(".PB.Main.storageBackupCreateRequest: object expected");
                    message.storageBackupCreateRequest = $root.PB_Storage.BackupCreateRequest.fromObject(object.storageBackupCreateRequest);
                }
                if (object.storageBackupRestoreRequest != null) {
                    if (typeof object.storageBackupRestoreRequest !== "object")
                        throw TypeError(".PB.Main.storageBackupRestoreRequest: object expected");
                    message.storageBackupRestoreRequest = $root.PB_Storage.BackupRestoreRequest.fromObject(object.storageBackupRestoreRequest);
                }
                if (object.storageTarExtractRequest != null) {
                    if (typeof object.storageTarExtractRequest !== "object")
                        throw TypeError(".PB.Main.storageTarExtractRequest: object expected");
                    message.storageTarExtractRequest = $root.PB_Storage.TarExtractRequest.fromObject(object.storageTarExtractRequest);
                }
                if (object.appStartRequest != null) {
                    if (typeof object.appStartRequest !== "object")
                        throw TypeError(".PB.Main.appStartRequest: object expected");
                    message.appStartRequest = $root.PB_App.StartRequest.fromObject(object.appStartRequest);
                }
                if (object.appLockStatusRequest != null) {
                    if (typeof object.appLockStatusRequest !== "object")
                        throw TypeError(".PB.Main.appLockStatusRequest: object expected");
                    message.appLockStatusRequest = $root.PB_App.LockStatusRequest.fromObject(object.appLockStatusRequest);
                }
                if (object.appLockStatusResponse != null) {
                    if (typeof object.appLockStatusResponse !== "object")
                        throw TypeError(".PB.Main.appLockStatusResponse: object expected");
                    message.appLockStatusResponse = $root.PB_App.LockStatusResponse.fromObject(object.appLockStatusResponse);
                }
                if (object.appExitRequest != null) {
                    if (typeof object.appExitRequest !== "object")
                        throw TypeError(".PB.Main.appExitRequest: object expected");
                    message.appExitRequest = $root.PB_App.AppExitRequest.fromObject(object.appExitRequest);
                }
                if (object.appLoadFileRequest != null) {
                    if (typeof object.appLoadFileRequest !== "object")
                        throw TypeError(".PB.Main.appLoadFileRequest: object expected");
                    message.appLoadFileRequest = $root.PB_App.AppLoadFileRequest.fromObject(object.appLoadFileRequest);
                }
                if (object.appButtonPressRequest != null) {
                    if (typeof object.appButtonPressRequest !== "object")
                        throw TypeError(".PB.Main.appButtonPressRequest: object expected");
                    message.appButtonPressRequest = $root.PB_App.AppButtonPressRequest.fromObject(object.appButtonPressRequest);
                }
                if (object.appButtonReleaseRequest != null) {
                    if (typeof object.appButtonReleaseRequest !== "object")
                        throw TypeError(".PB.Main.appButtonReleaseRequest: object expected");
                    message.appButtonReleaseRequest = $root.PB_App.AppButtonReleaseRequest.fromObject(object.appButtonReleaseRequest);
                }
                if (object.appButtonPressReleaseRequest != null) {
                    if (typeof object.appButtonPressReleaseRequest !== "object")
                        throw TypeError(".PB.Main.appButtonPressReleaseRequest: object expected");
                    message.appButtonPressReleaseRequest = $root.PB_App.AppButtonPressReleaseRequest.fromObject(object.appButtonPressReleaseRequest);
                }
                if (object.appGetErrorRequest != null) {
                    if (typeof object.appGetErrorRequest !== "object")
                        throw TypeError(".PB.Main.appGetErrorRequest: object expected");
                    message.appGetErrorRequest = $root.PB_App.GetErrorRequest.fromObject(object.appGetErrorRequest);
                }
                if (object.appGetErrorResponse != null) {
                    if (typeof object.appGetErrorResponse !== "object")
                        throw TypeError(".PB.Main.appGetErrorResponse: object expected");
                    message.appGetErrorResponse = $root.PB_App.GetErrorResponse.fromObject(object.appGetErrorResponse);
                }
                if (object.appDataExchangeRequest != null) {
                    if (typeof object.appDataExchangeRequest !== "object")
                        throw TypeError(".PB.Main.appDataExchangeRequest: object expected");
                    message.appDataExchangeRequest = $root.PB_App.DataExchangeRequest.fromObject(object.appDataExchangeRequest);
                }
                if (object.guiStartScreenStreamRequest != null) {
                    if (typeof object.guiStartScreenStreamRequest !== "object")
                        throw TypeError(".PB.Main.guiStartScreenStreamRequest: object expected");
                    message.guiStartScreenStreamRequest = $root.PB_Gui.StartScreenStreamRequest.fromObject(object.guiStartScreenStreamRequest);
                }
                if (object.guiStopScreenStreamRequest != null) {
                    if (typeof object.guiStopScreenStreamRequest !== "object")
                        throw TypeError(".PB.Main.guiStopScreenStreamRequest: object expected");
                    message.guiStopScreenStreamRequest = $root.PB_Gui.StopScreenStreamRequest.fromObject(object.guiStopScreenStreamRequest);
                }
                if (object.guiScreenFrame != null) {
                    if (typeof object.guiScreenFrame !== "object")
                        throw TypeError(".PB.Main.guiScreenFrame: object expected");
                    message.guiScreenFrame = $root.PB_Gui.ScreenFrame.fromObject(object.guiScreenFrame);
                }
                if (object.guiSendInputEventRequest != null) {
                    if (typeof object.guiSendInputEventRequest !== "object")
                        throw TypeError(".PB.Main.guiSendInputEventRequest: object expected");
                    message.guiSendInputEventRequest = $root.PB_Gui.SendInputEventRequest.fromObject(object.guiSendInputEventRequest);
                }
                if (object.guiStartVirtualDisplayRequest != null) {
                    if (typeof object.guiStartVirtualDisplayRequest !== "object")
                        throw TypeError(".PB.Main.guiStartVirtualDisplayRequest: object expected");
                    message.guiStartVirtualDisplayRequest = $root.PB_Gui.StartVirtualDisplayRequest.fromObject(object.guiStartVirtualDisplayRequest);
                }
                if (object.guiStopVirtualDisplayRequest != null) {
                    if (typeof object.guiStopVirtualDisplayRequest !== "object")
                        throw TypeError(".PB.Main.guiStopVirtualDisplayRequest: object expected");
                    message.guiStopVirtualDisplayRequest = $root.PB_Gui.StopVirtualDisplayRequest.fromObject(object.guiStopVirtualDisplayRequest);
                }
                if (object.gpioSetPinMode != null) {
                    if (typeof object.gpioSetPinMode !== "object")
                        throw TypeError(".PB.Main.gpioSetPinMode: object expected");
                    message.gpioSetPinMode = $root.PB_Gpio.SetPinMode.fromObject(object.gpioSetPinMode);
                }
                if (object.gpioSetInputPull != null) {
                    if (typeof object.gpioSetInputPull !== "object")
                        throw TypeError(".PB.Main.gpioSetInputPull: object expected");
                    message.gpioSetInputPull = $root.PB_Gpio.SetInputPull.fromObject(object.gpioSetInputPull);
                }
                if (object.gpioGetPinMode != null) {
                    if (typeof object.gpioGetPinMode !== "object")
                        throw TypeError(".PB.Main.gpioGetPinMode: object expected");
                    message.gpioGetPinMode = $root.PB_Gpio.GetPinMode.fromObject(object.gpioGetPinMode);
                }
                if (object.gpioGetPinModeResponse != null) {
                    if (typeof object.gpioGetPinModeResponse !== "object")
                        throw TypeError(".PB.Main.gpioGetPinModeResponse: object expected");
                    message.gpioGetPinModeResponse = $root.PB_Gpio.GetPinModeResponse.fromObject(object.gpioGetPinModeResponse);
                }
                if (object.gpioReadPin != null) {
                    if (typeof object.gpioReadPin !== "object")
                        throw TypeError(".PB.Main.gpioReadPin: object expected");
                    message.gpioReadPin = $root.PB_Gpio.ReadPin.fromObject(object.gpioReadPin);
                }
                if (object.gpioReadPinResponse != null) {
                    if (typeof object.gpioReadPinResponse !== "object")
                        throw TypeError(".PB.Main.gpioReadPinResponse: object expected");
                    message.gpioReadPinResponse = $root.PB_Gpio.ReadPinResponse.fromObject(object.gpioReadPinResponse);
                }
                if (object.gpioWritePin != null) {
                    if (typeof object.gpioWritePin !== "object")
                        throw TypeError(".PB.Main.gpioWritePin: object expected");
                    message.gpioWritePin = $root.PB_Gpio.WritePin.fromObject(object.gpioWritePin);
                }
                if (object.gpioGetOtgMode != null) {
                    if (typeof object.gpioGetOtgMode !== "object")
                        throw TypeError(".PB.Main.gpioGetOtgMode: object expected");
                    message.gpioGetOtgMode = $root.PB_Gpio.GetOtgMode.fromObject(object.gpioGetOtgMode);
                }
                if (object.gpioGetOtgModeResponse != null) {
                    if (typeof object.gpioGetOtgModeResponse !== "object")
                        throw TypeError(".PB.Main.gpioGetOtgModeResponse: object expected");
                    message.gpioGetOtgModeResponse = $root.PB_Gpio.GetOtgModeResponse.fromObject(object.gpioGetOtgModeResponse);
                }
                if (object.gpioSetOtgMode != null) {
                    if (typeof object.gpioSetOtgMode !== "object")
                        throw TypeError(".PB.Main.gpioSetOtgMode: object expected");
                    message.gpioSetOtgMode = $root.PB_Gpio.SetOtgMode.fromObject(object.gpioSetOtgMode);
                }
                if (object.appStateResponse != null) {
                    if (typeof object.appStateResponse !== "object")
                        throw TypeError(".PB.Main.appStateResponse: object expected");
                    message.appStateResponse = $root.PB_App.AppStateResponse.fromObject(object.appStateResponse);
                }
                if (object.propertyGetRequest != null) {
                    if (typeof object.propertyGetRequest !== "object")
                        throw TypeError(".PB.Main.propertyGetRequest: object expected");
                    message.propertyGetRequest = $root.PB_Property.GetRequest.fromObject(object.propertyGetRequest);
                }
                if (object.propertyGetResponse != null) {
                    if (typeof object.propertyGetResponse !== "object")
                        throw TypeError(".PB.Main.propertyGetResponse: object expected");
                    message.propertyGetResponse = $root.PB_Property.GetResponse.fromObject(object.propertyGetResponse);
                }
                if (object.desktopIsLockedRequest != null) {
                    if (typeof object.desktopIsLockedRequest !== "object")
                        throw TypeError(".PB.Main.desktopIsLockedRequest: object expected");
                    message.desktopIsLockedRequest = $root.PB_Desktop.IsLockedRequest.fromObject(object.desktopIsLockedRequest);
                }
                if (object.desktopUnlockRequest != null) {
                    if (typeof object.desktopUnlockRequest !== "object")
                        throw TypeError(".PB.Main.desktopUnlockRequest: object expected");
                    message.desktopUnlockRequest = $root.PB_Desktop.UnlockRequest.fromObject(object.desktopUnlockRequest);
                }
                if (object.desktopStatusSubscribeRequest != null) {
                    if (typeof object.desktopStatusSubscribeRequest !== "object")
                        throw TypeError(".PB.Main.desktopStatusSubscribeRequest: object expected");
                    message.desktopStatusSubscribeRequest = $root.PB_Desktop.StatusSubscribeRequest.fromObject(object.desktopStatusSubscribeRequest);
                }
                if (object.desktopStatusUnsubscribeRequest != null) {
                    if (typeof object.desktopStatusUnsubscribeRequest !== "object")
                        throw TypeError(".PB.Main.desktopStatusUnsubscribeRequest: object expected");
                    message.desktopStatusUnsubscribeRequest = $root.PB_Desktop.StatusUnsubscribeRequest.fromObject(object.desktopStatusUnsubscribeRequest);
                }
                if (object.desktopStatus != null) {
                    if (typeof object.desktopStatus !== "object")
                        throw TypeError(".PB.Main.desktopStatus: object expected");
                    message.desktopStatus = $root.PB_Desktop.Status.fromObject(object.desktopStatus);
                }
                return message;
            };
    
            /**
             * Creates a plain object from a Main message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB.Main
             * @static
             * @param {PB.Main} message Main
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Main.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.commandId = 0;
                    object.commandStatus = options.enums === String ? "OK" : 0;
                    object.hasNext = false;
                }
                if (message.commandId != null && message.hasOwnProperty("commandId"))
                    object.commandId = message.commandId;
                if (message.commandStatus != null && message.hasOwnProperty("commandStatus"))
                    object.commandStatus = options.enums === String ? $root.PB.CommandStatus[message.commandStatus] === undefined ? message.commandStatus : $root.PB.CommandStatus[message.commandStatus] : message.commandStatus;
                if (message.hasNext != null && message.hasOwnProperty("hasNext"))
                    object.hasNext = message.hasNext;
                if (message.empty != null && message.hasOwnProperty("empty")) {
                    object.empty = $root.PB.Empty.toObject(message.empty, options);
                    if (options.oneofs)
                        object.content = "empty";
                }
                if (message.systemPingRequest != null && message.hasOwnProperty("systemPingRequest")) {
                    object.systemPingRequest = $root.PB_System.PingRequest.toObject(message.systemPingRequest, options);
                    if (options.oneofs)
                        object.content = "systemPingRequest";
                }
                if (message.systemPingResponse != null && message.hasOwnProperty("systemPingResponse")) {
                    object.systemPingResponse = $root.PB_System.PingResponse.toObject(message.systemPingResponse, options);
                    if (options.oneofs)
                        object.content = "systemPingResponse";
                }
                if (message.storageListRequest != null && message.hasOwnProperty("storageListRequest")) {
                    object.storageListRequest = $root.PB_Storage.ListRequest.toObject(message.storageListRequest, options);
                    if (options.oneofs)
                        object.content = "storageListRequest";
                }
                if (message.storageListResponse != null && message.hasOwnProperty("storageListResponse")) {
                    object.storageListResponse = $root.PB_Storage.ListResponse.toObject(message.storageListResponse, options);
                    if (options.oneofs)
                        object.content = "storageListResponse";
                }
                if (message.storageReadRequest != null && message.hasOwnProperty("storageReadRequest")) {
                    object.storageReadRequest = $root.PB_Storage.ReadRequest.toObject(message.storageReadRequest, options);
                    if (options.oneofs)
                        object.content = "storageReadRequest";
                }
                if (message.storageReadResponse != null && message.hasOwnProperty("storageReadResponse")) {
                    object.storageReadResponse = $root.PB_Storage.ReadResponse.toObject(message.storageReadResponse, options);
                    if (options.oneofs)
                        object.content = "storageReadResponse";
                }
                if (message.storageWriteRequest != null && message.hasOwnProperty("storageWriteRequest")) {
                    object.storageWriteRequest = $root.PB_Storage.WriteRequest.toObject(message.storageWriteRequest, options);
                    if (options.oneofs)
                        object.content = "storageWriteRequest";
                }
                if (message.storageDeleteRequest != null && message.hasOwnProperty("storageDeleteRequest")) {
                    object.storageDeleteRequest = $root.PB_Storage.DeleteRequest.toObject(message.storageDeleteRequest, options);
                    if (options.oneofs)
                        object.content = "storageDeleteRequest";
                }
                if (message.storageMkdirRequest != null && message.hasOwnProperty("storageMkdirRequest")) {
                    object.storageMkdirRequest = $root.PB_Storage.MkdirRequest.toObject(message.storageMkdirRequest, options);
                    if (options.oneofs)
                        object.content = "storageMkdirRequest";
                }
                if (message.storageMd5sumRequest != null && message.hasOwnProperty("storageMd5sumRequest")) {
                    object.storageMd5sumRequest = $root.PB_Storage.Md5sumRequest.toObject(message.storageMd5sumRequest, options);
                    if (options.oneofs)
                        object.content = "storageMd5sumRequest";
                }
                if (message.storageMd5sumResponse != null && message.hasOwnProperty("storageMd5sumResponse")) {
                    object.storageMd5sumResponse = $root.PB_Storage.Md5sumResponse.toObject(message.storageMd5sumResponse, options);
                    if (options.oneofs)
                        object.content = "storageMd5sumResponse";
                }
                if (message.appStartRequest != null && message.hasOwnProperty("appStartRequest")) {
                    object.appStartRequest = $root.PB_App.StartRequest.toObject(message.appStartRequest, options);
                    if (options.oneofs)
                        object.content = "appStartRequest";
                }
                if (message.appLockStatusRequest != null && message.hasOwnProperty("appLockStatusRequest")) {
                    object.appLockStatusRequest = $root.PB_App.LockStatusRequest.toObject(message.appLockStatusRequest, options);
                    if (options.oneofs)
                        object.content = "appLockStatusRequest";
                }
                if (message.appLockStatusResponse != null && message.hasOwnProperty("appLockStatusResponse")) {
                    object.appLockStatusResponse = $root.PB_App.LockStatusResponse.toObject(message.appLockStatusResponse, options);
                    if (options.oneofs)
                        object.content = "appLockStatusResponse";
                }
                if (message.stopSession != null && message.hasOwnProperty("stopSession")) {
                    object.stopSession = $root.PB.StopSession.toObject(message.stopSession, options);
                    if (options.oneofs)
                        object.content = "stopSession";
                }
                if (message.guiStartScreenStreamRequest != null && message.hasOwnProperty("guiStartScreenStreamRequest")) {
                    object.guiStartScreenStreamRequest = $root.PB_Gui.StartScreenStreamRequest.toObject(message.guiStartScreenStreamRequest, options);
                    if (options.oneofs)
                        object.content = "guiStartScreenStreamRequest";
                }
                if (message.guiStopScreenStreamRequest != null && message.hasOwnProperty("guiStopScreenStreamRequest")) {
                    object.guiStopScreenStreamRequest = $root.PB_Gui.StopScreenStreamRequest.toObject(message.guiStopScreenStreamRequest, options);
                    if (options.oneofs)
                        object.content = "guiStopScreenStreamRequest";
                }
                if (message.guiScreenFrame != null && message.hasOwnProperty("guiScreenFrame")) {
                    object.guiScreenFrame = $root.PB_Gui.ScreenFrame.toObject(message.guiScreenFrame, options);
                    if (options.oneofs)
                        object.content = "guiScreenFrame";
                }
                if (message.guiSendInputEventRequest != null && message.hasOwnProperty("guiSendInputEventRequest")) {
                    object.guiSendInputEventRequest = $root.PB_Gui.SendInputEventRequest.toObject(message.guiSendInputEventRequest, options);
                    if (options.oneofs)
                        object.content = "guiSendInputEventRequest";
                }
                if (message.storageStatRequest != null && message.hasOwnProperty("storageStatRequest")) {
                    object.storageStatRequest = $root.PB_Storage.StatRequest.toObject(message.storageStatRequest, options);
                    if (options.oneofs)
                        object.content = "storageStatRequest";
                }
                if (message.storageStatResponse != null && message.hasOwnProperty("storageStatResponse")) {
                    object.storageStatResponse = $root.PB_Storage.StatResponse.toObject(message.storageStatResponse, options);
                    if (options.oneofs)
                        object.content = "storageStatResponse";
                }
                if (message.guiStartVirtualDisplayRequest != null && message.hasOwnProperty("guiStartVirtualDisplayRequest")) {
                    object.guiStartVirtualDisplayRequest = $root.PB_Gui.StartVirtualDisplayRequest.toObject(message.guiStartVirtualDisplayRequest, options);
                    if (options.oneofs)
                        object.content = "guiStartVirtualDisplayRequest";
                }
                if (message.guiStopVirtualDisplayRequest != null && message.hasOwnProperty("guiStopVirtualDisplayRequest")) {
                    object.guiStopVirtualDisplayRequest = $root.PB_Gui.StopVirtualDisplayRequest.toObject(message.guiStopVirtualDisplayRequest, options);
                    if (options.oneofs)
                        object.content = "guiStopVirtualDisplayRequest";
                }
                if (message.storageInfoRequest != null && message.hasOwnProperty("storageInfoRequest")) {
                    object.storageInfoRequest = $root.PB_Storage.InfoRequest.toObject(message.storageInfoRequest, options);
                    if (options.oneofs)
                        object.content = "storageInfoRequest";
                }
                if (message.storageInfoResponse != null && message.hasOwnProperty("storageInfoResponse")) {
                    object.storageInfoResponse = $root.PB_Storage.InfoResponse.toObject(message.storageInfoResponse, options);
                    if (options.oneofs)
                        object.content = "storageInfoResponse";
                }
                if (message.storageRenameRequest != null && message.hasOwnProperty("storageRenameRequest")) {
                    object.storageRenameRequest = $root.PB_Storage.RenameRequest.toObject(message.storageRenameRequest, options);
                    if (options.oneofs)
                        object.content = "storageRenameRequest";
                }
                if (message.systemRebootRequest != null && message.hasOwnProperty("systemRebootRequest")) {
                    object.systemRebootRequest = $root.PB_System.RebootRequest.toObject(message.systemRebootRequest, options);
                    if (options.oneofs)
                        object.content = "systemRebootRequest";
                }
                if (message.systemDeviceInfoRequest != null && message.hasOwnProperty("systemDeviceInfoRequest")) {
                    object.systemDeviceInfoRequest = $root.PB_System.DeviceInfoRequest.toObject(message.systemDeviceInfoRequest, options);
                    if (options.oneofs)
                        object.content = "systemDeviceInfoRequest";
                }
                if (message.systemDeviceInfoResponse != null && message.hasOwnProperty("systemDeviceInfoResponse")) {
                    object.systemDeviceInfoResponse = $root.PB_System.DeviceInfoResponse.toObject(message.systemDeviceInfoResponse, options);
                    if (options.oneofs)
                        object.content = "systemDeviceInfoResponse";
                }
                if (message.systemFactoryResetRequest != null && message.hasOwnProperty("systemFactoryResetRequest")) {
                    object.systemFactoryResetRequest = $root.PB_System.FactoryResetRequest.toObject(message.systemFactoryResetRequest, options);
                    if (options.oneofs)
                        object.content = "systemFactoryResetRequest";
                }
                if (message.systemGetDatetimeRequest != null && message.hasOwnProperty("systemGetDatetimeRequest")) {
                    object.systemGetDatetimeRequest = $root.PB_System.GetDateTimeRequest.toObject(message.systemGetDatetimeRequest, options);
                    if (options.oneofs)
                        object.content = "systemGetDatetimeRequest";
                }
                if (message.systemGetDatetimeResponse != null && message.hasOwnProperty("systemGetDatetimeResponse")) {
                    object.systemGetDatetimeResponse = $root.PB_System.GetDateTimeResponse.toObject(message.systemGetDatetimeResponse, options);
                    if (options.oneofs)
                        object.content = "systemGetDatetimeResponse";
                }
                if (message.systemSetDatetimeRequest != null && message.hasOwnProperty("systemSetDatetimeRequest")) {
                    object.systemSetDatetimeRequest = $root.PB_System.SetDateTimeRequest.toObject(message.systemSetDatetimeRequest, options);
                    if (options.oneofs)
                        object.content = "systemSetDatetimeRequest";
                }
                if (message.systemPlayAudiovisualAlertRequest != null && message.hasOwnProperty("systemPlayAudiovisualAlertRequest")) {
                    object.systemPlayAudiovisualAlertRequest = $root.PB_System.PlayAudiovisualAlertRequest.toObject(message.systemPlayAudiovisualAlertRequest, options);
                    if (options.oneofs)
                        object.content = "systemPlayAudiovisualAlertRequest";
                }
                if (message.systemProtobufVersionRequest != null && message.hasOwnProperty("systemProtobufVersionRequest")) {
                    object.systemProtobufVersionRequest = $root.PB_System.ProtobufVersionRequest.toObject(message.systemProtobufVersionRequest, options);
                    if (options.oneofs)
                        object.content = "systemProtobufVersionRequest";
                }
                if (message.systemProtobufVersionResponse != null && message.hasOwnProperty("systemProtobufVersionResponse")) {
                    object.systemProtobufVersionResponse = $root.PB_System.ProtobufVersionResponse.toObject(message.systemProtobufVersionResponse, options);
                    if (options.oneofs)
                        object.content = "systemProtobufVersionResponse";
                }
                if (message.systemUpdateRequest != null && message.hasOwnProperty("systemUpdateRequest")) {
                    object.systemUpdateRequest = $root.PB_System.UpdateRequest.toObject(message.systemUpdateRequest, options);
                    if (options.oneofs)
                        object.content = "systemUpdateRequest";
                }
                if (message.storageBackupCreateRequest != null && message.hasOwnProperty("storageBackupCreateRequest")) {
                    object.storageBackupCreateRequest = $root.PB_Storage.BackupCreateRequest.toObject(message.storageBackupCreateRequest, options);
                    if (options.oneofs)
                        object.content = "storageBackupCreateRequest";
                }
                if (message.storageBackupRestoreRequest != null && message.hasOwnProperty("storageBackupRestoreRequest")) {
                    object.storageBackupRestoreRequest = $root.PB_Storage.BackupRestoreRequest.toObject(message.storageBackupRestoreRequest, options);
                    if (options.oneofs)
                        object.content = "storageBackupRestoreRequest";
                }
                if (message.systemPowerInfoRequest != null && message.hasOwnProperty("systemPowerInfoRequest")) {
                    object.systemPowerInfoRequest = $root.PB_System.PowerInfoRequest.toObject(message.systemPowerInfoRequest, options);
                    if (options.oneofs)
                        object.content = "systemPowerInfoRequest";
                }
                if (message.systemPowerInfoResponse != null && message.hasOwnProperty("systemPowerInfoResponse")) {
                    object.systemPowerInfoResponse = $root.PB_System.PowerInfoResponse.toObject(message.systemPowerInfoResponse, options);
                    if (options.oneofs)
                        object.content = "systemPowerInfoResponse";
                }
                if (message.systemUpdateResponse != null && message.hasOwnProperty("systemUpdateResponse")) {
                    object.systemUpdateResponse = $root.PB_System.UpdateResponse.toObject(message.systemUpdateResponse, options);
                    if (options.oneofs)
                        object.content = "systemUpdateResponse";
                }
                if (message.appExitRequest != null && message.hasOwnProperty("appExitRequest")) {
                    object.appExitRequest = $root.PB_App.AppExitRequest.toObject(message.appExitRequest, options);
                    if (options.oneofs)
                        object.content = "appExitRequest";
                }
                if (message.appLoadFileRequest != null && message.hasOwnProperty("appLoadFileRequest")) {
                    object.appLoadFileRequest = $root.PB_App.AppLoadFileRequest.toObject(message.appLoadFileRequest, options);
                    if (options.oneofs)
                        object.content = "appLoadFileRequest";
                }
                if (message.appButtonPressRequest != null && message.hasOwnProperty("appButtonPressRequest")) {
                    object.appButtonPressRequest = $root.PB_App.AppButtonPressRequest.toObject(message.appButtonPressRequest, options);
                    if (options.oneofs)
                        object.content = "appButtonPressRequest";
                }
                if (message.appButtonReleaseRequest != null && message.hasOwnProperty("appButtonReleaseRequest")) {
                    object.appButtonReleaseRequest = $root.PB_App.AppButtonReleaseRequest.toObject(message.appButtonReleaseRequest, options);
                    if (options.oneofs)
                        object.content = "appButtonReleaseRequest";
                }
                if (message.gpioSetPinMode != null && message.hasOwnProperty("gpioSetPinMode")) {
                    object.gpioSetPinMode = $root.PB_Gpio.SetPinMode.toObject(message.gpioSetPinMode, options);
                    if (options.oneofs)
                        object.content = "gpioSetPinMode";
                }
                if (message.gpioSetInputPull != null && message.hasOwnProperty("gpioSetInputPull")) {
                    object.gpioSetInputPull = $root.PB_Gpio.SetInputPull.toObject(message.gpioSetInputPull, options);
                    if (options.oneofs)
                        object.content = "gpioSetInputPull";
                }
                if (message.gpioGetPinMode != null && message.hasOwnProperty("gpioGetPinMode")) {
                    object.gpioGetPinMode = $root.PB_Gpio.GetPinMode.toObject(message.gpioGetPinMode, options);
                    if (options.oneofs)
                        object.content = "gpioGetPinMode";
                }
                if (message.gpioGetPinModeResponse != null && message.hasOwnProperty("gpioGetPinModeResponse")) {
                    object.gpioGetPinModeResponse = $root.PB_Gpio.GetPinModeResponse.toObject(message.gpioGetPinModeResponse, options);
                    if (options.oneofs)
                        object.content = "gpioGetPinModeResponse";
                }
                if (message.gpioReadPin != null && message.hasOwnProperty("gpioReadPin")) {
                    object.gpioReadPin = $root.PB_Gpio.ReadPin.toObject(message.gpioReadPin, options);
                    if (options.oneofs)
                        object.content = "gpioReadPin";
                }
                if (message.gpioReadPinResponse != null && message.hasOwnProperty("gpioReadPinResponse")) {
                    object.gpioReadPinResponse = $root.PB_Gpio.ReadPinResponse.toObject(message.gpioReadPinResponse, options);
                    if (options.oneofs)
                        object.content = "gpioReadPinResponse";
                }
                if (message.gpioWritePin != null && message.hasOwnProperty("gpioWritePin")) {
                    object.gpioWritePin = $root.PB_Gpio.WritePin.toObject(message.gpioWritePin, options);
                    if (options.oneofs)
                        object.content = "gpioWritePin";
                }
                if (message.appStateResponse != null && message.hasOwnProperty("appStateResponse")) {
                    object.appStateResponse = $root.PB_App.AppStateResponse.toObject(message.appStateResponse, options);
                    if (options.oneofs)
                        object.content = "appStateResponse";
                }
                if (message.storageTimestampRequest != null && message.hasOwnProperty("storageTimestampRequest")) {
                    object.storageTimestampRequest = $root.PB_Storage.TimestampRequest.toObject(message.storageTimestampRequest, options);
                    if (options.oneofs)
                        object.content = "storageTimestampRequest";
                }
                if (message.storageTimestampResponse != null && message.hasOwnProperty("storageTimestampResponse")) {
                    object.storageTimestampResponse = $root.PB_Storage.TimestampResponse.toObject(message.storageTimestampResponse, options);
                    if (options.oneofs)
                        object.content = "storageTimestampResponse";
                }
                if (message.propertyGetRequest != null && message.hasOwnProperty("propertyGetRequest")) {
                    object.propertyGetRequest = $root.PB_Property.GetRequest.toObject(message.propertyGetRequest, options);
                    if (options.oneofs)
                        object.content = "propertyGetRequest";
                }
                if (message.propertyGetResponse != null && message.hasOwnProperty("propertyGetResponse")) {
                    object.propertyGetResponse = $root.PB_Property.GetResponse.toObject(message.propertyGetResponse, options);
                    if (options.oneofs)
                        object.content = "propertyGetResponse";
                }
                if (message.appGetErrorRequest != null && message.hasOwnProperty("appGetErrorRequest")) {
                    object.appGetErrorRequest = $root.PB_App.GetErrorRequest.toObject(message.appGetErrorRequest, options);
                    if (options.oneofs)
                        object.content = "appGetErrorRequest";
                }
                if (message.appGetErrorResponse != null && message.hasOwnProperty("appGetErrorResponse")) {
                    object.appGetErrorResponse = $root.PB_App.GetErrorResponse.toObject(message.appGetErrorResponse, options);
                    if (options.oneofs)
                        object.content = "appGetErrorResponse";
                }
                if (message.appDataExchangeRequest != null && message.hasOwnProperty("appDataExchangeRequest")) {
                    object.appDataExchangeRequest = $root.PB_App.DataExchangeRequest.toObject(message.appDataExchangeRequest, options);
                    if (options.oneofs)
                        object.content = "appDataExchangeRequest";
                }
                if (message.desktopIsLockedRequest != null && message.hasOwnProperty("desktopIsLockedRequest")) {
                    object.desktopIsLockedRequest = $root.PB_Desktop.IsLockedRequest.toObject(message.desktopIsLockedRequest, options);
                    if (options.oneofs)
                        object.content = "desktopIsLockedRequest";
                }
                if (message.desktopUnlockRequest != null && message.hasOwnProperty("desktopUnlockRequest")) {
                    object.desktopUnlockRequest = $root.PB_Desktop.UnlockRequest.toObject(message.desktopUnlockRequest, options);
                    if (options.oneofs)
                        object.content = "desktopUnlockRequest";
                }
                if (message.desktopStatusSubscribeRequest != null && message.hasOwnProperty("desktopStatusSubscribeRequest")) {
                    object.desktopStatusSubscribeRequest = $root.PB_Desktop.StatusSubscribeRequest.toObject(message.desktopStatusSubscribeRequest, options);
                    if (options.oneofs)
                        object.content = "desktopStatusSubscribeRequest";
                }
                if (message.desktopStatusUnsubscribeRequest != null && message.hasOwnProperty("desktopStatusUnsubscribeRequest")) {
                    object.desktopStatusUnsubscribeRequest = $root.PB_Desktop.StatusUnsubscribeRequest.toObject(message.desktopStatusUnsubscribeRequest, options);
                    if (options.oneofs)
                        object.content = "desktopStatusUnsubscribeRequest";
                }
                if (message.desktopStatus != null && message.hasOwnProperty("desktopStatus")) {
                    object.desktopStatus = $root.PB_Desktop.Status.toObject(message.desktopStatus, options);
                    if (options.oneofs)
                        object.content = "desktopStatus";
                }
                if (message.storageTarExtractRequest != null && message.hasOwnProperty("storageTarExtractRequest")) {
                    object.storageTarExtractRequest = $root.PB_Storage.TarExtractRequest.toObject(message.storageTarExtractRequest, options);
                    if (options.oneofs)
                        object.content = "storageTarExtractRequest";
                }
                if (message.gpioGetOtgMode != null && message.hasOwnProperty("gpioGetOtgMode")) {
                    object.gpioGetOtgMode = $root.PB_Gpio.GetOtgMode.toObject(message.gpioGetOtgMode, options);
                    if (options.oneofs)
                        object.content = "gpioGetOtgMode";
                }
                if (message.gpioGetOtgModeResponse != null && message.hasOwnProperty("gpioGetOtgModeResponse")) {
                    object.gpioGetOtgModeResponse = $root.PB_Gpio.GetOtgModeResponse.toObject(message.gpioGetOtgModeResponse, options);
                    if (options.oneofs)
                        object.content = "gpioGetOtgModeResponse";
                }
                if (message.gpioSetOtgMode != null && message.hasOwnProperty("gpioSetOtgMode")) {
                    object.gpioSetOtgMode = $root.PB_Gpio.SetOtgMode.toObject(message.gpioSetOtgMode, options);
                    if (options.oneofs)
                        object.content = "gpioSetOtgMode";
                }
                if (message.appButtonPressReleaseRequest != null && message.hasOwnProperty("appButtonPressReleaseRequest")) {
                    object.appButtonPressReleaseRequest = $root.PB_App.AppButtonPressReleaseRequest.toObject(message.appButtonPressReleaseRequest, options);
                    if (options.oneofs)
                        object.content = "appButtonPressReleaseRequest";
                }
                return object;
            };
    
            /**
             * Converts this Main to JSON.
             * @function toJSON
             * @memberof PB.Main
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Main.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Main
             * @function getTypeUrl
             * @memberof PB.Main
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Main.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB.Main";
            };
    
            return Main;
        })();
    
        PB.Region = (function() {
    
            /**
             * Properties of a Region.
             * @memberof PB
             * @interface IRegion
             * @property {Uint8Array|null} [countryCode] Region countryCode
             * @property {Array.<PB.Region.IBand>|null} [bands] Region bands
             */
    
            /**
             * Constructs a new Region.
             * @memberof PB
             * @classdesc Represents a Region.
             * @implements IRegion
             * @constructor
             * @param {PB.IRegion=} [properties] Properties to set
             */
            function Region(properties) {
                this.bands = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Region countryCode.
             * @member {Uint8Array} countryCode
             * @memberof PB.Region
             * @instance
             */
            Region.prototype.countryCode = $util.newBuffer([]);
    
            /**
             * Region bands.
             * @member {Array.<PB.Region.IBand>} bands
             * @memberof PB.Region
             * @instance
             */
            Region.prototype.bands = $util.emptyArray;
    
            /**
             * Creates a new Region instance using the specified properties.
             * @function create
             * @memberof PB.Region
             * @static
             * @param {PB.IRegion=} [properties] Properties to set
             * @returns {PB.Region} Region instance
             */
            Region.create = function create(properties) {
                return new Region(properties);
            };
    
            /**
             * Encodes the specified Region message. Does not implicitly {@link PB.Region.verify|verify} messages.
             * @function encode
             * @memberof PB.Region
             * @static
             * @param {PB.IRegion} message Region message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Region.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.countryCode != null && Object.hasOwnProperty.call(message, "countryCode"))
                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.countryCode);
                if (message.bands != null && message.bands.length)
                    for (var i = 0; i < message.bands.length; ++i)
                        $root.PB.Region.Band.encode(message.bands[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified Region message, length delimited. Does not implicitly {@link PB.Region.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB.Region
             * @static
             * @param {PB.IRegion} message Region message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Region.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Region message from the specified reader or buffer.
             * @function decode
             * @memberof PB.Region
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB.Region} Region
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Region.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB.Region();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.countryCode = reader.bytes();
                            break;
                        }
                    case 2: {
                            if (!(message.bands && message.bands.length))
                                message.bands = [];
                            message.bands.push($root.PB.Region.Band.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Region message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB.Region
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB.Region} Region
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Region.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Region message.
             * @function verify
             * @memberof PB.Region
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Region.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.countryCode != null && message.hasOwnProperty("countryCode"))
                    if (!(message.countryCode && typeof message.countryCode.length === "number" || $util.isString(message.countryCode)))
                        return "countryCode: buffer expected";
                if (message.bands != null && message.hasOwnProperty("bands")) {
                    if (!Array.isArray(message.bands))
                        return "bands: array expected";
                    for (var i = 0; i < message.bands.length; ++i) {
                        var error = $root.PB.Region.Band.verify(message.bands[i]);
                        if (error)
                            return "bands." + error;
                    }
                }
                return null;
            };
    
            /**
             * Creates a Region message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB.Region
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB.Region} Region
             */
            Region.fromObject = function fromObject(object) {
                if (object instanceof $root.PB.Region)
                    return object;
                var message = new $root.PB.Region();
                if (object.countryCode != null)
                    if (typeof object.countryCode === "string")
                        $util.base64.decode(object.countryCode, message.countryCode = $util.newBuffer($util.base64.length(object.countryCode)), 0);
                    else if (object.countryCode.length >= 0)
                        message.countryCode = object.countryCode;
                if (object.bands) {
                    if (!Array.isArray(object.bands))
                        throw TypeError(".PB.Region.bands: array expected");
                    message.bands = [];
                    for (var i = 0; i < object.bands.length; ++i) {
                        if (typeof object.bands[i] !== "object")
                            throw TypeError(".PB.Region.bands: object expected");
                        message.bands[i] = $root.PB.Region.Band.fromObject(object.bands[i]);
                    }
                }
                return message;
            };
    
            /**
             * Creates a plain object from a Region message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB.Region
             * @static
             * @param {PB.Region} message Region
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Region.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.bands = [];
                if (options.defaults)
                    if (options.bytes === String)
                        object.countryCode = "";
                    else {
                        object.countryCode = [];
                        if (options.bytes !== Array)
                            object.countryCode = $util.newBuffer(object.countryCode);
                    }
                if (message.countryCode != null && message.hasOwnProperty("countryCode"))
                    object.countryCode = options.bytes === String ? $util.base64.encode(message.countryCode, 0, message.countryCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.countryCode) : message.countryCode;
                if (message.bands && message.bands.length) {
                    object.bands = [];
                    for (var j = 0; j < message.bands.length; ++j)
                        object.bands[j] = $root.PB.Region.Band.toObject(message.bands[j], options);
                }
                return object;
            };
    
            /**
             * Converts this Region to JSON.
             * @function toJSON
             * @memberof PB.Region
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Region.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Region
             * @function getTypeUrl
             * @memberof PB.Region
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Region.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB.Region";
            };
    
            Region.Band = (function() {
    
                /**
                 * Properties of a Band.
                 * @memberof PB.Region
                 * @interface IBand
                 * @property {number|null} [start] Band start
                 * @property {number|null} [end] Band end
                 * @property {number|null} [powerLimit] Band powerLimit
                 * @property {number|null} [dutyCycle] Band dutyCycle
                 */
    
                /**
                 * Constructs a new Band.
                 * @memberof PB.Region
                 * @classdesc Represents a Band.
                 * @implements IBand
                 * @constructor
                 * @param {PB.Region.IBand=} [properties] Properties to set
                 */
                function Band(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Band start.
                 * @member {number} start
                 * @memberof PB.Region.Band
                 * @instance
                 */
                Band.prototype.start = 0;
    
                /**
                 * Band end.
                 * @member {number} end
                 * @memberof PB.Region.Band
                 * @instance
                 */
                Band.prototype.end = 0;
    
                /**
                 * Band powerLimit.
                 * @member {number} powerLimit
                 * @memberof PB.Region.Band
                 * @instance
                 */
                Band.prototype.powerLimit = 0;
    
                /**
                 * Band dutyCycle.
                 * @member {number} dutyCycle
                 * @memberof PB.Region.Band
                 * @instance
                 */
                Band.prototype.dutyCycle = 0;
    
                /**
                 * Creates a new Band instance using the specified properties.
                 * @function create
                 * @memberof PB.Region.Band
                 * @static
                 * @param {PB.Region.IBand=} [properties] Properties to set
                 * @returns {PB.Region.Band} Band instance
                 */
                Band.create = function create(properties) {
                    return new Band(properties);
                };
    
                /**
                 * Encodes the specified Band message. Does not implicitly {@link PB.Region.Band.verify|verify} messages.
                 * @function encode
                 * @memberof PB.Region.Band
                 * @static
                 * @param {PB.Region.IBand} message Band message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Band.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.start);
                    if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.end);
                    if (message.powerLimit != null && Object.hasOwnProperty.call(message, "powerLimit"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.powerLimit);
                    if (message.dutyCycle != null && Object.hasOwnProperty.call(message, "dutyCycle"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.dutyCycle);
                    return writer;
                };
    
                /**
                 * Encodes the specified Band message, length delimited. Does not implicitly {@link PB.Region.Band.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof PB.Region.Band
                 * @static
                 * @param {PB.Region.IBand} message Band message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Band.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Band message from the specified reader or buffer.
                 * @function decode
                 * @memberof PB.Region.Band
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {PB.Region.Band} Band
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Band.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB.Region.Band();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.start = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.end = reader.uint32();
                                break;
                            }
                        case 3: {
                                message.powerLimit = reader.int32();
                                break;
                            }
                        case 4: {
                                message.dutyCycle = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Band message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof PB.Region.Band
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {PB.Region.Band} Band
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Band.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Band message.
                 * @function verify
                 * @memberof PB.Region.Band
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Band.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.start != null && message.hasOwnProperty("start"))
                        if (!$util.isInteger(message.start))
                            return "start: integer expected";
                    if (message.end != null && message.hasOwnProperty("end"))
                        if (!$util.isInteger(message.end))
                            return "end: integer expected";
                    if (message.powerLimit != null && message.hasOwnProperty("powerLimit"))
                        if (!$util.isInteger(message.powerLimit))
                            return "powerLimit: integer expected";
                    if (message.dutyCycle != null && message.hasOwnProperty("dutyCycle"))
                        if (!$util.isInteger(message.dutyCycle))
                            return "dutyCycle: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Band message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof PB.Region.Band
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {PB.Region.Band} Band
                 */
                Band.fromObject = function fromObject(object) {
                    if (object instanceof $root.PB.Region.Band)
                        return object;
                    var message = new $root.PB.Region.Band();
                    if (object.start != null)
                        message.start = object.start >>> 0;
                    if (object.end != null)
                        message.end = object.end >>> 0;
                    if (object.powerLimit != null)
                        message.powerLimit = object.powerLimit | 0;
                    if (object.dutyCycle != null)
                        message.dutyCycle = object.dutyCycle >>> 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Band message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof PB.Region.Band
                 * @static
                 * @param {PB.Region.Band} message Band
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Band.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.start = 0;
                        object.end = 0;
                        object.powerLimit = 0;
                        object.dutyCycle = 0;
                    }
                    if (message.start != null && message.hasOwnProperty("start"))
                        object.start = message.start;
                    if (message.end != null && message.hasOwnProperty("end"))
                        object.end = message.end;
                    if (message.powerLimit != null && message.hasOwnProperty("powerLimit"))
                        object.powerLimit = message.powerLimit;
                    if (message.dutyCycle != null && message.hasOwnProperty("dutyCycle"))
                        object.dutyCycle = message.dutyCycle;
                    return object;
                };
    
                /**
                 * Converts this Band to JSON.
                 * @function toJSON
                 * @memberof PB.Region.Band
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Band.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Band
                 * @function getTypeUrl
                 * @memberof PB.Region.Band
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Band.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/PB.Region.Band";
                };
    
                return Band;
            })();
    
            return Region;
        })();
    
        return PB;
    })();
    
    $root.PB_Storage = (function() {
    
        /**
         * Namespace PB_Storage.
         * @exports PB_Storage
         * @namespace
         */
        var PB_Storage = {};
    
        PB_Storage.File = (function() {
    
            /**
             * Properties of a File.
             * @memberof PB_Storage
             * @interface IFile
             * @property {PB_Storage.File.FileType|null} [type] File type
             * @property {string|null} [name] File name
             * @property {number|null} [size] File size
             * @property {Uint8Array|null} [data] File data
             * @property {string|null} [md5sum] File md5sum
             */
    
            /**
             * Constructs a new File.
             * @memberof PB_Storage
             * @classdesc Represents a File.
             * @implements IFile
             * @constructor
             * @param {PB_Storage.IFile=} [properties] Properties to set
             */
            function File(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * File type.
             * @member {PB_Storage.File.FileType} type
             * @memberof PB_Storage.File
             * @instance
             */
            File.prototype.type = 0;
    
            /**
             * File name.
             * @member {string} name
             * @memberof PB_Storage.File
             * @instance
             */
            File.prototype.name = "";
    
            /**
             * File size.
             * @member {number} size
             * @memberof PB_Storage.File
             * @instance
             */
            File.prototype.size = 0;
    
            /**
             * File data.
             * @member {Uint8Array} data
             * @memberof PB_Storage.File
             * @instance
             */
            File.prototype.data = $util.newBuffer([]);
    
            /**
             * File md5sum.
             * @member {string} md5sum
             * @memberof PB_Storage.File
             * @instance
             */
            File.prototype.md5sum = "";
    
            /**
             * Creates a new File instance using the specified properties.
             * @function create
             * @memberof PB_Storage.File
             * @static
             * @param {PB_Storage.IFile=} [properties] Properties to set
             * @returns {PB_Storage.File} File instance
             */
            File.create = function create(properties) {
                return new File(properties);
            };
    
            /**
             * Encodes the specified File message. Does not implicitly {@link PB_Storage.File.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.File
             * @static
             * @param {PB_Storage.IFile} message File message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            File.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                if (message.size != null && Object.hasOwnProperty.call(message, "size"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.size);
                if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                    writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.data);
                if (message.md5sum != null && Object.hasOwnProperty.call(message, "md5sum"))
                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.md5sum);
                return writer;
            };
    
            /**
             * Encodes the specified File message, length delimited. Does not implicitly {@link PB_Storage.File.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.File
             * @static
             * @param {PB_Storage.IFile} message File message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            File.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a File message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.File
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.File} File
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            File.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.File();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.type = reader.int32();
                            break;
                        }
                    case 2: {
                            message.name = reader.string();
                            break;
                        }
                    case 3: {
                            message.size = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.data = reader.bytes();
                            break;
                        }
                    case 5: {
                            message.md5sum = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a File message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.File
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.File} File
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            File.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a File message.
             * @function verify
             * @memberof PB_Storage.File
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            File.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.type != null && message.hasOwnProperty("type"))
                    switch (message.type) {
                    default:
                        return "type: enum value expected";
                    case 0:
                    case 1:
                        break;
                    }
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.size != null && message.hasOwnProperty("size"))
                    if (!$util.isInteger(message.size))
                        return "size: integer expected";
                if (message.data != null && message.hasOwnProperty("data"))
                    if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                        return "data: buffer expected";
                if (message.md5sum != null && message.hasOwnProperty("md5sum"))
                    if (!$util.isString(message.md5sum))
                        return "md5sum: string expected";
                return null;
            };
    
            /**
             * Creates a File message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.File
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.File} File
             */
            File.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.File)
                    return object;
                var message = new $root.PB_Storage.File();
                switch (object.type) {
                default:
                    if (typeof object.type === "number") {
                        message.type = object.type;
                        break;
                    }
                    break;
                case "FILE":
                case 0:
                    message.type = 0;
                    break;
                case "DIR":
                case 1:
                    message.type = 1;
                    break;
                }
                if (object.name != null)
                    message.name = String(object.name);
                if (object.size != null)
                    message.size = object.size >>> 0;
                if (object.data != null)
                    if (typeof object.data === "string")
                        $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                    else if (object.data.length >= 0)
                        message.data = object.data;
                if (object.md5sum != null)
                    message.md5sum = String(object.md5sum);
                return message;
            };
    
            /**
             * Creates a plain object from a File message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.File
             * @static
             * @param {PB_Storage.File} message File
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            File.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.type = options.enums === String ? "FILE" : 0;
                    object.name = "";
                    object.size = 0;
                    if (options.bytes === String)
                        object.data = "";
                    else {
                        object.data = [];
                        if (options.bytes !== Array)
                            object.data = $util.newBuffer(object.data);
                    }
                    object.md5sum = "";
                }
                if (message.type != null && message.hasOwnProperty("type"))
                    object.type = options.enums === String ? $root.PB_Storage.File.FileType[message.type] === undefined ? message.type : $root.PB_Storage.File.FileType[message.type] : message.type;
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.size != null && message.hasOwnProperty("size"))
                    object.size = message.size;
                if (message.data != null && message.hasOwnProperty("data"))
                    object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                if (message.md5sum != null && message.hasOwnProperty("md5sum"))
                    object.md5sum = message.md5sum;
                return object;
            };
    
            /**
             * Converts this File to JSON.
             * @function toJSON
             * @memberof PB_Storage.File
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            File.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for File
             * @function getTypeUrl
             * @memberof PB_Storage.File
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            File.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.File";
            };
    
            /**
             * FileType enum.
             * @name PB_Storage.File.FileType
             * @enum {number}
             * @property {number} FILE=0 FILE value
             * @property {number} DIR=1 DIR value
             */
            File.FileType = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FILE"] = 0;
                values[valuesById[1] = "DIR"] = 1;
                return values;
            })();
    
            return File;
        })();
    
        PB_Storage.InfoRequest = (function() {
    
            /**
             * Properties of an InfoRequest.
             * @memberof PB_Storage
             * @interface IInfoRequest
             * @property {string|null} [path] InfoRequest path
             */
    
            /**
             * Constructs a new InfoRequest.
             * @memberof PB_Storage
             * @classdesc Represents an InfoRequest.
             * @implements IInfoRequest
             * @constructor
             * @param {PB_Storage.IInfoRequest=} [properties] Properties to set
             */
            function InfoRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * InfoRequest path.
             * @member {string} path
             * @memberof PB_Storage.InfoRequest
             * @instance
             */
            InfoRequest.prototype.path = "";
    
            /**
             * Creates a new InfoRequest instance using the specified properties.
             * @function create
             * @memberof PB_Storage.InfoRequest
             * @static
             * @param {PB_Storage.IInfoRequest=} [properties] Properties to set
             * @returns {PB_Storage.InfoRequest} InfoRequest instance
             */
            InfoRequest.create = function create(properties) {
                return new InfoRequest(properties);
            };
    
            /**
             * Encodes the specified InfoRequest message. Does not implicitly {@link PB_Storage.InfoRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.InfoRequest
             * @static
             * @param {PB_Storage.IInfoRequest} message InfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            InfoRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                return writer;
            };
    
            /**
             * Encodes the specified InfoRequest message, length delimited. Does not implicitly {@link PB_Storage.InfoRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.InfoRequest
             * @static
             * @param {PB_Storage.IInfoRequest} message InfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            InfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an InfoRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.InfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.InfoRequest} InfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            InfoRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.InfoRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.path = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an InfoRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.InfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.InfoRequest} InfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            InfoRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an InfoRequest message.
             * @function verify
             * @memberof PB_Storage.InfoRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            InfoRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.path != null && message.hasOwnProperty("path"))
                    if (!$util.isString(message.path))
                        return "path: string expected";
                return null;
            };
    
            /**
             * Creates an InfoRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.InfoRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.InfoRequest} InfoRequest
             */
            InfoRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.InfoRequest)
                    return object;
                var message = new $root.PB_Storage.InfoRequest();
                if (object.path != null)
                    message.path = String(object.path);
                return message;
            };
    
            /**
             * Creates a plain object from an InfoRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.InfoRequest
             * @static
             * @param {PB_Storage.InfoRequest} message InfoRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            InfoRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.path = "";
                if (message.path != null && message.hasOwnProperty("path"))
                    object.path = message.path;
                return object;
            };
    
            /**
             * Converts this InfoRequest to JSON.
             * @function toJSON
             * @memberof PB_Storage.InfoRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            InfoRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for InfoRequest
             * @function getTypeUrl
             * @memberof PB_Storage.InfoRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            InfoRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.InfoRequest";
            };
    
            return InfoRequest;
        })();
    
        PB_Storage.InfoResponse = (function() {
    
            /**
             * Properties of an InfoResponse.
             * @memberof PB_Storage
             * @interface IInfoResponse
             * @property {number|Long|null} [totalSpace] InfoResponse totalSpace
             * @property {number|Long|null} [freeSpace] InfoResponse freeSpace
             */
    
            /**
             * Constructs a new InfoResponse.
             * @memberof PB_Storage
             * @classdesc Represents an InfoResponse.
             * @implements IInfoResponse
             * @constructor
             * @param {PB_Storage.IInfoResponse=} [properties] Properties to set
             */
            function InfoResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * InfoResponse totalSpace.
             * @member {number|Long} totalSpace
             * @memberof PB_Storage.InfoResponse
             * @instance
             */
            InfoResponse.prototype.totalSpace = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * InfoResponse freeSpace.
             * @member {number|Long} freeSpace
             * @memberof PB_Storage.InfoResponse
             * @instance
             */
            InfoResponse.prototype.freeSpace = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Creates a new InfoResponse instance using the specified properties.
             * @function create
             * @memberof PB_Storage.InfoResponse
             * @static
             * @param {PB_Storage.IInfoResponse=} [properties] Properties to set
             * @returns {PB_Storage.InfoResponse} InfoResponse instance
             */
            InfoResponse.create = function create(properties) {
                return new InfoResponse(properties);
            };
    
            /**
             * Encodes the specified InfoResponse message. Does not implicitly {@link PB_Storage.InfoResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.InfoResponse
             * @static
             * @param {PB_Storage.IInfoResponse} message InfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            InfoResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.totalSpace != null && Object.hasOwnProperty.call(message, "totalSpace"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.totalSpace);
                if (message.freeSpace != null && Object.hasOwnProperty.call(message, "freeSpace"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.freeSpace);
                return writer;
            };
    
            /**
             * Encodes the specified InfoResponse message, length delimited. Does not implicitly {@link PB_Storage.InfoResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.InfoResponse
             * @static
             * @param {PB_Storage.IInfoResponse} message InfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            InfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an InfoResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.InfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.InfoResponse} InfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            InfoResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.InfoResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.totalSpace = reader.uint64();
                            break;
                        }
                    case 2: {
                            message.freeSpace = reader.uint64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an InfoResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.InfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.InfoResponse} InfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            InfoResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an InfoResponse message.
             * @function verify
             * @memberof PB_Storage.InfoResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            InfoResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.totalSpace != null && message.hasOwnProperty("totalSpace"))
                    if (!$util.isInteger(message.totalSpace) && !(message.totalSpace && $util.isInteger(message.totalSpace.low) && $util.isInteger(message.totalSpace.high)))
                        return "totalSpace: integer|Long expected";
                if (message.freeSpace != null && message.hasOwnProperty("freeSpace"))
                    if (!$util.isInteger(message.freeSpace) && !(message.freeSpace && $util.isInteger(message.freeSpace.low) && $util.isInteger(message.freeSpace.high)))
                        return "freeSpace: integer|Long expected";
                return null;
            };
    
            /**
             * Creates an InfoResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.InfoResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.InfoResponse} InfoResponse
             */
            InfoResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.InfoResponse)
                    return object;
                var message = new $root.PB_Storage.InfoResponse();
                if (object.totalSpace != null)
                    if ($util.Long)
                        (message.totalSpace = $util.Long.fromValue(object.totalSpace)).unsigned = true;
                    else if (typeof object.totalSpace === "string")
                        message.totalSpace = parseInt(object.totalSpace, 10);
                    else if (typeof object.totalSpace === "number")
                        message.totalSpace = object.totalSpace;
                    else if (typeof object.totalSpace === "object")
                        message.totalSpace = new $util.LongBits(object.totalSpace.low >>> 0, object.totalSpace.high >>> 0).toNumber(true);
                if (object.freeSpace != null)
                    if ($util.Long)
                        (message.freeSpace = $util.Long.fromValue(object.freeSpace)).unsigned = true;
                    else if (typeof object.freeSpace === "string")
                        message.freeSpace = parseInt(object.freeSpace, 10);
                    else if (typeof object.freeSpace === "number")
                        message.freeSpace = object.freeSpace;
                    else if (typeof object.freeSpace === "object")
                        message.freeSpace = new $util.LongBits(object.freeSpace.low >>> 0, object.freeSpace.high >>> 0).toNumber(true);
                return message;
            };
    
            /**
             * Creates a plain object from an InfoResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.InfoResponse
             * @static
             * @param {PB_Storage.InfoResponse} message InfoResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            InfoResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.totalSpace = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.totalSpace = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.freeSpace = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.freeSpace = options.longs === String ? "0" : 0;
                }
                if (message.totalSpace != null && message.hasOwnProperty("totalSpace"))
                    if (typeof message.totalSpace === "number")
                        object.totalSpace = options.longs === String ? String(message.totalSpace) : message.totalSpace;
                    else
                        object.totalSpace = options.longs === String ? $util.Long.prototype.toString.call(message.totalSpace) : options.longs === Number ? new $util.LongBits(message.totalSpace.low >>> 0, message.totalSpace.high >>> 0).toNumber(true) : message.totalSpace;
                if (message.freeSpace != null && message.hasOwnProperty("freeSpace"))
                    if (typeof message.freeSpace === "number")
                        object.freeSpace = options.longs === String ? String(message.freeSpace) : message.freeSpace;
                    else
                        object.freeSpace = options.longs === String ? $util.Long.prototype.toString.call(message.freeSpace) : options.longs === Number ? new $util.LongBits(message.freeSpace.low >>> 0, message.freeSpace.high >>> 0).toNumber(true) : message.freeSpace;
                return object;
            };
    
            /**
             * Converts this InfoResponse to JSON.
             * @function toJSON
             * @memberof PB_Storage.InfoResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            InfoResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for InfoResponse
             * @function getTypeUrl
             * @memberof PB_Storage.InfoResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            InfoResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.InfoResponse";
            };
    
            return InfoResponse;
        })();
    
        PB_Storage.TimestampRequest = (function() {
    
            /**
             * Properties of a TimestampRequest.
             * @memberof PB_Storage
             * @interface ITimestampRequest
             * @property {string|null} [path] TimestampRequest path
             */
    
            /**
             * Constructs a new TimestampRequest.
             * @memberof PB_Storage
             * @classdesc Represents a TimestampRequest.
             * @implements ITimestampRequest
             * @constructor
             * @param {PB_Storage.ITimestampRequest=} [properties] Properties to set
             */
            function TimestampRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * TimestampRequest path.
             * @member {string} path
             * @memberof PB_Storage.TimestampRequest
             * @instance
             */
            TimestampRequest.prototype.path = "";
    
            /**
             * Creates a new TimestampRequest instance using the specified properties.
             * @function create
             * @memberof PB_Storage.TimestampRequest
             * @static
             * @param {PB_Storage.ITimestampRequest=} [properties] Properties to set
             * @returns {PB_Storage.TimestampRequest} TimestampRequest instance
             */
            TimestampRequest.create = function create(properties) {
                return new TimestampRequest(properties);
            };
    
            /**
             * Encodes the specified TimestampRequest message. Does not implicitly {@link PB_Storage.TimestampRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.TimestampRequest
             * @static
             * @param {PB_Storage.ITimestampRequest} message TimestampRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TimestampRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                return writer;
            };
    
            /**
             * Encodes the specified TimestampRequest message, length delimited. Does not implicitly {@link PB_Storage.TimestampRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.TimestampRequest
             * @static
             * @param {PB_Storage.ITimestampRequest} message TimestampRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TimestampRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a TimestampRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.TimestampRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.TimestampRequest} TimestampRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TimestampRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.TimestampRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.path = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a TimestampRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.TimestampRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.TimestampRequest} TimestampRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TimestampRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a TimestampRequest message.
             * @function verify
             * @memberof PB_Storage.TimestampRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TimestampRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.path != null && message.hasOwnProperty("path"))
                    if (!$util.isString(message.path))
                        return "path: string expected";
                return null;
            };
    
            /**
             * Creates a TimestampRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.TimestampRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.TimestampRequest} TimestampRequest
             */
            TimestampRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.TimestampRequest)
                    return object;
                var message = new $root.PB_Storage.TimestampRequest();
                if (object.path != null)
                    message.path = String(object.path);
                return message;
            };
    
            /**
             * Creates a plain object from a TimestampRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.TimestampRequest
             * @static
             * @param {PB_Storage.TimestampRequest} message TimestampRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TimestampRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.path = "";
                if (message.path != null && message.hasOwnProperty("path"))
                    object.path = message.path;
                return object;
            };
    
            /**
             * Converts this TimestampRequest to JSON.
             * @function toJSON
             * @memberof PB_Storage.TimestampRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TimestampRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for TimestampRequest
             * @function getTypeUrl
             * @memberof PB_Storage.TimestampRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TimestampRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.TimestampRequest";
            };
    
            return TimestampRequest;
        })();
    
        PB_Storage.TimestampResponse = (function() {
    
            /**
             * Properties of a TimestampResponse.
             * @memberof PB_Storage
             * @interface ITimestampResponse
             * @property {number|null} [timestamp] TimestampResponse timestamp
             */
    
            /**
             * Constructs a new TimestampResponse.
             * @memberof PB_Storage
             * @classdesc Represents a TimestampResponse.
             * @implements ITimestampResponse
             * @constructor
             * @param {PB_Storage.ITimestampResponse=} [properties] Properties to set
             */
            function TimestampResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * TimestampResponse timestamp.
             * @member {number} timestamp
             * @memberof PB_Storage.TimestampResponse
             * @instance
             */
            TimestampResponse.prototype.timestamp = 0;
    
            /**
             * Creates a new TimestampResponse instance using the specified properties.
             * @function create
             * @memberof PB_Storage.TimestampResponse
             * @static
             * @param {PB_Storage.ITimestampResponse=} [properties] Properties to set
             * @returns {PB_Storage.TimestampResponse} TimestampResponse instance
             */
            TimestampResponse.create = function create(properties) {
                return new TimestampResponse(properties);
            };
    
            /**
             * Encodes the specified TimestampResponse message. Does not implicitly {@link PB_Storage.TimestampResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.TimestampResponse
             * @static
             * @param {PB_Storage.ITimestampResponse} message TimestampResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TimestampResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.timestamp != null && Object.hasOwnProperty.call(message, "timestamp"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.timestamp);
                return writer;
            };
    
            /**
             * Encodes the specified TimestampResponse message, length delimited. Does not implicitly {@link PB_Storage.TimestampResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.TimestampResponse
             * @static
             * @param {PB_Storage.ITimestampResponse} message TimestampResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TimestampResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a TimestampResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.TimestampResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.TimestampResponse} TimestampResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TimestampResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.TimestampResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.timestamp = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a TimestampResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.TimestampResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.TimestampResponse} TimestampResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TimestampResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a TimestampResponse message.
             * @function verify
             * @memberof PB_Storage.TimestampResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TimestampResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    if (!$util.isInteger(message.timestamp))
                        return "timestamp: integer expected";
                return null;
            };
    
            /**
             * Creates a TimestampResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.TimestampResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.TimestampResponse} TimestampResponse
             */
            TimestampResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.TimestampResponse)
                    return object;
                var message = new $root.PB_Storage.TimestampResponse();
                if (object.timestamp != null)
                    message.timestamp = object.timestamp >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a TimestampResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.TimestampResponse
             * @static
             * @param {PB_Storage.TimestampResponse} message TimestampResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TimestampResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.timestamp = 0;
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    object.timestamp = message.timestamp;
                return object;
            };
    
            /**
             * Converts this TimestampResponse to JSON.
             * @function toJSON
             * @memberof PB_Storage.TimestampResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TimestampResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for TimestampResponse
             * @function getTypeUrl
             * @memberof PB_Storage.TimestampResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TimestampResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.TimestampResponse";
            };
    
            return TimestampResponse;
        })();
    
        PB_Storage.StatRequest = (function() {
    
            /**
             * Properties of a StatRequest.
             * @memberof PB_Storage
             * @interface IStatRequest
             * @property {string|null} [path] StatRequest path
             */
    
            /**
             * Constructs a new StatRequest.
             * @memberof PB_Storage
             * @classdesc Represents a StatRequest.
             * @implements IStatRequest
             * @constructor
             * @param {PB_Storage.IStatRequest=} [properties] Properties to set
             */
            function StatRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * StatRequest path.
             * @member {string} path
             * @memberof PB_Storage.StatRequest
             * @instance
             */
            StatRequest.prototype.path = "";
    
            /**
             * Creates a new StatRequest instance using the specified properties.
             * @function create
             * @memberof PB_Storage.StatRequest
             * @static
             * @param {PB_Storage.IStatRequest=} [properties] Properties to set
             * @returns {PB_Storage.StatRequest} StatRequest instance
             */
            StatRequest.create = function create(properties) {
                return new StatRequest(properties);
            };
    
            /**
             * Encodes the specified StatRequest message. Does not implicitly {@link PB_Storage.StatRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.StatRequest
             * @static
             * @param {PB_Storage.IStatRequest} message StatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StatRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                return writer;
            };
    
            /**
             * Encodes the specified StatRequest message, length delimited. Does not implicitly {@link PB_Storage.StatRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.StatRequest
             * @static
             * @param {PB_Storage.IStatRequest} message StatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StatRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a StatRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.StatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.StatRequest} StatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StatRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.StatRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.path = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a StatRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.StatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.StatRequest} StatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StatRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a StatRequest message.
             * @function verify
             * @memberof PB_Storage.StatRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StatRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.path != null && message.hasOwnProperty("path"))
                    if (!$util.isString(message.path))
                        return "path: string expected";
                return null;
            };
    
            /**
             * Creates a StatRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.StatRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.StatRequest} StatRequest
             */
            StatRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.StatRequest)
                    return object;
                var message = new $root.PB_Storage.StatRequest();
                if (object.path != null)
                    message.path = String(object.path);
                return message;
            };
    
            /**
             * Creates a plain object from a StatRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.StatRequest
             * @static
             * @param {PB_Storage.StatRequest} message StatRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StatRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.path = "";
                if (message.path != null && message.hasOwnProperty("path"))
                    object.path = message.path;
                return object;
            };
    
            /**
             * Converts this StatRequest to JSON.
             * @function toJSON
             * @memberof PB_Storage.StatRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StatRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for StatRequest
             * @function getTypeUrl
             * @memberof PB_Storage.StatRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            StatRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.StatRequest";
            };
    
            return StatRequest;
        })();
    
        PB_Storage.StatResponse = (function() {
    
            /**
             * Properties of a StatResponse.
             * @memberof PB_Storage
             * @interface IStatResponse
             * @property {PB_Storage.IFile|null} [file] StatResponse file
             */
    
            /**
             * Constructs a new StatResponse.
             * @memberof PB_Storage
             * @classdesc Represents a StatResponse.
             * @implements IStatResponse
             * @constructor
             * @param {PB_Storage.IStatResponse=} [properties] Properties to set
             */
            function StatResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * StatResponse file.
             * @member {PB_Storage.IFile|null|undefined} file
             * @memberof PB_Storage.StatResponse
             * @instance
             */
            StatResponse.prototype.file = null;
    
            /**
             * Creates a new StatResponse instance using the specified properties.
             * @function create
             * @memberof PB_Storage.StatResponse
             * @static
             * @param {PB_Storage.IStatResponse=} [properties] Properties to set
             * @returns {PB_Storage.StatResponse} StatResponse instance
             */
            StatResponse.create = function create(properties) {
                return new StatResponse(properties);
            };
    
            /**
             * Encodes the specified StatResponse message. Does not implicitly {@link PB_Storage.StatResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.StatResponse
             * @static
             * @param {PB_Storage.IStatResponse} message StatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StatResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.file != null && Object.hasOwnProperty.call(message, "file"))
                    $root.PB_Storage.File.encode(message.file, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified StatResponse message, length delimited. Does not implicitly {@link PB_Storage.StatResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.StatResponse
             * @static
             * @param {PB_Storage.IStatResponse} message StatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StatResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a StatResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.StatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.StatResponse} StatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StatResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.StatResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.file = $root.PB_Storage.File.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a StatResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.StatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.StatResponse} StatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StatResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a StatResponse message.
             * @function verify
             * @memberof PB_Storage.StatResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StatResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.file != null && message.hasOwnProperty("file")) {
                    var error = $root.PB_Storage.File.verify(message.file);
                    if (error)
                        return "file." + error;
                }
                return null;
            };
    
            /**
             * Creates a StatResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.StatResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.StatResponse} StatResponse
             */
            StatResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.StatResponse)
                    return object;
                var message = new $root.PB_Storage.StatResponse();
                if (object.file != null) {
                    if (typeof object.file !== "object")
                        throw TypeError(".PB_Storage.StatResponse.file: object expected");
                    message.file = $root.PB_Storage.File.fromObject(object.file);
                }
                return message;
            };
    
            /**
             * Creates a plain object from a StatResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.StatResponse
             * @static
             * @param {PB_Storage.StatResponse} message StatResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StatResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.file = null;
                if (message.file != null && message.hasOwnProperty("file"))
                    object.file = $root.PB_Storage.File.toObject(message.file, options);
                return object;
            };
    
            /**
             * Converts this StatResponse to JSON.
             * @function toJSON
             * @memberof PB_Storage.StatResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StatResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for StatResponse
             * @function getTypeUrl
             * @memberof PB_Storage.StatResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            StatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.StatResponse";
            };
    
            return StatResponse;
        })();
    
        PB_Storage.ListRequest = (function() {
    
            /**
             * Properties of a ListRequest.
             * @memberof PB_Storage
             * @interface IListRequest
             * @property {string|null} [path] ListRequest path
             * @property {boolean|null} [includeMd5] ListRequest includeMd5
             * @property {number|null} [filterMaxSize] ListRequest filterMaxSize
             */
    
            /**
             * Constructs a new ListRequest.
             * @memberof PB_Storage
             * @classdesc Represents a ListRequest.
             * @implements IListRequest
             * @constructor
             * @param {PB_Storage.IListRequest=} [properties] Properties to set
             */
            function ListRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ListRequest path.
             * @member {string} path
             * @memberof PB_Storage.ListRequest
             * @instance
             */
            ListRequest.prototype.path = "";
    
            /**
             * ListRequest includeMd5.
             * @member {boolean} includeMd5
             * @memberof PB_Storage.ListRequest
             * @instance
             */
            ListRequest.prototype.includeMd5 = false;
    
            /**
             * ListRequest filterMaxSize.
             * @member {number} filterMaxSize
             * @memberof PB_Storage.ListRequest
             * @instance
             */
            ListRequest.prototype.filterMaxSize = 0;
    
            /**
             * Creates a new ListRequest instance using the specified properties.
             * @function create
             * @memberof PB_Storage.ListRequest
             * @static
             * @param {PB_Storage.IListRequest=} [properties] Properties to set
             * @returns {PB_Storage.ListRequest} ListRequest instance
             */
            ListRequest.create = function create(properties) {
                return new ListRequest(properties);
            };
    
            /**
             * Encodes the specified ListRequest message. Does not implicitly {@link PB_Storage.ListRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.ListRequest
             * @static
             * @param {PB_Storage.IListRequest} message ListRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ListRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                if (message.includeMd5 != null && Object.hasOwnProperty.call(message, "includeMd5"))
                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.includeMd5);
                if (message.filterMaxSize != null && Object.hasOwnProperty.call(message, "filterMaxSize"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.filterMaxSize);
                return writer;
            };
    
            /**
             * Encodes the specified ListRequest message, length delimited. Does not implicitly {@link PB_Storage.ListRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.ListRequest
             * @static
             * @param {PB_Storage.IListRequest} message ListRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ListRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ListRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.ListRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.ListRequest} ListRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ListRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.ListRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.path = reader.string();
                            break;
                        }
                    case 2: {
                            message.includeMd5 = reader.bool();
                            break;
                        }
                    case 3: {
                            message.filterMaxSize = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ListRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.ListRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.ListRequest} ListRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ListRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ListRequest message.
             * @function verify
             * @memberof PB_Storage.ListRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ListRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.path != null && message.hasOwnProperty("path"))
                    if (!$util.isString(message.path))
                        return "path: string expected";
                if (message.includeMd5 != null && message.hasOwnProperty("includeMd5"))
                    if (typeof message.includeMd5 !== "boolean")
                        return "includeMd5: boolean expected";
                if (message.filterMaxSize != null && message.hasOwnProperty("filterMaxSize"))
                    if (!$util.isInteger(message.filterMaxSize))
                        return "filterMaxSize: integer expected";
                return null;
            };
    
            /**
             * Creates a ListRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.ListRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.ListRequest} ListRequest
             */
            ListRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.ListRequest)
                    return object;
                var message = new $root.PB_Storage.ListRequest();
                if (object.path != null)
                    message.path = String(object.path);
                if (object.includeMd5 != null)
                    message.includeMd5 = Boolean(object.includeMd5);
                if (object.filterMaxSize != null)
                    message.filterMaxSize = object.filterMaxSize >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a ListRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.ListRequest
             * @static
             * @param {PB_Storage.ListRequest} message ListRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ListRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.path = "";
                    object.includeMd5 = false;
                    object.filterMaxSize = 0;
                }
                if (message.path != null && message.hasOwnProperty("path"))
                    object.path = message.path;
                if (message.includeMd5 != null && message.hasOwnProperty("includeMd5"))
                    object.includeMd5 = message.includeMd5;
                if (message.filterMaxSize != null && message.hasOwnProperty("filterMaxSize"))
                    object.filterMaxSize = message.filterMaxSize;
                return object;
            };
    
            /**
             * Converts this ListRequest to JSON.
             * @function toJSON
             * @memberof PB_Storage.ListRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ListRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ListRequest
             * @function getTypeUrl
             * @memberof PB_Storage.ListRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ListRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.ListRequest";
            };
    
            return ListRequest;
        })();
    
        PB_Storage.ListResponse = (function() {
    
            /**
             * Properties of a ListResponse.
             * @memberof PB_Storage
             * @interface IListResponse
             * @property {Array.<PB_Storage.IFile>|null} [file] ListResponse file
             */
    
            /**
             * Constructs a new ListResponse.
             * @memberof PB_Storage
             * @classdesc Represents a ListResponse.
             * @implements IListResponse
             * @constructor
             * @param {PB_Storage.IListResponse=} [properties] Properties to set
             */
            function ListResponse(properties) {
                this.file = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ListResponse file.
             * @member {Array.<PB_Storage.IFile>} file
             * @memberof PB_Storage.ListResponse
             * @instance
             */
            ListResponse.prototype.file = $util.emptyArray;
    
            /**
             * Creates a new ListResponse instance using the specified properties.
             * @function create
             * @memberof PB_Storage.ListResponse
             * @static
             * @param {PB_Storage.IListResponse=} [properties] Properties to set
             * @returns {PB_Storage.ListResponse} ListResponse instance
             */
            ListResponse.create = function create(properties) {
                return new ListResponse(properties);
            };
    
            /**
             * Encodes the specified ListResponse message. Does not implicitly {@link PB_Storage.ListResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.ListResponse
             * @static
             * @param {PB_Storage.IListResponse} message ListResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ListResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.file != null && message.file.length)
                    for (var i = 0; i < message.file.length; ++i)
                        $root.PB_Storage.File.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified ListResponse message, length delimited. Does not implicitly {@link PB_Storage.ListResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.ListResponse
             * @static
             * @param {PB_Storage.IListResponse} message ListResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ListResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ListResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.ListResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.ListResponse} ListResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ListResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.ListResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.file && message.file.length))
                                message.file = [];
                            message.file.push($root.PB_Storage.File.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ListResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.ListResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.ListResponse} ListResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ListResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ListResponse message.
             * @function verify
             * @memberof PB_Storage.ListResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ListResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.file != null && message.hasOwnProperty("file")) {
                    if (!Array.isArray(message.file))
                        return "file: array expected";
                    for (var i = 0; i < message.file.length; ++i) {
                        var error = $root.PB_Storage.File.verify(message.file[i]);
                        if (error)
                            return "file." + error;
                    }
                }
                return null;
            };
    
            /**
             * Creates a ListResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.ListResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.ListResponse} ListResponse
             */
            ListResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.ListResponse)
                    return object;
                var message = new $root.PB_Storage.ListResponse();
                if (object.file) {
                    if (!Array.isArray(object.file))
                        throw TypeError(".PB_Storage.ListResponse.file: array expected");
                    message.file = [];
                    for (var i = 0; i < object.file.length; ++i) {
                        if (typeof object.file[i] !== "object")
                            throw TypeError(".PB_Storage.ListResponse.file: object expected");
                        message.file[i] = $root.PB_Storage.File.fromObject(object.file[i]);
                    }
                }
                return message;
            };
    
            /**
             * Creates a plain object from a ListResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.ListResponse
             * @static
             * @param {PB_Storage.ListResponse} message ListResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ListResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.file = [];
                if (message.file && message.file.length) {
                    object.file = [];
                    for (var j = 0; j < message.file.length; ++j)
                        object.file[j] = $root.PB_Storage.File.toObject(message.file[j], options);
                }
                return object;
            };
    
            /**
             * Converts this ListResponse to JSON.
             * @function toJSON
             * @memberof PB_Storage.ListResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ListResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ListResponse
             * @function getTypeUrl
             * @memberof PB_Storage.ListResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ListResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.ListResponse";
            };
    
            return ListResponse;
        })();
    
        PB_Storage.ReadRequest = (function() {
    
            /**
             * Properties of a ReadRequest.
             * @memberof PB_Storage
             * @interface IReadRequest
             * @property {string|null} [path] ReadRequest path
             */
    
            /**
             * Constructs a new ReadRequest.
             * @memberof PB_Storage
             * @classdesc Represents a ReadRequest.
             * @implements IReadRequest
             * @constructor
             * @param {PB_Storage.IReadRequest=} [properties] Properties to set
             */
            function ReadRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ReadRequest path.
             * @member {string} path
             * @memberof PB_Storage.ReadRequest
             * @instance
             */
            ReadRequest.prototype.path = "";
    
            /**
             * Creates a new ReadRequest instance using the specified properties.
             * @function create
             * @memberof PB_Storage.ReadRequest
             * @static
             * @param {PB_Storage.IReadRequest=} [properties] Properties to set
             * @returns {PB_Storage.ReadRequest} ReadRequest instance
             */
            ReadRequest.create = function create(properties) {
                return new ReadRequest(properties);
            };
    
            /**
             * Encodes the specified ReadRequest message. Does not implicitly {@link PB_Storage.ReadRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.ReadRequest
             * @static
             * @param {PB_Storage.IReadRequest} message ReadRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReadRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                return writer;
            };
    
            /**
             * Encodes the specified ReadRequest message, length delimited. Does not implicitly {@link PB_Storage.ReadRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.ReadRequest
             * @static
             * @param {PB_Storage.IReadRequest} message ReadRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReadRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ReadRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.ReadRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.ReadRequest} ReadRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReadRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.ReadRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.path = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ReadRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.ReadRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.ReadRequest} ReadRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReadRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ReadRequest message.
             * @function verify
             * @memberof PB_Storage.ReadRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ReadRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.path != null && message.hasOwnProperty("path"))
                    if (!$util.isString(message.path))
                        return "path: string expected";
                return null;
            };
    
            /**
             * Creates a ReadRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.ReadRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.ReadRequest} ReadRequest
             */
            ReadRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.ReadRequest)
                    return object;
                var message = new $root.PB_Storage.ReadRequest();
                if (object.path != null)
                    message.path = String(object.path);
                return message;
            };
    
            /**
             * Creates a plain object from a ReadRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.ReadRequest
             * @static
             * @param {PB_Storage.ReadRequest} message ReadRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ReadRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.path = "";
                if (message.path != null && message.hasOwnProperty("path"))
                    object.path = message.path;
                return object;
            };
    
            /**
             * Converts this ReadRequest to JSON.
             * @function toJSON
             * @memberof PB_Storage.ReadRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ReadRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ReadRequest
             * @function getTypeUrl
             * @memberof PB_Storage.ReadRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ReadRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.ReadRequest";
            };
    
            return ReadRequest;
        })();
    
        PB_Storage.ReadResponse = (function() {
    
            /**
             * Properties of a ReadResponse.
             * @memberof PB_Storage
             * @interface IReadResponse
             * @property {PB_Storage.IFile|null} [file] ReadResponse file
             */
    
            /**
             * Constructs a new ReadResponse.
             * @memberof PB_Storage
             * @classdesc Represents a ReadResponse.
             * @implements IReadResponse
             * @constructor
             * @param {PB_Storage.IReadResponse=} [properties] Properties to set
             */
            function ReadResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ReadResponse file.
             * @member {PB_Storage.IFile|null|undefined} file
             * @memberof PB_Storage.ReadResponse
             * @instance
             */
            ReadResponse.prototype.file = null;
    
            /**
             * Creates a new ReadResponse instance using the specified properties.
             * @function create
             * @memberof PB_Storage.ReadResponse
             * @static
             * @param {PB_Storage.IReadResponse=} [properties] Properties to set
             * @returns {PB_Storage.ReadResponse} ReadResponse instance
             */
            ReadResponse.create = function create(properties) {
                return new ReadResponse(properties);
            };
    
            /**
             * Encodes the specified ReadResponse message. Does not implicitly {@link PB_Storage.ReadResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.ReadResponse
             * @static
             * @param {PB_Storage.IReadResponse} message ReadResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReadResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.file != null && Object.hasOwnProperty.call(message, "file"))
                    $root.PB_Storage.File.encode(message.file, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified ReadResponse message, length delimited. Does not implicitly {@link PB_Storage.ReadResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.ReadResponse
             * @static
             * @param {PB_Storage.IReadResponse} message ReadResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReadResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ReadResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.ReadResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.ReadResponse} ReadResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReadResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.ReadResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.file = $root.PB_Storage.File.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ReadResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.ReadResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.ReadResponse} ReadResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReadResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ReadResponse message.
             * @function verify
             * @memberof PB_Storage.ReadResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ReadResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.file != null && message.hasOwnProperty("file")) {
                    var error = $root.PB_Storage.File.verify(message.file);
                    if (error)
                        return "file." + error;
                }
                return null;
            };
    
            /**
             * Creates a ReadResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.ReadResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.ReadResponse} ReadResponse
             */
            ReadResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.ReadResponse)
                    return object;
                var message = new $root.PB_Storage.ReadResponse();
                if (object.file != null) {
                    if (typeof object.file !== "object")
                        throw TypeError(".PB_Storage.ReadResponse.file: object expected");
                    message.file = $root.PB_Storage.File.fromObject(object.file);
                }
                return message;
            };
    
            /**
             * Creates a plain object from a ReadResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.ReadResponse
             * @static
             * @param {PB_Storage.ReadResponse} message ReadResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ReadResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.file = null;
                if (message.file != null && message.hasOwnProperty("file"))
                    object.file = $root.PB_Storage.File.toObject(message.file, options);
                return object;
            };
    
            /**
             * Converts this ReadResponse to JSON.
             * @function toJSON
             * @memberof PB_Storage.ReadResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ReadResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ReadResponse
             * @function getTypeUrl
             * @memberof PB_Storage.ReadResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ReadResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.ReadResponse";
            };
    
            return ReadResponse;
        })();
    
        PB_Storage.WriteRequest = (function() {
    
            /**
             * Properties of a WriteRequest.
             * @memberof PB_Storage
             * @interface IWriteRequest
             * @property {string|null} [path] WriteRequest path
             * @property {PB_Storage.IFile|null} [file] WriteRequest file
             */
    
            /**
             * Constructs a new WriteRequest.
             * @memberof PB_Storage
             * @classdesc Represents a WriteRequest.
             * @implements IWriteRequest
             * @constructor
             * @param {PB_Storage.IWriteRequest=} [properties] Properties to set
             */
            function WriteRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * WriteRequest path.
             * @member {string} path
             * @memberof PB_Storage.WriteRequest
             * @instance
             */
            WriteRequest.prototype.path = "";
    
            /**
             * WriteRequest file.
             * @member {PB_Storage.IFile|null|undefined} file
             * @memberof PB_Storage.WriteRequest
             * @instance
             */
            WriteRequest.prototype.file = null;
    
            /**
             * Creates a new WriteRequest instance using the specified properties.
             * @function create
             * @memberof PB_Storage.WriteRequest
             * @static
             * @param {PB_Storage.IWriteRequest=} [properties] Properties to set
             * @returns {PB_Storage.WriteRequest} WriteRequest instance
             */
            WriteRequest.create = function create(properties) {
                return new WriteRequest(properties);
            };
    
            /**
             * Encodes the specified WriteRequest message. Does not implicitly {@link PB_Storage.WriteRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.WriteRequest
             * @static
             * @param {PB_Storage.IWriteRequest} message WriteRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WriteRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                if (message.file != null && Object.hasOwnProperty.call(message, "file"))
                    $root.PB_Storage.File.encode(message.file, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified WriteRequest message, length delimited. Does not implicitly {@link PB_Storage.WriteRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.WriteRequest
             * @static
             * @param {PB_Storage.IWriteRequest} message WriteRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WriteRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a WriteRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.WriteRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.WriteRequest} WriteRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WriteRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.WriteRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.path = reader.string();
                            break;
                        }
                    case 2: {
                            message.file = $root.PB_Storage.File.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a WriteRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.WriteRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.WriteRequest} WriteRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WriteRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a WriteRequest message.
             * @function verify
             * @memberof PB_Storage.WriteRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            WriteRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.path != null && message.hasOwnProperty("path"))
                    if (!$util.isString(message.path))
                        return "path: string expected";
                if (message.file != null && message.hasOwnProperty("file")) {
                    var error = $root.PB_Storage.File.verify(message.file);
                    if (error)
                        return "file." + error;
                }
                return null;
            };
    
            /**
             * Creates a WriteRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.WriteRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.WriteRequest} WriteRequest
             */
            WriteRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.WriteRequest)
                    return object;
                var message = new $root.PB_Storage.WriteRequest();
                if (object.path != null)
                    message.path = String(object.path);
                if (object.file != null) {
                    if (typeof object.file !== "object")
                        throw TypeError(".PB_Storage.WriteRequest.file: object expected");
                    message.file = $root.PB_Storage.File.fromObject(object.file);
                }
                return message;
            };
    
            /**
             * Creates a plain object from a WriteRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.WriteRequest
             * @static
             * @param {PB_Storage.WriteRequest} message WriteRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            WriteRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.path = "";
                    object.file = null;
                }
                if (message.path != null && message.hasOwnProperty("path"))
                    object.path = message.path;
                if (message.file != null && message.hasOwnProperty("file"))
                    object.file = $root.PB_Storage.File.toObject(message.file, options);
                return object;
            };
    
            /**
             * Converts this WriteRequest to JSON.
             * @function toJSON
             * @memberof PB_Storage.WriteRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            WriteRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for WriteRequest
             * @function getTypeUrl
             * @memberof PB_Storage.WriteRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            WriteRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.WriteRequest";
            };
    
            return WriteRequest;
        })();
    
        PB_Storage.DeleteRequest = (function() {
    
            /**
             * Properties of a DeleteRequest.
             * @memberof PB_Storage
             * @interface IDeleteRequest
             * @property {string|null} [path] DeleteRequest path
             * @property {boolean|null} [recursive] DeleteRequest recursive
             */
    
            /**
             * Constructs a new DeleteRequest.
             * @memberof PB_Storage
             * @classdesc Represents a DeleteRequest.
             * @implements IDeleteRequest
             * @constructor
             * @param {PB_Storage.IDeleteRequest=} [properties] Properties to set
             */
            function DeleteRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * DeleteRequest path.
             * @member {string} path
             * @memberof PB_Storage.DeleteRequest
             * @instance
             */
            DeleteRequest.prototype.path = "";
    
            /**
             * DeleteRequest recursive.
             * @member {boolean} recursive
             * @memberof PB_Storage.DeleteRequest
             * @instance
             */
            DeleteRequest.prototype.recursive = false;
    
            /**
             * Creates a new DeleteRequest instance using the specified properties.
             * @function create
             * @memberof PB_Storage.DeleteRequest
             * @static
             * @param {PB_Storage.IDeleteRequest=} [properties] Properties to set
             * @returns {PB_Storage.DeleteRequest} DeleteRequest instance
             */
            DeleteRequest.create = function create(properties) {
                return new DeleteRequest(properties);
            };
    
            /**
             * Encodes the specified DeleteRequest message. Does not implicitly {@link PB_Storage.DeleteRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.DeleteRequest
             * @static
             * @param {PB_Storage.IDeleteRequest} message DeleteRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeleteRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                if (message.recursive != null && Object.hasOwnProperty.call(message, "recursive"))
                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.recursive);
                return writer;
            };
    
            /**
             * Encodes the specified DeleteRequest message, length delimited. Does not implicitly {@link PB_Storage.DeleteRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.DeleteRequest
             * @static
             * @param {PB_Storage.IDeleteRequest} message DeleteRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeleteRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a DeleteRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.DeleteRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.DeleteRequest} DeleteRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeleteRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.DeleteRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.path = reader.string();
                            break;
                        }
                    case 2: {
                            message.recursive = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a DeleteRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.DeleteRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.DeleteRequest} DeleteRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeleteRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a DeleteRequest message.
             * @function verify
             * @memberof PB_Storage.DeleteRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DeleteRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.path != null && message.hasOwnProperty("path"))
                    if (!$util.isString(message.path))
                        return "path: string expected";
                if (message.recursive != null && message.hasOwnProperty("recursive"))
                    if (typeof message.recursive !== "boolean")
                        return "recursive: boolean expected";
                return null;
            };
    
            /**
             * Creates a DeleteRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.DeleteRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.DeleteRequest} DeleteRequest
             */
            DeleteRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.DeleteRequest)
                    return object;
                var message = new $root.PB_Storage.DeleteRequest();
                if (object.path != null)
                    message.path = String(object.path);
                if (object.recursive != null)
                    message.recursive = Boolean(object.recursive);
                return message;
            };
    
            /**
             * Creates a plain object from a DeleteRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.DeleteRequest
             * @static
             * @param {PB_Storage.DeleteRequest} message DeleteRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DeleteRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.path = "";
                    object.recursive = false;
                }
                if (message.path != null && message.hasOwnProperty("path"))
                    object.path = message.path;
                if (message.recursive != null && message.hasOwnProperty("recursive"))
                    object.recursive = message.recursive;
                return object;
            };
    
            /**
             * Converts this DeleteRequest to JSON.
             * @function toJSON
             * @memberof PB_Storage.DeleteRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DeleteRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for DeleteRequest
             * @function getTypeUrl
             * @memberof PB_Storage.DeleteRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            DeleteRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.DeleteRequest";
            };
    
            return DeleteRequest;
        })();
    
        PB_Storage.MkdirRequest = (function() {
    
            /**
             * Properties of a MkdirRequest.
             * @memberof PB_Storage
             * @interface IMkdirRequest
             * @property {string|null} [path] MkdirRequest path
             */
    
            /**
             * Constructs a new MkdirRequest.
             * @memberof PB_Storage
             * @classdesc Represents a MkdirRequest.
             * @implements IMkdirRequest
             * @constructor
             * @param {PB_Storage.IMkdirRequest=} [properties] Properties to set
             */
            function MkdirRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * MkdirRequest path.
             * @member {string} path
             * @memberof PB_Storage.MkdirRequest
             * @instance
             */
            MkdirRequest.prototype.path = "";
    
            /**
             * Creates a new MkdirRequest instance using the specified properties.
             * @function create
             * @memberof PB_Storage.MkdirRequest
             * @static
             * @param {PB_Storage.IMkdirRequest=} [properties] Properties to set
             * @returns {PB_Storage.MkdirRequest} MkdirRequest instance
             */
            MkdirRequest.create = function create(properties) {
                return new MkdirRequest(properties);
            };
    
            /**
             * Encodes the specified MkdirRequest message. Does not implicitly {@link PB_Storage.MkdirRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.MkdirRequest
             * @static
             * @param {PB_Storage.IMkdirRequest} message MkdirRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MkdirRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                return writer;
            };
    
            /**
             * Encodes the specified MkdirRequest message, length delimited. Does not implicitly {@link PB_Storage.MkdirRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.MkdirRequest
             * @static
             * @param {PB_Storage.IMkdirRequest} message MkdirRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MkdirRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a MkdirRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.MkdirRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.MkdirRequest} MkdirRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MkdirRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.MkdirRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.path = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a MkdirRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.MkdirRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.MkdirRequest} MkdirRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MkdirRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a MkdirRequest message.
             * @function verify
             * @memberof PB_Storage.MkdirRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MkdirRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.path != null && message.hasOwnProperty("path"))
                    if (!$util.isString(message.path))
                        return "path: string expected";
                return null;
            };
    
            /**
             * Creates a MkdirRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.MkdirRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.MkdirRequest} MkdirRequest
             */
            MkdirRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.MkdirRequest)
                    return object;
                var message = new $root.PB_Storage.MkdirRequest();
                if (object.path != null)
                    message.path = String(object.path);
                return message;
            };
    
            /**
             * Creates a plain object from a MkdirRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.MkdirRequest
             * @static
             * @param {PB_Storage.MkdirRequest} message MkdirRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MkdirRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.path = "";
                if (message.path != null && message.hasOwnProperty("path"))
                    object.path = message.path;
                return object;
            };
    
            /**
             * Converts this MkdirRequest to JSON.
             * @function toJSON
             * @memberof PB_Storage.MkdirRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MkdirRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for MkdirRequest
             * @function getTypeUrl
             * @memberof PB_Storage.MkdirRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            MkdirRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.MkdirRequest";
            };
    
            return MkdirRequest;
        })();
    
        PB_Storage.Md5sumRequest = (function() {
    
            /**
             * Properties of a Md5sumRequest.
             * @memberof PB_Storage
             * @interface IMd5sumRequest
             * @property {string|null} [path] Md5sumRequest path
             */
    
            /**
             * Constructs a new Md5sumRequest.
             * @memberof PB_Storage
             * @classdesc Represents a Md5sumRequest.
             * @implements IMd5sumRequest
             * @constructor
             * @param {PB_Storage.IMd5sumRequest=} [properties] Properties to set
             */
            function Md5sumRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Md5sumRequest path.
             * @member {string} path
             * @memberof PB_Storage.Md5sumRequest
             * @instance
             */
            Md5sumRequest.prototype.path = "";
    
            /**
             * Creates a new Md5sumRequest instance using the specified properties.
             * @function create
             * @memberof PB_Storage.Md5sumRequest
             * @static
             * @param {PB_Storage.IMd5sumRequest=} [properties] Properties to set
             * @returns {PB_Storage.Md5sumRequest} Md5sumRequest instance
             */
            Md5sumRequest.create = function create(properties) {
                return new Md5sumRequest(properties);
            };
    
            /**
             * Encodes the specified Md5sumRequest message. Does not implicitly {@link PB_Storage.Md5sumRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.Md5sumRequest
             * @static
             * @param {PB_Storage.IMd5sumRequest} message Md5sumRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Md5sumRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                return writer;
            };
    
            /**
             * Encodes the specified Md5sumRequest message, length delimited. Does not implicitly {@link PB_Storage.Md5sumRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.Md5sumRequest
             * @static
             * @param {PB_Storage.IMd5sumRequest} message Md5sumRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Md5sumRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Md5sumRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.Md5sumRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.Md5sumRequest} Md5sumRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Md5sumRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.Md5sumRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.path = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Md5sumRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.Md5sumRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.Md5sumRequest} Md5sumRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Md5sumRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Md5sumRequest message.
             * @function verify
             * @memberof PB_Storage.Md5sumRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Md5sumRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.path != null && message.hasOwnProperty("path"))
                    if (!$util.isString(message.path))
                        return "path: string expected";
                return null;
            };
    
            /**
             * Creates a Md5sumRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.Md5sumRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.Md5sumRequest} Md5sumRequest
             */
            Md5sumRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.Md5sumRequest)
                    return object;
                var message = new $root.PB_Storage.Md5sumRequest();
                if (object.path != null)
                    message.path = String(object.path);
                return message;
            };
    
            /**
             * Creates a plain object from a Md5sumRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.Md5sumRequest
             * @static
             * @param {PB_Storage.Md5sumRequest} message Md5sumRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Md5sumRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.path = "";
                if (message.path != null && message.hasOwnProperty("path"))
                    object.path = message.path;
                return object;
            };
    
            /**
             * Converts this Md5sumRequest to JSON.
             * @function toJSON
             * @memberof PB_Storage.Md5sumRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Md5sumRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Md5sumRequest
             * @function getTypeUrl
             * @memberof PB_Storage.Md5sumRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Md5sumRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.Md5sumRequest";
            };
    
            return Md5sumRequest;
        })();
    
        PB_Storage.Md5sumResponse = (function() {
    
            /**
             * Properties of a Md5sumResponse.
             * @memberof PB_Storage
             * @interface IMd5sumResponse
             * @property {string|null} [md5sum] Md5sumResponse md5sum
             */
    
            /**
             * Constructs a new Md5sumResponse.
             * @memberof PB_Storage
             * @classdesc Represents a Md5sumResponse.
             * @implements IMd5sumResponse
             * @constructor
             * @param {PB_Storage.IMd5sumResponse=} [properties] Properties to set
             */
            function Md5sumResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Md5sumResponse md5sum.
             * @member {string} md5sum
             * @memberof PB_Storage.Md5sumResponse
             * @instance
             */
            Md5sumResponse.prototype.md5sum = "";
    
            /**
             * Creates a new Md5sumResponse instance using the specified properties.
             * @function create
             * @memberof PB_Storage.Md5sumResponse
             * @static
             * @param {PB_Storage.IMd5sumResponse=} [properties] Properties to set
             * @returns {PB_Storage.Md5sumResponse} Md5sumResponse instance
             */
            Md5sumResponse.create = function create(properties) {
                return new Md5sumResponse(properties);
            };
    
            /**
             * Encodes the specified Md5sumResponse message. Does not implicitly {@link PB_Storage.Md5sumResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.Md5sumResponse
             * @static
             * @param {PB_Storage.IMd5sumResponse} message Md5sumResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Md5sumResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.md5sum != null && Object.hasOwnProperty.call(message, "md5sum"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.md5sum);
                return writer;
            };
    
            /**
             * Encodes the specified Md5sumResponse message, length delimited. Does not implicitly {@link PB_Storage.Md5sumResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.Md5sumResponse
             * @static
             * @param {PB_Storage.IMd5sumResponse} message Md5sumResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Md5sumResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Md5sumResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.Md5sumResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.Md5sumResponse} Md5sumResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Md5sumResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.Md5sumResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.md5sum = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Md5sumResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.Md5sumResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.Md5sumResponse} Md5sumResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Md5sumResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Md5sumResponse message.
             * @function verify
             * @memberof PB_Storage.Md5sumResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Md5sumResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.md5sum != null && message.hasOwnProperty("md5sum"))
                    if (!$util.isString(message.md5sum))
                        return "md5sum: string expected";
                return null;
            };
    
            /**
             * Creates a Md5sumResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.Md5sumResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.Md5sumResponse} Md5sumResponse
             */
            Md5sumResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.Md5sumResponse)
                    return object;
                var message = new $root.PB_Storage.Md5sumResponse();
                if (object.md5sum != null)
                    message.md5sum = String(object.md5sum);
                return message;
            };
    
            /**
             * Creates a plain object from a Md5sumResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.Md5sumResponse
             * @static
             * @param {PB_Storage.Md5sumResponse} message Md5sumResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Md5sumResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.md5sum = "";
                if (message.md5sum != null && message.hasOwnProperty("md5sum"))
                    object.md5sum = message.md5sum;
                return object;
            };
    
            /**
             * Converts this Md5sumResponse to JSON.
             * @function toJSON
             * @memberof PB_Storage.Md5sumResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Md5sumResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Md5sumResponse
             * @function getTypeUrl
             * @memberof PB_Storage.Md5sumResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Md5sumResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.Md5sumResponse";
            };
    
            return Md5sumResponse;
        })();
    
        PB_Storage.RenameRequest = (function() {
    
            /**
             * Properties of a RenameRequest.
             * @memberof PB_Storage
             * @interface IRenameRequest
             * @property {string|null} [oldPath] RenameRequest oldPath
             * @property {string|null} [newPath] RenameRequest newPath
             */
    
            /**
             * Constructs a new RenameRequest.
             * @memberof PB_Storage
             * @classdesc Represents a RenameRequest.
             * @implements IRenameRequest
             * @constructor
             * @param {PB_Storage.IRenameRequest=} [properties] Properties to set
             */
            function RenameRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * RenameRequest oldPath.
             * @member {string} oldPath
             * @memberof PB_Storage.RenameRequest
             * @instance
             */
            RenameRequest.prototype.oldPath = "";
    
            /**
             * RenameRequest newPath.
             * @member {string} newPath
             * @memberof PB_Storage.RenameRequest
             * @instance
             */
            RenameRequest.prototype.newPath = "";
    
            /**
             * Creates a new RenameRequest instance using the specified properties.
             * @function create
             * @memberof PB_Storage.RenameRequest
             * @static
             * @param {PB_Storage.IRenameRequest=} [properties] Properties to set
             * @returns {PB_Storage.RenameRequest} RenameRequest instance
             */
            RenameRequest.create = function create(properties) {
                return new RenameRequest(properties);
            };
    
            /**
             * Encodes the specified RenameRequest message. Does not implicitly {@link PB_Storage.RenameRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.RenameRequest
             * @static
             * @param {PB_Storage.IRenameRequest} message RenameRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RenameRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.oldPath != null && Object.hasOwnProperty.call(message, "oldPath"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.oldPath);
                if (message.newPath != null && Object.hasOwnProperty.call(message, "newPath"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.newPath);
                return writer;
            };
    
            /**
             * Encodes the specified RenameRequest message, length delimited. Does not implicitly {@link PB_Storage.RenameRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.RenameRequest
             * @static
             * @param {PB_Storage.IRenameRequest} message RenameRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RenameRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a RenameRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.RenameRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.RenameRequest} RenameRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RenameRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.RenameRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.oldPath = reader.string();
                            break;
                        }
                    case 2: {
                            message.newPath = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a RenameRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.RenameRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.RenameRequest} RenameRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RenameRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a RenameRequest message.
             * @function verify
             * @memberof PB_Storage.RenameRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RenameRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.oldPath != null && message.hasOwnProperty("oldPath"))
                    if (!$util.isString(message.oldPath))
                        return "oldPath: string expected";
                if (message.newPath != null && message.hasOwnProperty("newPath"))
                    if (!$util.isString(message.newPath))
                        return "newPath: string expected";
                return null;
            };
    
            /**
             * Creates a RenameRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.RenameRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.RenameRequest} RenameRequest
             */
            RenameRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.RenameRequest)
                    return object;
                var message = new $root.PB_Storage.RenameRequest();
                if (object.oldPath != null)
                    message.oldPath = String(object.oldPath);
                if (object.newPath != null)
                    message.newPath = String(object.newPath);
                return message;
            };
    
            /**
             * Creates a plain object from a RenameRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.RenameRequest
             * @static
             * @param {PB_Storage.RenameRequest} message RenameRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RenameRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.oldPath = "";
                    object.newPath = "";
                }
                if (message.oldPath != null && message.hasOwnProperty("oldPath"))
                    object.oldPath = message.oldPath;
                if (message.newPath != null && message.hasOwnProperty("newPath"))
                    object.newPath = message.newPath;
                return object;
            };
    
            /**
             * Converts this RenameRequest to JSON.
             * @function toJSON
             * @memberof PB_Storage.RenameRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RenameRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for RenameRequest
             * @function getTypeUrl
             * @memberof PB_Storage.RenameRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RenameRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.RenameRequest";
            };
    
            return RenameRequest;
        })();
    
        PB_Storage.BackupCreateRequest = (function() {
    
            /**
             * Properties of a BackupCreateRequest.
             * @memberof PB_Storage
             * @interface IBackupCreateRequest
             * @property {string|null} [archivePath] BackupCreateRequest archivePath
             */
    
            /**
             * Constructs a new BackupCreateRequest.
             * @memberof PB_Storage
             * @classdesc Represents a BackupCreateRequest.
             * @implements IBackupCreateRequest
             * @constructor
             * @param {PB_Storage.IBackupCreateRequest=} [properties] Properties to set
             */
            function BackupCreateRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * BackupCreateRequest archivePath.
             * @member {string} archivePath
             * @memberof PB_Storage.BackupCreateRequest
             * @instance
             */
            BackupCreateRequest.prototype.archivePath = "";
    
            /**
             * Creates a new BackupCreateRequest instance using the specified properties.
             * @function create
             * @memberof PB_Storage.BackupCreateRequest
             * @static
             * @param {PB_Storage.IBackupCreateRequest=} [properties] Properties to set
             * @returns {PB_Storage.BackupCreateRequest} BackupCreateRequest instance
             */
            BackupCreateRequest.create = function create(properties) {
                return new BackupCreateRequest(properties);
            };
    
            /**
             * Encodes the specified BackupCreateRequest message. Does not implicitly {@link PB_Storage.BackupCreateRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.BackupCreateRequest
             * @static
             * @param {PB_Storage.IBackupCreateRequest} message BackupCreateRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BackupCreateRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.archivePath != null && Object.hasOwnProperty.call(message, "archivePath"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.archivePath);
                return writer;
            };
    
            /**
             * Encodes the specified BackupCreateRequest message, length delimited. Does not implicitly {@link PB_Storage.BackupCreateRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.BackupCreateRequest
             * @static
             * @param {PB_Storage.IBackupCreateRequest} message BackupCreateRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BackupCreateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a BackupCreateRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.BackupCreateRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.BackupCreateRequest} BackupCreateRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BackupCreateRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.BackupCreateRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.archivePath = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a BackupCreateRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.BackupCreateRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.BackupCreateRequest} BackupCreateRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BackupCreateRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a BackupCreateRequest message.
             * @function verify
             * @memberof PB_Storage.BackupCreateRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            BackupCreateRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.archivePath != null && message.hasOwnProperty("archivePath"))
                    if (!$util.isString(message.archivePath))
                        return "archivePath: string expected";
                return null;
            };
    
            /**
             * Creates a BackupCreateRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.BackupCreateRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.BackupCreateRequest} BackupCreateRequest
             */
            BackupCreateRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.BackupCreateRequest)
                    return object;
                var message = new $root.PB_Storage.BackupCreateRequest();
                if (object.archivePath != null)
                    message.archivePath = String(object.archivePath);
                return message;
            };
    
            /**
             * Creates a plain object from a BackupCreateRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.BackupCreateRequest
             * @static
             * @param {PB_Storage.BackupCreateRequest} message BackupCreateRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            BackupCreateRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.archivePath = "";
                if (message.archivePath != null && message.hasOwnProperty("archivePath"))
                    object.archivePath = message.archivePath;
                return object;
            };
    
            /**
             * Converts this BackupCreateRequest to JSON.
             * @function toJSON
             * @memberof PB_Storage.BackupCreateRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            BackupCreateRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for BackupCreateRequest
             * @function getTypeUrl
             * @memberof PB_Storage.BackupCreateRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            BackupCreateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.BackupCreateRequest";
            };
    
            return BackupCreateRequest;
        })();
    
        PB_Storage.BackupRestoreRequest = (function() {
    
            /**
             * Properties of a BackupRestoreRequest.
             * @memberof PB_Storage
             * @interface IBackupRestoreRequest
             * @property {string|null} [archivePath] BackupRestoreRequest archivePath
             */
    
            /**
             * Constructs a new BackupRestoreRequest.
             * @memberof PB_Storage
             * @classdesc Represents a BackupRestoreRequest.
             * @implements IBackupRestoreRequest
             * @constructor
             * @param {PB_Storage.IBackupRestoreRequest=} [properties] Properties to set
             */
            function BackupRestoreRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * BackupRestoreRequest archivePath.
             * @member {string} archivePath
             * @memberof PB_Storage.BackupRestoreRequest
             * @instance
             */
            BackupRestoreRequest.prototype.archivePath = "";
    
            /**
             * Creates a new BackupRestoreRequest instance using the specified properties.
             * @function create
             * @memberof PB_Storage.BackupRestoreRequest
             * @static
             * @param {PB_Storage.IBackupRestoreRequest=} [properties] Properties to set
             * @returns {PB_Storage.BackupRestoreRequest} BackupRestoreRequest instance
             */
            BackupRestoreRequest.create = function create(properties) {
                return new BackupRestoreRequest(properties);
            };
    
            /**
             * Encodes the specified BackupRestoreRequest message. Does not implicitly {@link PB_Storage.BackupRestoreRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.BackupRestoreRequest
             * @static
             * @param {PB_Storage.IBackupRestoreRequest} message BackupRestoreRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BackupRestoreRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.archivePath != null && Object.hasOwnProperty.call(message, "archivePath"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.archivePath);
                return writer;
            };
    
            /**
             * Encodes the specified BackupRestoreRequest message, length delimited. Does not implicitly {@link PB_Storage.BackupRestoreRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.BackupRestoreRequest
             * @static
             * @param {PB_Storage.IBackupRestoreRequest} message BackupRestoreRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BackupRestoreRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a BackupRestoreRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.BackupRestoreRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.BackupRestoreRequest} BackupRestoreRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BackupRestoreRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.BackupRestoreRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.archivePath = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a BackupRestoreRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.BackupRestoreRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.BackupRestoreRequest} BackupRestoreRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BackupRestoreRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a BackupRestoreRequest message.
             * @function verify
             * @memberof PB_Storage.BackupRestoreRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            BackupRestoreRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.archivePath != null && message.hasOwnProperty("archivePath"))
                    if (!$util.isString(message.archivePath))
                        return "archivePath: string expected";
                return null;
            };
    
            /**
             * Creates a BackupRestoreRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.BackupRestoreRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.BackupRestoreRequest} BackupRestoreRequest
             */
            BackupRestoreRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.BackupRestoreRequest)
                    return object;
                var message = new $root.PB_Storage.BackupRestoreRequest();
                if (object.archivePath != null)
                    message.archivePath = String(object.archivePath);
                return message;
            };
    
            /**
             * Creates a plain object from a BackupRestoreRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.BackupRestoreRequest
             * @static
             * @param {PB_Storage.BackupRestoreRequest} message BackupRestoreRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            BackupRestoreRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.archivePath = "";
                if (message.archivePath != null && message.hasOwnProperty("archivePath"))
                    object.archivePath = message.archivePath;
                return object;
            };
    
            /**
             * Converts this BackupRestoreRequest to JSON.
             * @function toJSON
             * @memberof PB_Storage.BackupRestoreRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            BackupRestoreRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for BackupRestoreRequest
             * @function getTypeUrl
             * @memberof PB_Storage.BackupRestoreRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            BackupRestoreRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.BackupRestoreRequest";
            };
    
            return BackupRestoreRequest;
        })();
    
        PB_Storage.TarExtractRequest = (function() {
    
            /**
             * Properties of a TarExtractRequest.
             * @memberof PB_Storage
             * @interface ITarExtractRequest
             * @property {string|null} [tarPath] TarExtractRequest tarPath
             * @property {string|null} [outPath] TarExtractRequest outPath
             */
    
            /**
             * Constructs a new TarExtractRequest.
             * @memberof PB_Storage
             * @classdesc Represents a TarExtractRequest.
             * @implements ITarExtractRequest
             * @constructor
             * @param {PB_Storage.ITarExtractRequest=} [properties] Properties to set
             */
            function TarExtractRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * TarExtractRequest tarPath.
             * @member {string} tarPath
             * @memberof PB_Storage.TarExtractRequest
             * @instance
             */
            TarExtractRequest.prototype.tarPath = "";
    
            /**
             * TarExtractRequest outPath.
             * @member {string} outPath
             * @memberof PB_Storage.TarExtractRequest
             * @instance
             */
            TarExtractRequest.prototype.outPath = "";
    
            /**
             * Creates a new TarExtractRequest instance using the specified properties.
             * @function create
             * @memberof PB_Storage.TarExtractRequest
             * @static
             * @param {PB_Storage.ITarExtractRequest=} [properties] Properties to set
             * @returns {PB_Storage.TarExtractRequest} TarExtractRequest instance
             */
            TarExtractRequest.create = function create(properties) {
                return new TarExtractRequest(properties);
            };
    
            /**
             * Encodes the specified TarExtractRequest message. Does not implicitly {@link PB_Storage.TarExtractRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Storage.TarExtractRequest
             * @static
             * @param {PB_Storage.ITarExtractRequest} message TarExtractRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TarExtractRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.tarPath != null && Object.hasOwnProperty.call(message, "tarPath"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.tarPath);
                if (message.outPath != null && Object.hasOwnProperty.call(message, "outPath"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.outPath);
                return writer;
            };
    
            /**
             * Encodes the specified TarExtractRequest message, length delimited. Does not implicitly {@link PB_Storage.TarExtractRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Storage.TarExtractRequest
             * @static
             * @param {PB_Storage.ITarExtractRequest} message TarExtractRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TarExtractRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a TarExtractRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Storage.TarExtractRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Storage.TarExtractRequest} TarExtractRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TarExtractRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Storage.TarExtractRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.tarPath = reader.string();
                            break;
                        }
                    case 2: {
                            message.outPath = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a TarExtractRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Storage.TarExtractRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Storage.TarExtractRequest} TarExtractRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TarExtractRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a TarExtractRequest message.
             * @function verify
             * @memberof PB_Storage.TarExtractRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TarExtractRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.tarPath != null && message.hasOwnProperty("tarPath"))
                    if (!$util.isString(message.tarPath))
                        return "tarPath: string expected";
                if (message.outPath != null && message.hasOwnProperty("outPath"))
                    if (!$util.isString(message.outPath))
                        return "outPath: string expected";
                return null;
            };
    
            /**
             * Creates a TarExtractRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Storage.TarExtractRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Storage.TarExtractRequest} TarExtractRequest
             */
            TarExtractRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Storage.TarExtractRequest)
                    return object;
                var message = new $root.PB_Storage.TarExtractRequest();
                if (object.tarPath != null)
                    message.tarPath = String(object.tarPath);
                if (object.outPath != null)
                    message.outPath = String(object.outPath);
                return message;
            };
    
            /**
             * Creates a plain object from a TarExtractRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Storage.TarExtractRequest
             * @static
             * @param {PB_Storage.TarExtractRequest} message TarExtractRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TarExtractRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.tarPath = "";
                    object.outPath = "";
                }
                if (message.tarPath != null && message.hasOwnProperty("tarPath"))
                    object.tarPath = message.tarPath;
                if (message.outPath != null && message.hasOwnProperty("outPath"))
                    object.outPath = message.outPath;
                return object;
            };
    
            /**
             * Converts this TarExtractRequest to JSON.
             * @function toJSON
             * @memberof PB_Storage.TarExtractRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TarExtractRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for TarExtractRequest
             * @function getTypeUrl
             * @memberof PB_Storage.TarExtractRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TarExtractRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Storage.TarExtractRequest";
            };
    
            return TarExtractRequest;
        })();
    
        return PB_Storage;
    })();
    
    $root.PB_System = (function() {
    
        /**
         * Namespace PB_System.
         * @exports PB_System
         * @namespace
         */
        var PB_System = {};
    
        PB_System.PingRequest = (function() {
    
            /**
             * Properties of a PingRequest.
             * @memberof PB_System
             * @interface IPingRequest
             * @property {Uint8Array|null} [data] PingRequest data
             */
    
            /**
             * Constructs a new PingRequest.
             * @memberof PB_System
             * @classdesc Represents a PingRequest.
             * @implements IPingRequest
             * @constructor
             * @param {PB_System.IPingRequest=} [properties] Properties to set
             */
            function PingRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PingRequest data.
             * @member {Uint8Array} data
             * @memberof PB_System.PingRequest
             * @instance
             */
            PingRequest.prototype.data = $util.newBuffer([]);
    
            /**
             * Creates a new PingRequest instance using the specified properties.
             * @function create
             * @memberof PB_System.PingRequest
             * @static
             * @param {PB_System.IPingRequest=} [properties] Properties to set
             * @returns {PB_System.PingRequest} PingRequest instance
             */
            PingRequest.create = function create(properties) {
                return new PingRequest(properties);
            };
    
            /**
             * Encodes the specified PingRequest message. Does not implicitly {@link PB_System.PingRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_System.PingRequest
             * @static
             * @param {PB_System.IPingRequest} message PingRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PingRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.data);
                return writer;
            };
    
            /**
             * Encodes the specified PingRequest message, length delimited. Does not implicitly {@link PB_System.PingRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.PingRequest
             * @static
             * @param {PB_System.IPingRequest} message PingRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PingRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PingRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.PingRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.PingRequest} PingRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PingRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.PingRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.data = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PingRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.PingRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.PingRequest} PingRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PingRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PingRequest message.
             * @function verify
             * @memberof PB_System.PingRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PingRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.data != null && message.hasOwnProperty("data"))
                    if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                        return "data: buffer expected";
                return null;
            };
    
            /**
             * Creates a PingRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.PingRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.PingRequest} PingRequest
             */
            PingRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.PingRequest)
                    return object;
                var message = new $root.PB_System.PingRequest();
                if (object.data != null)
                    if (typeof object.data === "string")
                        $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                    else if (object.data.length >= 0)
                        message.data = object.data;
                return message;
            };
    
            /**
             * Creates a plain object from a PingRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.PingRequest
             * @static
             * @param {PB_System.PingRequest} message PingRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PingRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if (options.bytes === String)
                        object.data = "";
                    else {
                        object.data = [];
                        if (options.bytes !== Array)
                            object.data = $util.newBuffer(object.data);
                    }
                if (message.data != null && message.hasOwnProperty("data"))
                    object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                return object;
            };
    
            /**
             * Converts this PingRequest to JSON.
             * @function toJSON
             * @memberof PB_System.PingRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PingRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PingRequest
             * @function getTypeUrl
             * @memberof PB_System.PingRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PingRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.PingRequest";
            };
    
            return PingRequest;
        })();
    
        PB_System.PingResponse = (function() {
    
            /**
             * Properties of a PingResponse.
             * @memberof PB_System
             * @interface IPingResponse
             * @property {Uint8Array|null} [data] PingResponse data
             */
    
            /**
             * Constructs a new PingResponse.
             * @memberof PB_System
             * @classdesc Represents a PingResponse.
             * @implements IPingResponse
             * @constructor
             * @param {PB_System.IPingResponse=} [properties] Properties to set
             */
            function PingResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PingResponse data.
             * @member {Uint8Array} data
             * @memberof PB_System.PingResponse
             * @instance
             */
            PingResponse.prototype.data = $util.newBuffer([]);
    
            /**
             * Creates a new PingResponse instance using the specified properties.
             * @function create
             * @memberof PB_System.PingResponse
             * @static
             * @param {PB_System.IPingResponse=} [properties] Properties to set
             * @returns {PB_System.PingResponse} PingResponse instance
             */
            PingResponse.create = function create(properties) {
                return new PingResponse(properties);
            };
    
            /**
             * Encodes the specified PingResponse message. Does not implicitly {@link PB_System.PingResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_System.PingResponse
             * @static
             * @param {PB_System.IPingResponse} message PingResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PingResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.data);
                return writer;
            };
    
            /**
             * Encodes the specified PingResponse message, length delimited. Does not implicitly {@link PB_System.PingResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.PingResponse
             * @static
             * @param {PB_System.IPingResponse} message PingResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PingResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PingResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.PingResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.PingResponse} PingResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PingResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.PingResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.data = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PingResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.PingResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.PingResponse} PingResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PingResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PingResponse message.
             * @function verify
             * @memberof PB_System.PingResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PingResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.data != null && message.hasOwnProperty("data"))
                    if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                        return "data: buffer expected";
                return null;
            };
    
            /**
             * Creates a PingResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.PingResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.PingResponse} PingResponse
             */
            PingResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.PingResponse)
                    return object;
                var message = new $root.PB_System.PingResponse();
                if (object.data != null)
                    if (typeof object.data === "string")
                        $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                    else if (object.data.length >= 0)
                        message.data = object.data;
                return message;
            };
    
            /**
             * Creates a plain object from a PingResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.PingResponse
             * @static
             * @param {PB_System.PingResponse} message PingResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PingResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if (options.bytes === String)
                        object.data = "";
                    else {
                        object.data = [];
                        if (options.bytes !== Array)
                            object.data = $util.newBuffer(object.data);
                    }
                if (message.data != null && message.hasOwnProperty("data"))
                    object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                return object;
            };
    
            /**
             * Converts this PingResponse to JSON.
             * @function toJSON
             * @memberof PB_System.PingResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PingResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PingResponse
             * @function getTypeUrl
             * @memberof PB_System.PingResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PingResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.PingResponse";
            };
    
            return PingResponse;
        })();
    
        PB_System.RebootRequest = (function() {
    
            /**
             * Properties of a RebootRequest.
             * @memberof PB_System
             * @interface IRebootRequest
             * @property {PB_System.RebootRequest.RebootMode|null} [mode] RebootRequest mode
             */
    
            /**
             * Constructs a new RebootRequest.
             * @memberof PB_System
             * @classdesc Represents a RebootRequest.
             * @implements IRebootRequest
             * @constructor
             * @param {PB_System.IRebootRequest=} [properties] Properties to set
             */
            function RebootRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * RebootRequest mode.
             * @member {PB_System.RebootRequest.RebootMode} mode
             * @memberof PB_System.RebootRequest
             * @instance
             */
            RebootRequest.prototype.mode = 0;
    
            /**
             * Creates a new RebootRequest instance using the specified properties.
             * @function create
             * @memberof PB_System.RebootRequest
             * @static
             * @param {PB_System.IRebootRequest=} [properties] Properties to set
             * @returns {PB_System.RebootRequest} RebootRequest instance
             */
            RebootRequest.create = function create(properties) {
                return new RebootRequest(properties);
            };
    
            /**
             * Encodes the specified RebootRequest message. Does not implicitly {@link PB_System.RebootRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_System.RebootRequest
             * @static
             * @param {PB_System.IRebootRequest} message RebootRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RebootRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.mode);
                return writer;
            };
    
            /**
             * Encodes the specified RebootRequest message, length delimited. Does not implicitly {@link PB_System.RebootRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.RebootRequest
             * @static
             * @param {PB_System.IRebootRequest} message RebootRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RebootRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a RebootRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.RebootRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.RebootRequest} RebootRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RebootRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.RebootRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.mode = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a RebootRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.RebootRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.RebootRequest} RebootRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RebootRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a RebootRequest message.
             * @function verify
             * @memberof PB_System.RebootRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RebootRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.mode != null && message.hasOwnProperty("mode"))
                    switch (message.mode) {
                    default:
                        return "mode: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                        break;
                    }
                return null;
            };
    
            /**
             * Creates a RebootRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.RebootRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.RebootRequest} RebootRequest
             */
            RebootRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.RebootRequest)
                    return object;
                var message = new $root.PB_System.RebootRequest();
                switch (object.mode) {
                default:
                    if (typeof object.mode === "number") {
                        message.mode = object.mode;
                        break;
                    }
                    break;
                case "OS":
                case 0:
                    message.mode = 0;
                    break;
                case "DFU":
                case 1:
                    message.mode = 1;
                    break;
                case "UPDATE":
                case 2:
                    message.mode = 2;
                    break;
                }
                return message;
            };
    
            /**
             * Creates a plain object from a RebootRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.RebootRequest
             * @static
             * @param {PB_System.RebootRequest} message RebootRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RebootRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.mode = options.enums === String ? "OS" : 0;
                if (message.mode != null && message.hasOwnProperty("mode"))
                    object.mode = options.enums === String ? $root.PB_System.RebootRequest.RebootMode[message.mode] === undefined ? message.mode : $root.PB_System.RebootRequest.RebootMode[message.mode] : message.mode;
                return object;
            };
    
            /**
             * Converts this RebootRequest to JSON.
             * @function toJSON
             * @memberof PB_System.RebootRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RebootRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for RebootRequest
             * @function getTypeUrl
             * @memberof PB_System.RebootRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RebootRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.RebootRequest";
            };
    
            /**
             * RebootMode enum.
             * @name PB_System.RebootRequest.RebootMode
             * @enum {number}
             * @property {number} OS=0 OS value
             * @property {number} DFU=1 DFU value
             * @property {number} UPDATE=2 UPDATE value
             */
            RebootRequest.RebootMode = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "OS"] = 0;
                values[valuesById[1] = "DFU"] = 1;
                values[valuesById[2] = "UPDATE"] = 2;
                return values;
            })();
    
            return RebootRequest;
        })();
    
        PB_System.DeviceInfoRequest = (function() {
    
            /**
             * Properties of a DeviceInfoRequest.
             * @memberof PB_System
             * @interface IDeviceInfoRequest
             */
    
            /**
             * Constructs a new DeviceInfoRequest.
             * @memberof PB_System
             * @classdesc Represents a DeviceInfoRequest.
             * @implements IDeviceInfoRequest
             * @constructor
             * @param {PB_System.IDeviceInfoRequest=} [properties] Properties to set
             */
            function DeviceInfoRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new DeviceInfoRequest instance using the specified properties.
             * @function create
             * @memberof PB_System.DeviceInfoRequest
             * @static
             * @param {PB_System.IDeviceInfoRequest=} [properties] Properties to set
             * @returns {PB_System.DeviceInfoRequest} DeviceInfoRequest instance
             */
            DeviceInfoRequest.create = function create(properties) {
                return new DeviceInfoRequest(properties);
            };
    
            /**
             * Encodes the specified DeviceInfoRequest message. Does not implicitly {@link PB_System.DeviceInfoRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_System.DeviceInfoRequest
             * @static
             * @param {PB_System.IDeviceInfoRequest} message DeviceInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeviceInfoRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified DeviceInfoRequest message, length delimited. Does not implicitly {@link PB_System.DeviceInfoRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.DeviceInfoRequest
             * @static
             * @param {PB_System.IDeviceInfoRequest} message DeviceInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeviceInfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a DeviceInfoRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.DeviceInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.DeviceInfoRequest} DeviceInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeviceInfoRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.DeviceInfoRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a DeviceInfoRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.DeviceInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.DeviceInfoRequest} DeviceInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeviceInfoRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a DeviceInfoRequest message.
             * @function verify
             * @memberof PB_System.DeviceInfoRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DeviceInfoRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a DeviceInfoRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.DeviceInfoRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.DeviceInfoRequest} DeviceInfoRequest
             */
            DeviceInfoRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.DeviceInfoRequest)
                    return object;
                return new $root.PB_System.DeviceInfoRequest();
            };
    
            /**
             * Creates a plain object from a DeviceInfoRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.DeviceInfoRequest
             * @static
             * @param {PB_System.DeviceInfoRequest} message DeviceInfoRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DeviceInfoRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this DeviceInfoRequest to JSON.
             * @function toJSON
             * @memberof PB_System.DeviceInfoRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DeviceInfoRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for DeviceInfoRequest
             * @function getTypeUrl
             * @memberof PB_System.DeviceInfoRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            DeviceInfoRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.DeviceInfoRequest";
            };
    
            return DeviceInfoRequest;
        })();
    
        PB_System.DeviceInfoResponse = (function() {
    
            /**
             * Properties of a DeviceInfoResponse.
             * @memberof PB_System
             * @interface IDeviceInfoResponse
             * @property {string|null} [key] DeviceInfoResponse key
             * @property {string|null} [value] DeviceInfoResponse value
             */
    
            /**
             * Constructs a new DeviceInfoResponse.
             * @memberof PB_System
             * @classdesc Represents a DeviceInfoResponse.
             * @implements IDeviceInfoResponse
             * @constructor
             * @param {PB_System.IDeviceInfoResponse=} [properties] Properties to set
             */
            function DeviceInfoResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * DeviceInfoResponse key.
             * @member {string} key
             * @memberof PB_System.DeviceInfoResponse
             * @instance
             */
            DeviceInfoResponse.prototype.key = "";
    
            /**
             * DeviceInfoResponse value.
             * @member {string} value
             * @memberof PB_System.DeviceInfoResponse
             * @instance
             */
            DeviceInfoResponse.prototype.value = "";
    
            /**
             * Creates a new DeviceInfoResponse instance using the specified properties.
             * @function create
             * @memberof PB_System.DeviceInfoResponse
             * @static
             * @param {PB_System.IDeviceInfoResponse=} [properties] Properties to set
             * @returns {PB_System.DeviceInfoResponse} DeviceInfoResponse instance
             */
            DeviceInfoResponse.create = function create(properties) {
                return new DeviceInfoResponse(properties);
            };
    
            /**
             * Encodes the specified DeviceInfoResponse message. Does not implicitly {@link PB_System.DeviceInfoResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_System.DeviceInfoResponse
             * @static
             * @param {PB_System.IDeviceInfoResponse} message DeviceInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeviceInfoResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified DeviceInfoResponse message, length delimited. Does not implicitly {@link PB_System.DeviceInfoResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.DeviceInfoResponse
             * @static
             * @param {PB_System.IDeviceInfoResponse} message DeviceInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeviceInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a DeviceInfoResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.DeviceInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.DeviceInfoResponse} DeviceInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeviceInfoResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.DeviceInfoResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.key = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a DeviceInfoResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.DeviceInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.DeviceInfoResponse} DeviceInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeviceInfoResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a DeviceInfoResponse message.
             * @function verify
             * @memberof PB_System.DeviceInfoResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DeviceInfoResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.key != null && message.hasOwnProperty("key"))
                    if (!$util.isString(message.key))
                        return "key: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isString(message.value))
                        return "value: string expected";
                return null;
            };
    
            /**
             * Creates a DeviceInfoResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.DeviceInfoResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.DeviceInfoResponse} DeviceInfoResponse
             */
            DeviceInfoResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.DeviceInfoResponse)
                    return object;
                var message = new $root.PB_System.DeviceInfoResponse();
                if (object.key != null)
                    message.key = String(object.key);
                if (object.value != null)
                    message.value = String(object.value);
                return message;
            };
    
            /**
             * Creates a plain object from a DeviceInfoResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.DeviceInfoResponse
             * @static
             * @param {PB_System.DeviceInfoResponse} message DeviceInfoResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DeviceInfoResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.key = "";
                    object.value = "";
                }
                if (message.key != null && message.hasOwnProperty("key"))
                    object.key = message.key;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };
    
            /**
             * Converts this DeviceInfoResponse to JSON.
             * @function toJSON
             * @memberof PB_System.DeviceInfoResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DeviceInfoResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for DeviceInfoResponse
             * @function getTypeUrl
             * @memberof PB_System.DeviceInfoResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            DeviceInfoResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.DeviceInfoResponse";
            };
    
            return DeviceInfoResponse;
        })();
    
        PB_System.FactoryResetRequest = (function() {
    
            /**
             * Properties of a FactoryResetRequest.
             * @memberof PB_System
             * @interface IFactoryResetRequest
             */
    
            /**
             * Constructs a new FactoryResetRequest.
             * @memberof PB_System
             * @classdesc Represents a FactoryResetRequest.
             * @implements IFactoryResetRequest
             * @constructor
             * @param {PB_System.IFactoryResetRequest=} [properties] Properties to set
             */
            function FactoryResetRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new FactoryResetRequest instance using the specified properties.
             * @function create
             * @memberof PB_System.FactoryResetRequest
             * @static
             * @param {PB_System.IFactoryResetRequest=} [properties] Properties to set
             * @returns {PB_System.FactoryResetRequest} FactoryResetRequest instance
             */
            FactoryResetRequest.create = function create(properties) {
                return new FactoryResetRequest(properties);
            };
    
            /**
             * Encodes the specified FactoryResetRequest message. Does not implicitly {@link PB_System.FactoryResetRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_System.FactoryResetRequest
             * @static
             * @param {PB_System.IFactoryResetRequest} message FactoryResetRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FactoryResetRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified FactoryResetRequest message, length delimited. Does not implicitly {@link PB_System.FactoryResetRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.FactoryResetRequest
             * @static
             * @param {PB_System.IFactoryResetRequest} message FactoryResetRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FactoryResetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a FactoryResetRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.FactoryResetRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.FactoryResetRequest} FactoryResetRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FactoryResetRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.FactoryResetRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a FactoryResetRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.FactoryResetRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.FactoryResetRequest} FactoryResetRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FactoryResetRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a FactoryResetRequest message.
             * @function verify
             * @memberof PB_System.FactoryResetRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FactoryResetRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a FactoryResetRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.FactoryResetRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.FactoryResetRequest} FactoryResetRequest
             */
            FactoryResetRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.FactoryResetRequest)
                    return object;
                return new $root.PB_System.FactoryResetRequest();
            };
    
            /**
             * Creates a plain object from a FactoryResetRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.FactoryResetRequest
             * @static
             * @param {PB_System.FactoryResetRequest} message FactoryResetRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FactoryResetRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this FactoryResetRequest to JSON.
             * @function toJSON
             * @memberof PB_System.FactoryResetRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FactoryResetRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for FactoryResetRequest
             * @function getTypeUrl
             * @memberof PB_System.FactoryResetRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FactoryResetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.FactoryResetRequest";
            };
    
            return FactoryResetRequest;
        })();
    
        PB_System.GetDateTimeRequest = (function() {
    
            /**
             * Properties of a GetDateTimeRequest.
             * @memberof PB_System
             * @interface IGetDateTimeRequest
             */
    
            /**
             * Constructs a new GetDateTimeRequest.
             * @memberof PB_System
             * @classdesc Represents a GetDateTimeRequest.
             * @implements IGetDateTimeRequest
             * @constructor
             * @param {PB_System.IGetDateTimeRequest=} [properties] Properties to set
             */
            function GetDateTimeRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new GetDateTimeRequest instance using the specified properties.
             * @function create
             * @memberof PB_System.GetDateTimeRequest
             * @static
             * @param {PB_System.IGetDateTimeRequest=} [properties] Properties to set
             * @returns {PB_System.GetDateTimeRequest} GetDateTimeRequest instance
             */
            GetDateTimeRequest.create = function create(properties) {
                return new GetDateTimeRequest(properties);
            };
    
            /**
             * Encodes the specified GetDateTimeRequest message. Does not implicitly {@link PB_System.GetDateTimeRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_System.GetDateTimeRequest
             * @static
             * @param {PB_System.IGetDateTimeRequest} message GetDateTimeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetDateTimeRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified GetDateTimeRequest message, length delimited. Does not implicitly {@link PB_System.GetDateTimeRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.GetDateTimeRequest
             * @static
             * @param {PB_System.IGetDateTimeRequest} message GetDateTimeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetDateTimeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a GetDateTimeRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.GetDateTimeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.GetDateTimeRequest} GetDateTimeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetDateTimeRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.GetDateTimeRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a GetDateTimeRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.GetDateTimeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.GetDateTimeRequest} GetDateTimeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetDateTimeRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a GetDateTimeRequest message.
             * @function verify
             * @memberof PB_System.GetDateTimeRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetDateTimeRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a GetDateTimeRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.GetDateTimeRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.GetDateTimeRequest} GetDateTimeRequest
             */
            GetDateTimeRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.GetDateTimeRequest)
                    return object;
                return new $root.PB_System.GetDateTimeRequest();
            };
    
            /**
             * Creates a plain object from a GetDateTimeRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.GetDateTimeRequest
             * @static
             * @param {PB_System.GetDateTimeRequest} message GetDateTimeRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetDateTimeRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this GetDateTimeRequest to JSON.
             * @function toJSON
             * @memberof PB_System.GetDateTimeRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetDateTimeRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for GetDateTimeRequest
             * @function getTypeUrl
             * @memberof PB_System.GetDateTimeRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetDateTimeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.GetDateTimeRequest";
            };
    
            return GetDateTimeRequest;
        })();
    
        PB_System.GetDateTimeResponse = (function() {
    
            /**
             * Properties of a GetDateTimeResponse.
             * @memberof PB_System
             * @interface IGetDateTimeResponse
             * @property {PB_System.IDateTime|null} [datetime] GetDateTimeResponse datetime
             */
    
            /**
             * Constructs a new GetDateTimeResponse.
             * @memberof PB_System
             * @classdesc Represents a GetDateTimeResponse.
             * @implements IGetDateTimeResponse
             * @constructor
             * @param {PB_System.IGetDateTimeResponse=} [properties] Properties to set
             */
            function GetDateTimeResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * GetDateTimeResponse datetime.
             * @member {PB_System.IDateTime|null|undefined} datetime
             * @memberof PB_System.GetDateTimeResponse
             * @instance
             */
            GetDateTimeResponse.prototype.datetime = null;
    
            /**
             * Creates a new GetDateTimeResponse instance using the specified properties.
             * @function create
             * @memberof PB_System.GetDateTimeResponse
             * @static
             * @param {PB_System.IGetDateTimeResponse=} [properties] Properties to set
             * @returns {PB_System.GetDateTimeResponse} GetDateTimeResponse instance
             */
            GetDateTimeResponse.create = function create(properties) {
                return new GetDateTimeResponse(properties);
            };
    
            /**
             * Encodes the specified GetDateTimeResponse message. Does not implicitly {@link PB_System.GetDateTimeResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_System.GetDateTimeResponse
             * @static
             * @param {PB_System.IGetDateTimeResponse} message GetDateTimeResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetDateTimeResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.datetime != null && Object.hasOwnProperty.call(message, "datetime"))
                    $root.PB_System.DateTime.encode(message.datetime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified GetDateTimeResponse message, length delimited. Does not implicitly {@link PB_System.GetDateTimeResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.GetDateTimeResponse
             * @static
             * @param {PB_System.IGetDateTimeResponse} message GetDateTimeResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetDateTimeResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a GetDateTimeResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.GetDateTimeResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.GetDateTimeResponse} GetDateTimeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetDateTimeResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.GetDateTimeResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.datetime = $root.PB_System.DateTime.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a GetDateTimeResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.GetDateTimeResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.GetDateTimeResponse} GetDateTimeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetDateTimeResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a GetDateTimeResponse message.
             * @function verify
             * @memberof PB_System.GetDateTimeResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetDateTimeResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.datetime != null && message.hasOwnProperty("datetime")) {
                    var error = $root.PB_System.DateTime.verify(message.datetime);
                    if (error)
                        return "datetime." + error;
                }
                return null;
            };
    
            /**
             * Creates a GetDateTimeResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.GetDateTimeResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.GetDateTimeResponse} GetDateTimeResponse
             */
            GetDateTimeResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.GetDateTimeResponse)
                    return object;
                var message = new $root.PB_System.GetDateTimeResponse();
                if (object.datetime != null) {
                    if (typeof object.datetime !== "object")
                        throw TypeError(".PB_System.GetDateTimeResponse.datetime: object expected");
                    message.datetime = $root.PB_System.DateTime.fromObject(object.datetime);
                }
                return message;
            };
    
            /**
             * Creates a plain object from a GetDateTimeResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.GetDateTimeResponse
             * @static
             * @param {PB_System.GetDateTimeResponse} message GetDateTimeResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetDateTimeResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.datetime = null;
                if (message.datetime != null && message.hasOwnProperty("datetime"))
                    object.datetime = $root.PB_System.DateTime.toObject(message.datetime, options);
                return object;
            };
    
            /**
             * Converts this GetDateTimeResponse to JSON.
             * @function toJSON
             * @memberof PB_System.GetDateTimeResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetDateTimeResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for GetDateTimeResponse
             * @function getTypeUrl
             * @memberof PB_System.GetDateTimeResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetDateTimeResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.GetDateTimeResponse";
            };
    
            return GetDateTimeResponse;
        })();
    
        PB_System.SetDateTimeRequest = (function() {
    
            /**
             * Properties of a SetDateTimeRequest.
             * @memberof PB_System
             * @interface ISetDateTimeRequest
             * @property {PB_System.IDateTime|null} [datetime] SetDateTimeRequest datetime
             */
    
            /**
             * Constructs a new SetDateTimeRequest.
             * @memberof PB_System
             * @classdesc Represents a SetDateTimeRequest.
             * @implements ISetDateTimeRequest
             * @constructor
             * @param {PB_System.ISetDateTimeRequest=} [properties] Properties to set
             */
            function SetDateTimeRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * SetDateTimeRequest datetime.
             * @member {PB_System.IDateTime|null|undefined} datetime
             * @memberof PB_System.SetDateTimeRequest
             * @instance
             */
            SetDateTimeRequest.prototype.datetime = null;
    
            /**
             * Creates a new SetDateTimeRequest instance using the specified properties.
             * @function create
             * @memberof PB_System.SetDateTimeRequest
             * @static
             * @param {PB_System.ISetDateTimeRequest=} [properties] Properties to set
             * @returns {PB_System.SetDateTimeRequest} SetDateTimeRequest instance
             */
            SetDateTimeRequest.create = function create(properties) {
                return new SetDateTimeRequest(properties);
            };
    
            /**
             * Encodes the specified SetDateTimeRequest message. Does not implicitly {@link PB_System.SetDateTimeRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_System.SetDateTimeRequest
             * @static
             * @param {PB_System.ISetDateTimeRequest} message SetDateTimeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SetDateTimeRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.datetime != null && Object.hasOwnProperty.call(message, "datetime"))
                    $root.PB_System.DateTime.encode(message.datetime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified SetDateTimeRequest message, length delimited. Does not implicitly {@link PB_System.SetDateTimeRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.SetDateTimeRequest
             * @static
             * @param {PB_System.ISetDateTimeRequest} message SetDateTimeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SetDateTimeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a SetDateTimeRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.SetDateTimeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.SetDateTimeRequest} SetDateTimeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SetDateTimeRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.SetDateTimeRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.datetime = $root.PB_System.DateTime.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a SetDateTimeRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.SetDateTimeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.SetDateTimeRequest} SetDateTimeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SetDateTimeRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a SetDateTimeRequest message.
             * @function verify
             * @memberof PB_System.SetDateTimeRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SetDateTimeRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.datetime != null && message.hasOwnProperty("datetime")) {
                    var error = $root.PB_System.DateTime.verify(message.datetime);
                    if (error)
                        return "datetime." + error;
                }
                return null;
            };
    
            /**
             * Creates a SetDateTimeRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.SetDateTimeRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.SetDateTimeRequest} SetDateTimeRequest
             */
            SetDateTimeRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.SetDateTimeRequest)
                    return object;
                var message = new $root.PB_System.SetDateTimeRequest();
                if (object.datetime != null) {
                    if (typeof object.datetime !== "object")
                        throw TypeError(".PB_System.SetDateTimeRequest.datetime: object expected");
                    message.datetime = $root.PB_System.DateTime.fromObject(object.datetime);
                }
                return message;
            };
    
            /**
             * Creates a plain object from a SetDateTimeRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.SetDateTimeRequest
             * @static
             * @param {PB_System.SetDateTimeRequest} message SetDateTimeRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SetDateTimeRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.datetime = null;
                if (message.datetime != null && message.hasOwnProperty("datetime"))
                    object.datetime = $root.PB_System.DateTime.toObject(message.datetime, options);
                return object;
            };
    
            /**
             * Converts this SetDateTimeRequest to JSON.
             * @function toJSON
             * @memberof PB_System.SetDateTimeRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SetDateTimeRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for SetDateTimeRequest
             * @function getTypeUrl
             * @memberof PB_System.SetDateTimeRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SetDateTimeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.SetDateTimeRequest";
            };
    
            return SetDateTimeRequest;
        })();
    
        PB_System.DateTime = (function() {
    
            /**
             * Properties of a DateTime.
             * @memberof PB_System
             * @interface IDateTime
             * @property {number|null} [hour] DateTime hour
             * @property {number|null} [minute] DateTime minute
             * @property {number|null} [second] DateTime second
             * @property {number|null} [day] DateTime day
             * @property {number|null} [month] DateTime month
             * @property {number|null} [year] DateTime year
             * @property {number|null} [weekday] DateTime weekday
             */
    
            /**
             * Constructs a new DateTime.
             * @memberof PB_System
             * @classdesc Represents a DateTime.
             * @implements IDateTime
             * @constructor
             * @param {PB_System.IDateTime=} [properties] Properties to set
             */
            function DateTime(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * DateTime hour.
             * @member {number} hour
             * @memberof PB_System.DateTime
             * @instance
             */
            DateTime.prototype.hour = 0;
    
            /**
             * DateTime minute.
             * @member {number} minute
             * @memberof PB_System.DateTime
             * @instance
             */
            DateTime.prototype.minute = 0;
    
            /**
             * DateTime second.
             * @member {number} second
             * @memberof PB_System.DateTime
             * @instance
             */
            DateTime.prototype.second = 0;
    
            /**
             * DateTime day.
             * @member {number} day
             * @memberof PB_System.DateTime
             * @instance
             */
            DateTime.prototype.day = 0;
    
            /**
             * DateTime month.
             * @member {number} month
             * @memberof PB_System.DateTime
             * @instance
             */
            DateTime.prototype.month = 0;
    
            /**
             * DateTime year.
             * @member {number} year
             * @memberof PB_System.DateTime
             * @instance
             */
            DateTime.prototype.year = 0;
    
            /**
             * DateTime weekday.
             * @member {number} weekday
             * @memberof PB_System.DateTime
             * @instance
             */
            DateTime.prototype.weekday = 0;
    
            /**
             * Creates a new DateTime instance using the specified properties.
             * @function create
             * @memberof PB_System.DateTime
             * @static
             * @param {PB_System.IDateTime=} [properties] Properties to set
             * @returns {PB_System.DateTime} DateTime instance
             */
            DateTime.create = function create(properties) {
                return new DateTime(properties);
            };
    
            /**
             * Encodes the specified DateTime message. Does not implicitly {@link PB_System.DateTime.verify|verify} messages.
             * @function encode
             * @memberof PB_System.DateTime
             * @static
             * @param {PB_System.IDateTime} message DateTime message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DateTime.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.hour != null && Object.hasOwnProperty.call(message, "hour"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.hour);
                if (message.minute != null && Object.hasOwnProperty.call(message, "minute"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.minute);
                if (message.second != null && Object.hasOwnProperty.call(message, "second"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.second);
                if (message.day != null && Object.hasOwnProperty.call(message, "day"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.day);
                if (message.month != null && Object.hasOwnProperty.call(message, "month"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.month);
                if (message.year != null && Object.hasOwnProperty.call(message, "year"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.year);
                if (message.weekday != null && Object.hasOwnProperty.call(message, "weekday"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.weekday);
                return writer;
            };
    
            /**
             * Encodes the specified DateTime message, length delimited. Does not implicitly {@link PB_System.DateTime.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.DateTime
             * @static
             * @param {PB_System.IDateTime} message DateTime message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DateTime.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a DateTime message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.DateTime
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.DateTime} DateTime
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DateTime.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.DateTime();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.hour = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.minute = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.second = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.day = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.month = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.year = reader.uint32();
                            break;
                        }
                    case 7: {
                            message.weekday = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a DateTime message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.DateTime
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.DateTime} DateTime
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DateTime.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a DateTime message.
             * @function verify
             * @memberof PB_System.DateTime
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DateTime.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.hour != null && message.hasOwnProperty("hour"))
                    if (!$util.isInteger(message.hour))
                        return "hour: integer expected";
                if (message.minute != null && message.hasOwnProperty("minute"))
                    if (!$util.isInteger(message.minute))
                        return "minute: integer expected";
                if (message.second != null && message.hasOwnProperty("second"))
                    if (!$util.isInteger(message.second))
                        return "second: integer expected";
                if (message.day != null && message.hasOwnProperty("day"))
                    if (!$util.isInteger(message.day))
                        return "day: integer expected";
                if (message.month != null && message.hasOwnProperty("month"))
                    if (!$util.isInteger(message.month))
                        return "month: integer expected";
                if (message.year != null && message.hasOwnProperty("year"))
                    if (!$util.isInteger(message.year))
                        return "year: integer expected";
                if (message.weekday != null && message.hasOwnProperty("weekday"))
                    if (!$util.isInteger(message.weekday))
                        return "weekday: integer expected";
                return null;
            };
    
            /**
             * Creates a DateTime message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.DateTime
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.DateTime} DateTime
             */
            DateTime.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.DateTime)
                    return object;
                var message = new $root.PB_System.DateTime();
                if (object.hour != null)
                    message.hour = object.hour >>> 0;
                if (object.minute != null)
                    message.minute = object.minute >>> 0;
                if (object.second != null)
                    message.second = object.second >>> 0;
                if (object.day != null)
                    message.day = object.day >>> 0;
                if (object.month != null)
                    message.month = object.month >>> 0;
                if (object.year != null)
                    message.year = object.year >>> 0;
                if (object.weekday != null)
                    message.weekday = object.weekday >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a DateTime message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.DateTime
             * @static
             * @param {PB_System.DateTime} message DateTime
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DateTime.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.hour = 0;
                    object.minute = 0;
                    object.second = 0;
                    object.day = 0;
                    object.month = 0;
                    object.year = 0;
                    object.weekday = 0;
                }
                if (message.hour != null && message.hasOwnProperty("hour"))
                    object.hour = message.hour;
                if (message.minute != null && message.hasOwnProperty("minute"))
                    object.minute = message.minute;
                if (message.second != null && message.hasOwnProperty("second"))
                    object.second = message.second;
                if (message.day != null && message.hasOwnProperty("day"))
                    object.day = message.day;
                if (message.month != null && message.hasOwnProperty("month"))
                    object.month = message.month;
                if (message.year != null && message.hasOwnProperty("year"))
                    object.year = message.year;
                if (message.weekday != null && message.hasOwnProperty("weekday"))
                    object.weekday = message.weekday;
                return object;
            };
    
            /**
             * Converts this DateTime to JSON.
             * @function toJSON
             * @memberof PB_System.DateTime
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DateTime.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for DateTime
             * @function getTypeUrl
             * @memberof PB_System.DateTime
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            DateTime.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.DateTime";
            };
    
            return DateTime;
        })();
    
        PB_System.PlayAudiovisualAlertRequest = (function() {
    
            /**
             * Properties of a PlayAudiovisualAlertRequest.
             * @memberof PB_System
             * @interface IPlayAudiovisualAlertRequest
             */
    
            /**
             * Constructs a new PlayAudiovisualAlertRequest.
             * @memberof PB_System
             * @classdesc Represents a PlayAudiovisualAlertRequest.
             * @implements IPlayAudiovisualAlertRequest
             * @constructor
             * @param {PB_System.IPlayAudiovisualAlertRequest=} [properties] Properties to set
             */
            function PlayAudiovisualAlertRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new PlayAudiovisualAlertRequest instance using the specified properties.
             * @function create
             * @memberof PB_System.PlayAudiovisualAlertRequest
             * @static
             * @param {PB_System.IPlayAudiovisualAlertRequest=} [properties] Properties to set
             * @returns {PB_System.PlayAudiovisualAlertRequest} PlayAudiovisualAlertRequest instance
             */
            PlayAudiovisualAlertRequest.create = function create(properties) {
                return new PlayAudiovisualAlertRequest(properties);
            };
    
            /**
             * Encodes the specified PlayAudiovisualAlertRequest message. Does not implicitly {@link PB_System.PlayAudiovisualAlertRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_System.PlayAudiovisualAlertRequest
             * @static
             * @param {PB_System.IPlayAudiovisualAlertRequest} message PlayAudiovisualAlertRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PlayAudiovisualAlertRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified PlayAudiovisualAlertRequest message, length delimited. Does not implicitly {@link PB_System.PlayAudiovisualAlertRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.PlayAudiovisualAlertRequest
             * @static
             * @param {PB_System.IPlayAudiovisualAlertRequest} message PlayAudiovisualAlertRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PlayAudiovisualAlertRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PlayAudiovisualAlertRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.PlayAudiovisualAlertRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.PlayAudiovisualAlertRequest} PlayAudiovisualAlertRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PlayAudiovisualAlertRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.PlayAudiovisualAlertRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PlayAudiovisualAlertRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.PlayAudiovisualAlertRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.PlayAudiovisualAlertRequest} PlayAudiovisualAlertRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PlayAudiovisualAlertRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PlayAudiovisualAlertRequest message.
             * @function verify
             * @memberof PB_System.PlayAudiovisualAlertRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PlayAudiovisualAlertRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a PlayAudiovisualAlertRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.PlayAudiovisualAlertRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.PlayAudiovisualAlertRequest} PlayAudiovisualAlertRequest
             */
            PlayAudiovisualAlertRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.PlayAudiovisualAlertRequest)
                    return object;
                return new $root.PB_System.PlayAudiovisualAlertRequest();
            };
    
            /**
             * Creates a plain object from a PlayAudiovisualAlertRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.PlayAudiovisualAlertRequest
             * @static
             * @param {PB_System.PlayAudiovisualAlertRequest} message PlayAudiovisualAlertRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PlayAudiovisualAlertRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this PlayAudiovisualAlertRequest to JSON.
             * @function toJSON
             * @memberof PB_System.PlayAudiovisualAlertRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PlayAudiovisualAlertRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PlayAudiovisualAlertRequest
             * @function getTypeUrl
             * @memberof PB_System.PlayAudiovisualAlertRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PlayAudiovisualAlertRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.PlayAudiovisualAlertRequest";
            };
    
            return PlayAudiovisualAlertRequest;
        })();
    
        PB_System.ProtobufVersionRequest = (function() {
    
            /**
             * Properties of a ProtobufVersionRequest.
             * @memberof PB_System
             * @interface IProtobufVersionRequest
             */
    
            /**
             * Constructs a new ProtobufVersionRequest.
             * @memberof PB_System
             * @classdesc Represents a ProtobufVersionRequest.
             * @implements IProtobufVersionRequest
             * @constructor
             * @param {PB_System.IProtobufVersionRequest=} [properties] Properties to set
             */
            function ProtobufVersionRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new ProtobufVersionRequest instance using the specified properties.
             * @function create
             * @memberof PB_System.ProtobufVersionRequest
             * @static
             * @param {PB_System.IProtobufVersionRequest=} [properties] Properties to set
             * @returns {PB_System.ProtobufVersionRequest} ProtobufVersionRequest instance
             */
            ProtobufVersionRequest.create = function create(properties) {
                return new ProtobufVersionRequest(properties);
            };
    
            /**
             * Encodes the specified ProtobufVersionRequest message. Does not implicitly {@link PB_System.ProtobufVersionRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_System.ProtobufVersionRequest
             * @static
             * @param {PB_System.IProtobufVersionRequest} message ProtobufVersionRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ProtobufVersionRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified ProtobufVersionRequest message, length delimited. Does not implicitly {@link PB_System.ProtobufVersionRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.ProtobufVersionRequest
             * @static
             * @param {PB_System.IProtobufVersionRequest} message ProtobufVersionRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ProtobufVersionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ProtobufVersionRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.ProtobufVersionRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.ProtobufVersionRequest} ProtobufVersionRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ProtobufVersionRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.ProtobufVersionRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ProtobufVersionRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.ProtobufVersionRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.ProtobufVersionRequest} ProtobufVersionRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ProtobufVersionRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ProtobufVersionRequest message.
             * @function verify
             * @memberof PB_System.ProtobufVersionRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ProtobufVersionRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a ProtobufVersionRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.ProtobufVersionRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.ProtobufVersionRequest} ProtobufVersionRequest
             */
            ProtobufVersionRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.ProtobufVersionRequest)
                    return object;
                return new $root.PB_System.ProtobufVersionRequest();
            };
    
            /**
             * Creates a plain object from a ProtobufVersionRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.ProtobufVersionRequest
             * @static
             * @param {PB_System.ProtobufVersionRequest} message ProtobufVersionRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ProtobufVersionRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this ProtobufVersionRequest to JSON.
             * @function toJSON
             * @memberof PB_System.ProtobufVersionRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ProtobufVersionRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ProtobufVersionRequest
             * @function getTypeUrl
             * @memberof PB_System.ProtobufVersionRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ProtobufVersionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.ProtobufVersionRequest";
            };
    
            return ProtobufVersionRequest;
        })();
    
        PB_System.ProtobufVersionResponse = (function() {
    
            /**
             * Properties of a ProtobufVersionResponse.
             * @memberof PB_System
             * @interface IProtobufVersionResponse
             * @property {number|null} [major] ProtobufVersionResponse major
             * @property {number|null} [minor] ProtobufVersionResponse minor
             */
    
            /**
             * Constructs a new ProtobufVersionResponse.
             * @memberof PB_System
             * @classdesc Represents a ProtobufVersionResponse.
             * @implements IProtobufVersionResponse
             * @constructor
             * @param {PB_System.IProtobufVersionResponse=} [properties] Properties to set
             */
            function ProtobufVersionResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ProtobufVersionResponse major.
             * @member {number} major
             * @memberof PB_System.ProtobufVersionResponse
             * @instance
             */
            ProtobufVersionResponse.prototype.major = 0;
    
            /**
             * ProtobufVersionResponse minor.
             * @member {number} minor
             * @memberof PB_System.ProtobufVersionResponse
             * @instance
             */
            ProtobufVersionResponse.prototype.minor = 0;
    
            /**
             * Creates a new ProtobufVersionResponse instance using the specified properties.
             * @function create
             * @memberof PB_System.ProtobufVersionResponse
             * @static
             * @param {PB_System.IProtobufVersionResponse=} [properties] Properties to set
             * @returns {PB_System.ProtobufVersionResponse} ProtobufVersionResponse instance
             */
            ProtobufVersionResponse.create = function create(properties) {
                return new ProtobufVersionResponse(properties);
            };
    
            /**
             * Encodes the specified ProtobufVersionResponse message. Does not implicitly {@link PB_System.ProtobufVersionResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_System.ProtobufVersionResponse
             * @static
             * @param {PB_System.IProtobufVersionResponse} message ProtobufVersionResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ProtobufVersionResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.major != null && Object.hasOwnProperty.call(message, "major"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.major);
                if (message.minor != null && Object.hasOwnProperty.call(message, "minor"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.minor);
                return writer;
            };
    
            /**
             * Encodes the specified ProtobufVersionResponse message, length delimited. Does not implicitly {@link PB_System.ProtobufVersionResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.ProtobufVersionResponse
             * @static
             * @param {PB_System.IProtobufVersionResponse} message ProtobufVersionResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ProtobufVersionResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ProtobufVersionResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.ProtobufVersionResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.ProtobufVersionResponse} ProtobufVersionResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ProtobufVersionResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.ProtobufVersionResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.major = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.minor = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ProtobufVersionResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.ProtobufVersionResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.ProtobufVersionResponse} ProtobufVersionResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ProtobufVersionResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ProtobufVersionResponse message.
             * @function verify
             * @memberof PB_System.ProtobufVersionResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ProtobufVersionResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.major != null && message.hasOwnProperty("major"))
                    if (!$util.isInteger(message.major))
                        return "major: integer expected";
                if (message.minor != null && message.hasOwnProperty("minor"))
                    if (!$util.isInteger(message.minor))
                        return "minor: integer expected";
                return null;
            };
    
            /**
             * Creates a ProtobufVersionResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.ProtobufVersionResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.ProtobufVersionResponse} ProtobufVersionResponse
             */
            ProtobufVersionResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.ProtobufVersionResponse)
                    return object;
                var message = new $root.PB_System.ProtobufVersionResponse();
                if (object.major != null)
                    message.major = object.major >>> 0;
                if (object.minor != null)
                    message.minor = object.minor >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a ProtobufVersionResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.ProtobufVersionResponse
             * @static
             * @param {PB_System.ProtobufVersionResponse} message ProtobufVersionResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ProtobufVersionResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.major = 0;
                    object.minor = 0;
                }
                if (message.major != null && message.hasOwnProperty("major"))
                    object.major = message.major;
                if (message.minor != null && message.hasOwnProperty("minor"))
                    object.minor = message.minor;
                return object;
            };
    
            /**
             * Converts this ProtobufVersionResponse to JSON.
             * @function toJSON
             * @memberof PB_System.ProtobufVersionResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ProtobufVersionResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ProtobufVersionResponse
             * @function getTypeUrl
             * @memberof PB_System.ProtobufVersionResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ProtobufVersionResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.ProtobufVersionResponse";
            };
    
            return ProtobufVersionResponse;
        })();
    
        PB_System.UpdateRequest = (function() {
    
            /**
             * Properties of an UpdateRequest.
             * @memberof PB_System
             * @interface IUpdateRequest
             * @property {string|null} [updateManifest] UpdateRequest updateManifest
             */
    
            /**
             * Constructs a new UpdateRequest.
             * @memberof PB_System
             * @classdesc Represents an UpdateRequest.
             * @implements IUpdateRequest
             * @constructor
             * @param {PB_System.IUpdateRequest=} [properties] Properties to set
             */
            function UpdateRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * UpdateRequest updateManifest.
             * @member {string} updateManifest
             * @memberof PB_System.UpdateRequest
             * @instance
             */
            UpdateRequest.prototype.updateManifest = "";
    
            /**
             * Creates a new UpdateRequest instance using the specified properties.
             * @function create
             * @memberof PB_System.UpdateRequest
             * @static
             * @param {PB_System.IUpdateRequest=} [properties] Properties to set
             * @returns {PB_System.UpdateRequest} UpdateRequest instance
             */
            UpdateRequest.create = function create(properties) {
                return new UpdateRequest(properties);
            };
    
            /**
             * Encodes the specified UpdateRequest message. Does not implicitly {@link PB_System.UpdateRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_System.UpdateRequest
             * @static
             * @param {PB_System.IUpdateRequest} message UpdateRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.updateManifest != null && Object.hasOwnProperty.call(message, "updateManifest"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.updateManifest);
                return writer;
            };
    
            /**
             * Encodes the specified UpdateRequest message, length delimited. Does not implicitly {@link PB_System.UpdateRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.UpdateRequest
             * @static
             * @param {PB_System.IUpdateRequest} message UpdateRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an UpdateRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.UpdateRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.UpdateRequest} UpdateRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.UpdateRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.updateManifest = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an UpdateRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.UpdateRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.UpdateRequest} UpdateRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an UpdateRequest message.
             * @function verify
             * @memberof PB_System.UpdateRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UpdateRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.updateManifest != null && message.hasOwnProperty("updateManifest"))
                    if (!$util.isString(message.updateManifest))
                        return "updateManifest: string expected";
                return null;
            };
    
            /**
             * Creates an UpdateRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.UpdateRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.UpdateRequest} UpdateRequest
             */
            UpdateRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.UpdateRequest)
                    return object;
                var message = new $root.PB_System.UpdateRequest();
                if (object.updateManifest != null)
                    message.updateManifest = String(object.updateManifest);
                return message;
            };
    
            /**
             * Creates a plain object from an UpdateRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.UpdateRequest
             * @static
             * @param {PB_System.UpdateRequest} message UpdateRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UpdateRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.updateManifest = "";
                if (message.updateManifest != null && message.hasOwnProperty("updateManifest"))
                    object.updateManifest = message.updateManifest;
                return object;
            };
    
            /**
             * Converts this UpdateRequest to JSON.
             * @function toJSON
             * @memberof PB_System.UpdateRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UpdateRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for UpdateRequest
             * @function getTypeUrl
             * @memberof PB_System.UpdateRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UpdateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.UpdateRequest";
            };
    
            return UpdateRequest;
        })();
    
        PB_System.UpdateResponse = (function() {
    
            /**
             * Properties of an UpdateResponse.
             * @memberof PB_System
             * @interface IUpdateResponse
             * @property {PB_System.UpdateResponse.UpdateResultCode|null} [code] UpdateResponse code
             */
    
            /**
             * Constructs a new UpdateResponse.
             * @memberof PB_System
             * @classdesc Represents an UpdateResponse.
             * @implements IUpdateResponse
             * @constructor
             * @param {PB_System.IUpdateResponse=} [properties] Properties to set
             */
            function UpdateResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * UpdateResponse code.
             * @member {PB_System.UpdateResponse.UpdateResultCode} code
             * @memberof PB_System.UpdateResponse
             * @instance
             */
            UpdateResponse.prototype.code = 0;
    
            /**
             * Creates a new UpdateResponse instance using the specified properties.
             * @function create
             * @memberof PB_System.UpdateResponse
             * @static
             * @param {PB_System.IUpdateResponse=} [properties] Properties to set
             * @returns {PB_System.UpdateResponse} UpdateResponse instance
             */
            UpdateResponse.create = function create(properties) {
                return new UpdateResponse(properties);
            };
    
            /**
             * Encodes the specified UpdateResponse message. Does not implicitly {@link PB_System.UpdateResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_System.UpdateResponse
             * @static
             * @param {PB_System.IUpdateResponse} message UpdateResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                return writer;
            };
    
            /**
             * Encodes the specified UpdateResponse message, length delimited. Does not implicitly {@link PB_System.UpdateResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.UpdateResponse
             * @static
             * @param {PB_System.IUpdateResponse} message UpdateResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an UpdateResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.UpdateResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.UpdateResponse} UpdateResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.UpdateResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.code = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an UpdateResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.UpdateResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.UpdateResponse} UpdateResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an UpdateResponse message.
             * @function verify
             * @memberof PB_System.UpdateResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UpdateResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.code != null && message.hasOwnProperty("code"))
                    switch (message.code) {
                    default:
                        return "code: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                        break;
                    }
                return null;
            };
    
            /**
             * Creates an UpdateResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.UpdateResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.UpdateResponse} UpdateResponse
             */
            UpdateResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.UpdateResponse)
                    return object;
                var message = new $root.PB_System.UpdateResponse();
                switch (object.code) {
                default:
                    if (typeof object.code === "number") {
                        message.code = object.code;
                        break;
                    }
                    break;
                case "OK":
                case 0:
                    message.code = 0;
                    break;
                case "ManifestPathInvalid":
                case 1:
                    message.code = 1;
                    break;
                case "ManifestFolderNotFound":
                case 2:
                    message.code = 2;
                    break;
                case "ManifestInvalid":
                case 3:
                    message.code = 3;
                    break;
                case "StageMissing":
                case 4:
                    message.code = 4;
                    break;
                case "StageIntegrityError":
                case 5:
                    message.code = 5;
                    break;
                case "ManifestPointerError":
                case 6:
                    message.code = 6;
                    break;
                case "TargetMismatch":
                case 7:
                    message.code = 7;
                    break;
                case "OutdatedManifestVersion":
                case 8:
                    message.code = 8;
                    break;
                case "IntFull":
                case 9:
                    message.code = 9;
                    break;
                case "UnspecifiedError":
                case 10:
                    message.code = 10;
                    break;
                }
                return message;
            };
    
            /**
             * Creates a plain object from an UpdateResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.UpdateResponse
             * @static
             * @param {PB_System.UpdateResponse} message UpdateResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UpdateResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.code = options.enums === String ? "OK" : 0;
                if (message.code != null && message.hasOwnProperty("code"))
                    object.code = options.enums === String ? $root.PB_System.UpdateResponse.UpdateResultCode[message.code] === undefined ? message.code : $root.PB_System.UpdateResponse.UpdateResultCode[message.code] : message.code;
                return object;
            };
    
            /**
             * Converts this UpdateResponse to JSON.
             * @function toJSON
             * @memberof PB_System.UpdateResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UpdateResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for UpdateResponse
             * @function getTypeUrl
             * @memberof PB_System.UpdateResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UpdateResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.UpdateResponse";
            };
    
            /**
             * UpdateResultCode enum.
             * @name PB_System.UpdateResponse.UpdateResultCode
             * @enum {number}
             * @property {number} OK=0 OK value
             * @property {number} ManifestPathInvalid=1 ManifestPathInvalid value
             * @property {number} ManifestFolderNotFound=2 ManifestFolderNotFound value
             * @property {number} ManifestInvalid=3 ManifestInvalid value
             * @property {number} StageMissing=4 StageMissing value
             * @property {number} StageIntegrityError=5 StageIntegrityError value
             * @property {number} ManifestPointerError=6 ManifestPointerError value
             * @property {number} TargetMismatch=7 TargetMismatch value
             * @property {number} OutdatedManifestVersion=8 OutdatedManifestVersion value
             * @property {number} IntFull=9 IntFull value
             * @property {number} UnspecifiedError=10 UnspecifiedError value
             */
            UpdateResponse.UpdateResultCode = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "OK"] = 0;
                values[valuesById[1] = "ManifestPathInvalid"] = 1;
                values[valuesById[2] = "ManifestFolderNotFound"] = 2;
                values[valuesById[3] = "ManifestInvalid"] = 3;
                values[valuesById[4] = "StageMissing"] = 4;
                values[valuesById[5] = "StageIntegrityError"] = 5;
                values[valuesById[6] = "ManifestPointerError"] = 6;
                values[valuesById[7] = "TargetMismatch"] = 7;
                values[valuesById[8] = "OutdatedManifestVersion"] = 8;
                values[valuesById[9] = "IntFull"] = 9;
                values[valuesById[10] = "UnspecifiedError"] = 10;
                return values;
            })();
    
            return UpdateResponse;
        })();
    
        PB_System.PowerInfoRequest = (function() {
    
            /**
             * Properties of a PowerInfoRequest.
             * @memberof PB_System
             * @interface IPowerInfoRequest
             */
    
            /**
             * Constructs a new PowerInfoRequest.
             * @memberof PB_System
             * @classdesc Represents a PowerInfoRequest.
             * @implements IPowerInfoRequest
             * @constructor
             * @param {PB_System.IPowerInfoRequest=} [properties] Properties to set
             */
            function PowerInfoRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new PowerInfoRequest instance using the specified properties.
             * @function create
             * @memberof PB_System.PowerInfoRequest
             * @static
             * @param {PB_System.IPowerInfoRequest=} [properties] Properties to set
             * @returns {PB_System.PowerInfoRequest} PowerInfoRequest instance
             */
            PowerInfoRequest.create = function create(properties) {
                return new PowerInfoRequest(properties);
            };
    
            /**
             * Encodes the specified PowerInfoRequest message. Does not implicitly {@link PB_System.PowerInfoRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_System.PowerInfoRequest
             * @static
             * @param {PB_System.IPowerInfoRequest} message PowerInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PowerInfoRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified PowerInfoRequest message, length delimited. Does not implicitly {@link PB_System.PowerInfoRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.PowerInfoRequest
             * @static
             * @param {PB_System.IPowerInfoRequest} message PowerInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PowerInfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PowerInfoRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.PowerInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.PowerInfoRequest} PowerInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PowerInfoRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.PowerInfoRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PowerInfoRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.PowerInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.PowerInfoRequest} PowerInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PowerInfoRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PowerInfoRequest message.
             * @function verify
             * @memberof PB_System.PowerInfoRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PowerInfoRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a PowerInfoRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.PowerInfoRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.PowerInfoRequest} PowerInfoRequest
             */
            PowerInfoRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.PowerInfoRequest)
                    return object;
                return new $root.PB_System.PowerInfoRequest();
            };
    
            /**
             * Creates a plain object from a PowerInfoRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.PowerInfoRequest
             * @static
             * @param {PB_System.PowerInfoRequest} message PowerInfoRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PowerInfoRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this PowerInfoRequest to JSON.
             * @function toJSON
             * @memberof PB_System.PowerInfoRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PowerInfoRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PowerInfoRequest
             * @function getTypeUrl
             * @memberof PB_System.PowerInfoRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PowerInfoRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.PowerInfoRequest";
            };
    
            return PowerInfoRequest;
        })();
    
        PB_System.PowerInfoResponse = (function() {
    
            /**
             * Properties of a PowerInfoResponse.
             * @memberof PB_System
             * @interface IPowerInfoResponse
             * @property {string|null} [key] PowerInfoResponse key
             * @property {string|null} [value] PowerInfoResponse value
             */
    
            /**
             * Constructs a new PowerInfoResponse.
             * @memberof PB_System
             * @classdesc Represents a PowerInfoResponse.
             * @implements IPowerInfoResponse
             * @constructor
             * @param {PB_System.IPowerInfoResponse=} [properties] Properties to set
             */
            function PowerInfoResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PowerInfoResponse key.
             * @member {string} key
             * @memberof PB_System.PowerInfoResponse
             * @instance
             */
            PowerInfoResponse.prototype.key = "";
    
            /**
             * PowerInfoResponse value.
             * @member {string} value
             * @memberof PB_System.PowerInfoResponse
             * @instance
             */
            PowerInfoResponse.prototype.value = "";
    
            /**
             * Creates a new PowerInfoResponse instance using the specified properties.
             * @function create
             * @memberof PB_System.PowerInfoResponse
             * @static
             * @param {PB_System.IPowerInfoResponse=} [properties] Properties to set
             * @returns {PB_System.PowerInfoResponse} PowerInfoResponse instance
             */
            PowerInfoResponse.create = function create(properties) {
                return new PowerInfoResponse(properties);
            };
    
            /**
             * Encodes the specified PowerInfoResponse message. Does not implicitly {@link PB_System.PowerInfoResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_System.PowerInfoResponse
             * @static
             * @param {PB_System.IPowerInfoResponse} message PowerInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PowerInfoResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified PowerInfoResponse message, length delimited. Does not implicitly {@link PB_System.PowerInfoResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_System.PowerInfoResponse
             * @static
             * @param {PB_System.IPowerInfoResponse} message PowerInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PowerInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PowerInfoResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_System.PowerInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_System.PowerInfoResponse} PowerInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PowerInfoResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_System.PowerInfoResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.key = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PowerInfoResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_System.PowerInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_System.PowerInfoResponse} PowerInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PowerInfoResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PowerInfoResponse message.
             * @function verify
             * @memberof PB_System.PowerInfoResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PowerInfoResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.key != null && message.hasOwnProperty("key"))
                    if (!$util.isString(message.key))
                        return "key: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isString(message.value))
                        return "value: string expected";
                return null;
            };
    
            /**
             * Creates a PowerInfoResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_System.PowerInfoResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_System.PowerInfoResponse} PowerInfoResponse
             */
            PowerInfoResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_System.PowerInfoResponse)
                    return object;
                var message = new $root.PB_System.PowerInfoResponse();
                if (object.key != null)
                    message.key = String(object.key);
                if (object.value != null)
                    message.value = String(object.value);
                return message;
            };
    
            /**
             * Creates a plain object from a PowerInfoResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_System.PowerInfoResponse
             * @static
             * @param {PB_System.PowerInfoResponse} message PowerInfoResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PowerInfoResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.key = "";
                    object.value = "";
                }
                if (message.key != null && message.hasOwnProperty("key"))
                    object.key = message.key;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };
    
            /**
             * Converts this PowerInfoResponse to JSON.
             * @function toJSON
             * @memberof PB_System.PowerInfoResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PowerInfoResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PowerInfoResponse
             * @function getTypeUrl
             * @memberof PB_System.PowerInfoResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PowerInfoResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_System.PowerInfoResponse";
            };
    
            return PowerInfoResponse;
        })();
    
        return PB_System;
    })();
    
    $root.PB_App = (function() {
    
        /**
         * Namespace PB_App.
         * @exports PB_App
         * @namespace
         */
        var PB_App = {};
    
        PB_App.StartRequest = (function() {
    
            /**
             * Properties of a StartRequest.
             * @memberof PB_App
             * @interface IStartRequest
             * @property {string|null} [name] StartRequest name
             * @property {string|null} [args] StartRequest args
             */
    
            /**
             * Constructs a new StartRequest.
             * @memberof PB_App
             * @classdesc Represents a StartRequest.
             * @implements IStartRequest
             * @constructor
             * @param {PB_App.IStartRequest=} [properties] Properties to set
             */
            function StartRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * StartRequest name.
             * @member {string} name
             * @memberof PB_App.StartRequest
             * @instance
             */
            StartRequest.prototype.name = "";
    
            /**
             * StartRequest args.
             * @member {string} args
             * @memberof PB_App.StartRequest
             * @instance
             */
            StartRequest.prototype.args = "";
    
            /**
             * Creates a new StartRequest instance using the specified properties.
             * @function create
             * @memberof PB_App.StartRequest
             * @static
             * @param {PB_App.IStartRequest=} [properties] Properties to set
             * @returns {PB_App.StartRequest} StartRequest instance
             */
            StartRequest.create = function create(properties) {
                return new StartRequest(properties);
            };
    
            /**
             * Encodes the specified StartRequest message. Does not implicitly {@link PB_App.StartRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_App.StartRequest
             * @static
             * @param {PB_App.IStartRequest} message StartRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StartRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.args != null && Object.hasOwnProperty.call(message, "args"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.args);
                return writer;
            };
    
            /**
             * Encodes the specified StartRequest message, length delimited. Does not implicitly {@link PB_App.StartRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_App.StartRequest
             * @static
             * @param {PB_App.IStartRequest} message StartRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StartRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a StartRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_App.StartRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_App.StartRequest} StartRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StartRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_App.StartRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.name = reader.string();
                            break;
                        }
                    case 2: {
                            message.args = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a StartRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_App.StartRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_App.StartRequest} StartRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StartRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a StartRequest message.
             * @function verify
             * @memberof PB_App.StartRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StartRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.args != null && message.hasOwnProperty("args"))
                    if (!$util.isString(message.args))
                        return "args: string expected";
                return null;
            };
    
            /**
             * Creates a StartRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_App.StartRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_App.StartRequest} StartRequest
             */
            StartRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_App.StartRequest)
                    return object;
                var message = new $root.PB_App.StartRequest();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.args != null)
                    message.args = String(object.args);
                return message;
            };
    
            /**
             * Creates a plain object from a StartRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_App.StartRequest
             * @static
             * @param {PB_App.StartRequest} message StartRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StartRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.name = "";
                    object.args = "";
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.args != null && message.hasOwnProperty("args"))
                    object.args = message.args;
                return object;
            };
    
            /**
             * Converts this StartRequest to JSON.
             * @function toJSON
             * @memberof PB_App.StartRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StartRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for StartRequest
             * @function getTypeUrl
             * @memberof PB_App.StartRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            StartRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_App.StartRequest";
            };
    
            return StartRequest;
        })();
    
        PB_App.LockStatusRequest = (function() {
    
            /**
             * Properties of a LockStatusRequest.
             * @memberof PB_App
             * @interface ILockStatusRequest
             */
    
            /**
             * Constructs a new LockStatusRequest.
             * @memberof PB_App
             * @classdesc Represents a LockStatusRequest.
             * @implements ILockStatusRequest
             * @constructor
             * @param {PB_App.ILockStatusRequest=} [properties] Properties to set
             */
            function LockStatusRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new LockStatusRequest instance using the specified properties.
             * @function create
             * @memberof PB_App.LockStatusRequest
             * @static
             * @param {PB_App.ILockStatusRequest=} [properties] Properties to set
             * @returns {PB_App.LockStatusRequest} LockStatusRequest instance
             */
            LockStatusRequest.create = function create(properties) {
                return new LockStatusRequest(properties);
            };
    
            /**
             * Encodes the specified LockStatusRequest message. Does not implicitly {@link PB_App.LockStatusRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_App.LockStatusRequest
             * @static
             * @param {PB_App.ILockStatusRequest} message LockStatusRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LockStatusRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified LockStatusRequest message, length delimited. Does not implicitly {@link PB_App.LockStatusRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_App.LockStatusRequest
             * @static
             * @param {PB_App.ILockStatusRequest} message LockStatusRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LockStatusRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a LockStatusRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_App.LockStatusRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_App.LockStatusRequest} LockStatusRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LockStatusRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_App.LockStatusRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a LockStatusRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_App.LockStatusRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_App.LockStatusRequest} LockStatusRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LockStatusRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a LockStatusRequest message.
             * @function verify
             * @memberof PB_App.LockStatusRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LockStatusRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a LockStatusRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_App.LockStatusRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_App.LockStatusRequest} LockStatusRequest
             */
            LockStatusRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_App.LockStatusRequest)
                    return object;
                return new $root.PB_App.LockStatusRequest();
            };
    
            /**
             * Creates a plain object from a LockStatusRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_App.LockStatusRequest
             * @static
             * @param {PB_App.LockStatusRequest} message LockStatusRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LockStatusRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this LockStatusRequest to JSON.
             * @function toJSON
             * @memberof PB_App.LockStatusRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LockStatusRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for LockStatusRequest
             * @function getTypeUrl
             * @memberof PB_App.LockStatusRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LockStatusRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_App.LockStatusRequest";
            };
    
            return LockStatusRequest;
        })();
    
        PB_App.LockStatusResponse = (function() {
    
            /**
             * Properties of a LockStatusResponse.
             * @memberof PB_App
             * @interface ILockStatusResponse
             * @property {boolean|null} [locked] LockStatusResponse locked
             */
    
            /**
             * Constructs a new LockStatusResponse.
             * @memberof PB_App
             * @classdesc Represents a LockStatusResponse.
             * @implements ILockStatusResponse
             * @constructor
             * @param {PB_App.ILockStatusResponse=} [properties] Properties to set
             */
            function LockStatusResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * LockStatusResponse locked.
             * @member {boolean} locked
             * @memberof PB_App.LockStatusResponse
             * @instance
             */
            LockStatusResponse.prototype.locked = false;
    
            /**
             * Creates a new LockStatusResponse instance using the specified properties.
             * @function create
             * @memberof PB_App.LockStatusResponse
             * @static
             * @param {PB_App.ILockStatusResponse=} [properties] Properties to set
             * @returns {PB_App.LockStatusResponse} LockStatusResponse instance
             */
            LockStatusResponse.create = function create(properties) {
                return new LockStatusResponse(properties);
            };
    
            /**
             * Encodes the specified LockStatusResponse message. Does not implicitly {@link PB_App.LockStatusResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_App.LockStatusResponse
             * @static
             * @param {PB_App.ILockStatusResponse} message LockStatusResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LockStatusResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.locked != null && Object.hasOwnProperty.call(message, "locked"))
                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.locked);
                return writer;
            };
    
            /**
             * Encodes the specified LockStatusResponse message, length delimited. Does not implicitly {@link PB_App.LockStatusResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_App.LockStatusResponse
             * @static
             * @param {PB_App.ILockStatusResponse} message LockStatusResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LockStatusResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a LockStatusResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_App.LockStatusResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_App.LockStatusResponse} LockStatusResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LockStatusResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_App.LockStatusResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.locked = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a LockStatusResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_App.LockStatusResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_App.LockStatusResponse} LockStatusResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LockStatusResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a LockStatusResponse message.
             * @function verify
             * @memberof PB_App.LockStatusResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LockStatusResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.locked != null && message.hasOwnProperty("locked"))
                    if (typeof message.locked !== "boolean")
                        return "locked: boolean expected";
                return null;
            };
    
            /**
             * Creates a LockStatusResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_App.LockStatusResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_App.LockStatusResponse} LockStatusResponse
             */
            LockStatusResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_App.LockStatusResponse)
                    return object;
                var message = new $root.PB_App.LockStatusResponse();
                if (object.locked != null)
                    message.locked = Boolean(object.locked);
                return message;
            };
    
            /**
             * Creates a plain object from a LockStatusResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_App.LockStatusResponse
             * @static
             * @param {PB_App.LockStatusResponse} message LockStatusResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LockStatusResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.locked = false;
                if (message.locked != null && message.hasOwnProperty("locked"))
                    object.locked = message.locked;
                return object;
            };
    
            /**
             * Converts this LockStatusResponse to JSON.
             * @function toJSON
             * @memberof PB_App.LockStatusResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LockStatusResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for LockStatusResponse
             * @function getTypeUrl
             * @memberof PB_App.LockStatusResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LockStatusResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_App.LockStatusResponse";
            };
    
            return LockStatusResponse;
        })();
    
        PB_App.AppExitRequest = (function() {
    
            /**
             * Properties of an AppExitRequest.
             * @memberof PB_App
             * @interface IAppExitRequest
             */
    
            /**
             * Constructs a new AppExitRequest.
             * @memberof PB_App
             * @classdesc Represents an AppExitRequest.
             * @implements IAppExitRequest
             * @constructor
             * @param {PB_App.IAppExitRequest=} [properties] Properties to set
             */
            function AppExitRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new AppExitRequest instance using the specified properties.
             * @function create
             * @memberof PB_App.AppExitRequest
             * @static
             * @param {PB_App.IAppExitRequest=} [properties] Properties to set
             * @returns {PB_App.AppExitRequest} AppExitRequest instance
             */
            AppExitRequest.create = function create(properties) {
                return new AppExitRequest(properties);
            };
    
            /**
             * Encodes the specified AppExitRequest message. Does not implicitly {@link PB_App.AppExitRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_App.AppExitRequest
             * @static
             * @param {PB_App.IAppExitRequest} message AppExitRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppExitRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified AppExitRequest message, length delimited. Does not implicitly {@link PB_App.AppExitRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_App.AppExitRequest
             * @static
             * @param {PB_App.IAppExitRequest} message AppExitRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppExitRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an AppExitRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_App.AppExitRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_App.AppExitRequest} AppExitRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppExitRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_App.AppExitRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an AppExitRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_App.AppExitRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_App.AppExitRequest} AppExitRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppExitRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an AppExitRequest message.
             * @function verify
             * @memberof PB_App.AppExitRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AppExitRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates an AppExitRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_App.AppExitRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_App.AppExitRequest} AppExitRequest
             */
            AppExitRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_App.AppExitRequest)
                    return object;
                return new $root.PB_App.AppExitRequest();
            };
    
            /**
             * Creates a plain object from an AppExitRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_App.AppExitRequest
             * @static
             * @param {PB_App.AppExitRequest} message AppExitRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AppExitRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this AppExitRequest to JSON.
             * @function toJSON
             * @memberof PB_App.AppExitRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AppExitRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for AppExitRequest
             * @function getTypeUrl
             * @memberof PB_App.AppExitRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AppExitRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_App.AppExitRequest";
            };
    
            return AppExitRequest;
        })();
    
        PB_App.AppLoadFileRequest = (function() {
    
            /**
             * Properties of an AppLoadFileRequest.
             * @memberof PB_App
             * @interface IAppLoadFileRequest
             * @property {string|null} [path] AppLoadFileRequest path
             */
    
            /**
             * Constructs a new AppLoadFileRequest.
             * @memberof PB_App
             * @classdesc Represents an AppLoadFileRequest.
             * @implements IAppLoadFileRequest
             * @constructor
             * @param {PB_App.IAppLoadFileRequest=} [properties] Properties to set
             */
            function AppLoadFileRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * AppLoadFileRequest path.
             * @member {string} path
             * @memberof PB_App.AppLoadFileRequest
             * @instance
             */
            AppLoadFileRequest.prototype.path = "";
    
            /**
             * Creates a new AppLoadFileRequest instance using the specified properties.
             * @function create
             * @memberof PB_App.AppLoadFileRequest
             * @static
             * @param {PB_App.IAppLoadFileRequest=} [properties] Properties to set
             * @returns {PB_App.AppLoadFileRequest} AppLoadFileRequest instance
             */
            AppLoadFileRequest.create = function create(properties) {
                return new AppLoadFileRequest(properties);
            };
    
            /**
             * Encodes the specified AppLoadFileRequest message. Does not implicitly {@link PB_App.AppLoadFileRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_App.AppLoadFileRequest
             * @static
             * @param {PB_App.IAppLoadFileRequest} message AppLoadFileRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppLoadFileRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                return writer;
            };
    
            /**
             * Encodes the specified AppLoadFileRequest message, length delimited. Does not implicitly {@link PB_App.AppLoadFileRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_App.AppLoadFileRequest
             * @static
             * @param {PB_App.IAppLoadFileRequest} message AppLoadFileRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppLoadFileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an AppLoadFileRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_App.AppLoadFileRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_App.AppLoadFileRequest} AppLoadFileRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppLoadFileRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_App.AppLoadFileRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.path = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an AppLoadFileRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_App.AppLoadFileRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_App.AppLoadFileRequest} AppLoadFileRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppLoadFileRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an AppLoadFileRequest message.
             * @function verify
             * @memberof PB_App.AppLoadFileRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AppLoadFileRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.path != null && message.hasOwnProperty("path"))
                    if (!$util.isString(message.path))
                        return "path: string expected";
                return null;
            };
    
            /**
             * Creates an AppLoadFileRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_App.AppLoadFileRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_App.AppLoadFileRequest} AppLoadFileRequest
             */
            AppLoadFileRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_App.AppLoadFileRequest)
                    return object;
                var message = new $root.PB_App.AppLoadFileRequest();
                if (object.path != null)
                    message.path = String(object.path);
                return message;
            };
    
            /**
             * Creates a plain object from an AppLoadFileRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_App.AppLoadFileRequest
             * @static
             * @param {PB_App.AppLoadFileRequest} message AppLoadFileRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AppLoadFileRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.path = "";
                if (message.path != null && message.hasOwnProperty("path"))
                    object.path = message.path;
                return object;
            };
    
            /**
             * Converts this AppLoadFileRequest to JSON.
             * @function toJSON
             * @memberof PB_App.AppLoadFileRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AppLoadFileRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for AppLoadFileRequest
             * @function getTypeUrl
             * @memberof PB_App.AppLoadFileRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AppLoadFileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_App.AppLoadFileRequest";
            };
    
            return AppLoadFileRequest;
        })();
    
        PB_App.AppButtonPressRequest = (function() {
    
            /**
             * Properties of an AppButtonPressRequest.
             * @memberof PB_App
             * @interface IAppButtonPressRequest
             * @property {string|null} [args] AppButtonPressRequest args
             * @property {number|null} [index] AppButtonPressRequest index
             */
    
            /**
             * Constructs a new AppButtonPressRequest.
             * @memberof PB_App
             * @classdesc Represents an AppButtonPressRequest.
             * @implements IAppButtonPressRequest
             * @constructor
             * @param {PB_App.IAppButtonPressRequest=} [properties] Properties to set
             */
            function AppButtonPressRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * AppButtonPressRequest args.
             * @member {string} args
             * @memberof PB_App.AppButtonPressRequest
             * @instance
             */
            AppButtonPressRequest.prototype.args = "";
    
            /**
             * AppButtonPressRequest index.
             * @member {number} index
             * @memberof PB_App.AppButtonPressRequest
             * @instance
             */
            AppButtonPressRequest.prototype.index = 0;
    
            /**
             * Creates a new AppButtonPressRequest instance using the specified properties.
             * @function create
             * @memberof PB_App.AppButtonPressRequest
             * @static
             * @param {PB_App.IAppButtonPressRequest=} [properties] Properties to set
             * @returns {PB_App.AppButtonPressRequest} AppButtonPressRequest instance
             */
            AppButtonPressRequest.create = function create(properties) {
                return new AppButtonPressRequest(properties);
            };
    
            /**
             * Encodes the specified AppButtonPressRequest message. Does not implicitly {@link PB_App.AppButtonPressRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_App.AppButtonPressRequest
             * @static
             * @param {PB_App.IAppButtonPressRequest} message AppButtonPressRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppButtonPressRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.args != null && Object.hasOwnProperty.call(message, "args"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.args);
                if (message.index != null && Object.hasOwnProperty.call(message, "index"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.index);
                return writer;
            };
    
            /**
             * Encodes the specified AppButtonPressRequest message, length delimited. Does not implicitly {@link PB_App.AppButtonPressRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_App.AppButtonPressRequest
             * @static
             * @param {PB_App.IAppButtonPressRequest} message AppButtonPressRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppButtonPressRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an AppButtonPressRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_App.AppButtonPressRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_App.AppButtonPressRequest} AppButtonPressRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppButtonPressRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_App.AppButtonPressRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.args = reader.string();
                            break;
                        }
                    case 2: {
                            message.index = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an AppButtonPressRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_App.AppButtonPressRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_App.AppButtonPressRequest} AppButtonPressRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppButtonPressRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an AppButtonPressRequest message.
             * @function verify
             * @memberof PB_App.AppButtonPressRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AppButtonPressRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.args != null && message.hasOwnProperty("args"))
                    if (!$util.isString(message.args))
                        return "args: string expected";
                if (message.index != null && message.hasOwnProperty("index"))
                    if (!$util.isInteger(message.index))
                        return "index: integer expected";
                return null;
            };
    
            /**
             * Creates an AppButtonPressRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_App.AppButtonPressRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_App.AppButtonPressRequest} AppButtonPressRequest
             */
            AppButtonPressRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_App.AppButtonPressRequest)
                    return object;
                var message = new $root.PB_App.AppButtonPressRequest();
                if (object.args != null)
                    message.args = String(object.args);
                if (object.index != null)
                    message.index = object.index | 0;
                return message;
            };
    
            /**
             * Creates a plain object from an AppButtonPressRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_App.AppButtonPressRequest
             * @static
             * @param {PB_App.AppButtonPressRequest} message AppButtonPressRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AppButtonPressRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.args = "";
                    object.index = 0;
                }
                if (message.args != null && message.hasOwnProperty("args"))
                    object.args = message.args;
                if (message.index != null && message.hasOwnProperty("index"))
                    object.index = message.index;
                return object;
            };
    
            /**
             * Converts this AppButtonPressRequest to JSON.
             * @function toJSON
             * @memberof PB_App.AppButtonPressRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AppButtonPressRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for AppButtonPressRequest
             * @function getTypeUrl
             * @memberof PB_App.AppButtonPressRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AppButtonPressRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_App.AppButtonPressRequest";
            };
    
            return AppButtonPressRequest;
        })();
    
        PB_App.AppButtonReleaseRequest = (function() {
    
            /**
             * Properties of an AppButtonReleaseRequest.
             * @memberof PB_App
             * @interface IAppButtonReleaseRequest
             */
    
            /**
             * Constructs a new AppButtonReleaseRequest.
             * @memberof PB_App
             * @classdesc Represents an AppButtonReleaseRequest.
             * @implements IAppButtonReleaseRequest
             * @constructor
             * @param {PB_App.IAppButtonReleaseRequest=} [properties] Properties to set
             */
            function AppButtonReleaseRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new AppButtonReleaseRequest instance using the specified properties.
             * @function create
             * @memberof PB_App.AppButtonReleaseRequest
             * @static
             * @param {PB_App.IAppButtonReleaseRequest=} [properties] Properties to set
             * @returns {PB_App.AppButtonReleaseRequest} AppButtonReleaseRequest instance
             */
            AppButtonReleaseRequest.create = function create(properties) {
                return new AppButtonReleaseRequest(properties);
            };
    
            /**
             * Encodes the specified AppButtonReleaseRequest message. Does not implicitly {@link PB_App.AppButtonReleaseRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_App.AppButtonReleaseRequest
             * @static
             * @param {PB_App.IAppButtonReleaseRequest} message AppButtonReleaseRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppButtonReleaseRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified AppButtonReleaseRequest message, length delimited. Does not implicitly {@link PB_App.AppButtonReleaseRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_App.AppButtonReleaseRequest
             * @static
             * @param {PB_App.IAppButtonReleaseRequest} message AppButtonReleaseRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppButtonReleaseRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an AppButtonReleaseRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_App.AppButtonReleaseRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_App.AppButtonReleaseRequest} AppButtonReleaseRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppButtonReleaseRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_App.AppButtonReleaseRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an AppButtonReleaseRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_App.AppButtonReleaseRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_App.AppButtonReleaseRequest} AppButtonReleaseRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppButtonReleaseRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an AppButtonReleaseRequest message.
             * @function verify
             * @memberof PB_App.AppButtonReleaseRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AppButtonReleaseRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates an AppButtonReleaseRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_App.AppButtonReleaseRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_App.AppButtonReleaseRequest} AppButtonReleaseRequest
             */
            AppButtonReleaseRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_App.AppButtonReleaseRequest)
                    return object;
                return new $root.PB_App.AppButtonReleaseRequest();
            };
    
            /**
             * Creates a plain object from an AppButtonReleaseRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_App.AppButtonReleaseRequest
             * @static
             * @param {PB_App.AppButtonReleaseRequest} message AppButtonReleaseRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AppButtonReleaseRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this AppButtonReleaseRequest to JSON.
             * @function toJSON
             * @memberof PB_App.AppButtonReleaseRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AppButtonReleaseRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for AppButtonReleaseRequest
             * @function getTypeUrl
             * @memberof PB_App.AppButtonReleaseRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AppButtonReleaseRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_App.AppButtonReleaseRequest";
            };
    
            return AppButtonReleaseRequest;
        })();
    
        PB_App.AppButtonPressReleaseRequest = (function() {
    
            /**
             * Properties of an AppButtonPressReleaseRequest.
             * @memberof PB_App
             * @interface IAppButtonPressReleaseRequest
             * @property {string|null} [args] AppButtonPressReleaseRequest args
             * @property {number|null} [index] AppButtonPressReleaseRequest index
             */
    
            /**
             * Constructs a new AppButtonPressReleaseRequest.
             * @memberof PB_App
             * @classdesc Represents an AppButtonPressReleaseRequest.
             * @implements IAppButtonPressReleaseRequest
             * @constructor
             * @param {PB_App.IAppButtonPressReleaseRequest=} [properties] Properties to set
             */
            function AppButtonPressReleaseRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * AppButtonPressReleaseRequest args.
             * @member {string} args
             * @memberof PB_App.AppButtonPressReleaseRequest
             * @instance
             */
            AppButtonPressReleaseRequest.prototype.args = "";
    
            /**
             * AppButtonPressReleaseRequest index.
             * @member {number} index
             * @memberof PB_App.AppButtonPressReleaseRequest
             * @instance
             */
            AppButtonPressReleaseRequest.prototype.index = 0;
    
            /**
             * Creates a new AppButtonPressReleaseRequest instance using the specified properties.
             * @function create
             * @memberof PB_App.AppButtonPressReleaseRequest
             * @static
             * @param {PB_App.IAppButtonPressReleaseRequest=} [properties] Properties to set
             * @returns {PB_App.AppButtonPressReleaseRequest} AppButtonPressReleaseRequest instance
             */
            AppButtonPressReleaseRequest.create = function create(properties) {
                return new AppButtonPressReleaseRequest(properties);
            };
    
            /**
             * Encodes the specified AppButtonPressReleaseRequest message. Does not implicitly {@link PB_App.AppButtonPressReleaseRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_App.AppButtonPressReleaseRequest
             * @static
             * @param {PB_App.IAppButtonPressReleaseRequest} message AppButtonPressReleaseRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppButtonPressReleaseRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.args != null && Object.hasOwnProperty.call(message, "args"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.args);
                if (message.index != null && Object.hasOwnProperty.call(message, "index"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.index);
                return writer;
            };
    
            /**
             * Encodes the specified AppButtonPressReleaseRequest message, length delimited. Does not implicitly {@link PB_App.AppButtonPressReleaseRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_App.AppButtonPressReleaseRequest
             * @static
             * @param {PB_App.IAppButtonPressReleaseRequest} message AppButtonPressReleaseRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppButtonPressReleaseRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an AppButtonPressReleaseRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_App.AppButtonPressReleaseRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_App.AppButtonPressReleaseRequest} AppButtonPressReleaseRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppButtonPressReleaseRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_App.AppButtonPressReleaseRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.args = reader.string();
                            break;
                        }
                    case 2: {
                            message.index = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an AppButtonPressReleaseRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_App.AppButtonPressReleaseRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_App.AppButtonPressReleaseRequest} AppButtonPressReleaseRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppButtonPressReleaseRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an AppButtonPressReleaseRequest message.
             * @function verify
             * @memberof PB_App.AppButtonPressReleaseRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AppButtonPressReleaseRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.args != null && message.hasOwnProperty("args"))
                    if (!$util.isString(message.args))
                        return "args: string expected";
                if (message.index != null && message.hasOwnProperty("index"))
                    if (!$util.isInteger(message.index))
                        return "index: integer expected";
                return null;
            };
    
            /**
             * Creates an AppButtonPressReleaseRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_App.AppButtonPressReleaseRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_App.AppButtonPressReleaseRequest} AppButtonPressReleaseRequest
             */
            AppButtonPressReleaseRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_App.AppButtonPressReleaseRequest)
                    return object;
                var message = new $root.PB_App.AppButtonPressReleaseRequest();
                if (object.args != null)
                    message.args = String(object.args);
                if (object.index != null)
                    message.index = object.index | 0;
                return message;
            };
    
            /**
             * Creates a plain object from an AppButtonPressReleaseRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_App.AppButtonPressReleaseRequest
             * @static
             * @param {PB_App.AppButtonPressReleaseRequest} message AppButtonPressReleaseRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AppButtonPressReleaseRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.args = "";
                    object.index = 0;
                }
                if (message.args != null && message.hasOwnProperty("args"))
                    object.args = message.args;
                if (message.index != null && message.hasOwnProperty("index"))
                    object.index = message.index;
                return object;
            };
    
            /**
             * Converts this AppButtonPressReleaseRequest to JSON.
             * @function toJSON
             * @memberof PB_App.AppButtonPressReleaseRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AppButtonPressReleaseRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for AppButtonPressReleaseRequest
             * @function getTypeUrl
             * @memberof PB_App.AppButtonPressReleaseRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AppButtonPressReleaseRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_App.AppButtonPressReleaseRequest";
            };
    
            return AppButtonPressReleaseRequest;
        })();
    
        /**
         * AppState enum.
         * @name PB_App.AppState
         * @enum {number}
         * @property {number} APP_CLOSED=0 APP_CLOSED value
         * @property {number} APP_STARTED=1 APP_STARTED value
         */
        PB_App.AppState = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "APP_CLOSED"] = 0;
            values[valuesById[1] = "APP_STARTED"] = 1;
            return values;
        })();
    
        PB_App.AppStateResponse = (function() {
    
            /**
             * Properties of an AppStateResponse.
             * @memberof PB_App
             * @interface IAppStateResponse
             * @property {PB_App.AppState|null} [state] AppStateResponse state
             */
    
            /**
             * Constructs a new AppStateResponse.
             * @memberof PB_App
             * @classdesc Represents an AppStateResponse.
             * @implements IAppStateResponse
             * @constructor
             * @param {PB_App.IAppStateResponse=} [properties] Properties to set
             */
            function AppStateResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * AppStateResponse state.
             * @member {PB_App.AppState} state
             * @memberof PB_App.AppStateResponse
             * @instance
             */
            AppStateResponse.prototype.state = 0;
    
            /**
             * Creates a new AppStateResponse instance using the specified properties.
             * @function create
             * @memberof PB_App.AppStateResponse
             * @static
             * @param {PB_App.IAppStateResponse=} [properties] Properties to set
             * @returns {PB_App.AppStateResponse} AppStateResponse instance
             */
            AppStateResponse.create = function create(properties) {
                return new AppStateResponse(properties);
            };
    
            /**
             * Encodes the specified AppStateResponse message. Does not implicitly {@link PB_App.AppStateResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_App.AppStateResponse
             * @static
             * @param {PB_App.IAppStateResponse} message AppStateResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppStateResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                return writer;
            };
    
            /**
             * Encodes the specified AppStateResponse message, length delimited. Does not implicitly {@link PB_App.AppStateResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_App.AppStateResponse
             * @static
             * @param {PB_App.IAppStateResponse} message AppStateResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppStateResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an AppStateResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_App.AppStateResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_App.AppStateResponse} AppStateResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppStateResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_App.AppStateResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.state = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an AppStateResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_App.AppStateResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_App.AppStateResponse} AppStateResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppStateResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an AppStateResponse message.
             * @function verify
             * @memberof PB_App.AppStateResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AppStateResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.state != null && message.hasOwnProperty("state"))
                    switch (message.state) {
                    default:
                        return "state: enum value expected";
                    case 0:
                    case 1:
                        break;
                    }
                return null;
            };
    
            /**
             * Creates an AppStateResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_App.AppStateResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_App.AppStateResponse} AppStateResponse
             */
            AppStateResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_App.AppStateResponse)
                    return object;
                var message = new $root.PB_App.AppStateResponse();
                switch (object.state) {
                default:
                    if (typeof object.state === "number") {
                        message.state = object.state;
                        break;
                    }
                    break;
                case "APP_CLOSED":
                case 0:
                    message.state = 0;
                    break;
                case "APP_STARTED":
                case 1:
                    message.state = 1;
                    break;
                }
                return message;
            };
    
            /**
             * Creates a plain object from an AppStateResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_App.AppStateResponse
             * @static
             * @param {PB_App.AppStateResponse} message AppStateResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AppStateResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.state = options.enums === String ? "APP_CLOSED" : 0;
                if (message.state != null && message.hasOwnProperty("state"))
                    object.state = options.enums === String ? $root.PB_App.AppState[message.state] === undefined ? message.state : $root.PB_App.AppState[message.state] : message.state;
                return object;
            };
    
            /**
             * Converts this AppStateResponse to JSON.
             * @function toJSON
             * @memberof PB_App.AppStateResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AppStateResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for AppStateResponse
             * @function getTypeUrl
             * @memberof PB_App.AppStateResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AppStateResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_App.AppStateResponse";
            };
    
            return AppStateResponse;
        })();
    
        PB_App.GetErrorRequest = (function() {
    
            /**
             * Properties of a GetErrorRequest.
             * @memberof PB_App
             * @interface IGetErrorRequest
             */
    
            /**
             * Constructs a new GetErrorRequest.
             * @memberof PB_App
             * @classdesc Represents a GetErrorRequest.
             * @implements IGetErrorRequest
             * @constructor
             * @param {PB_App.IGetErrorRequest=} [properties] Properties to set
             */
            function GetErrorRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new GetErrorRequest instance using the specified properties.
             * @function create
             * @memberof PB_App.GetErrorRequest
             * @static
             * @param {PB_App.IGetErrorRequest=} [properties] Properties to set
             * @returns {PB_App.GetErrorRequest} GetErrorRequest instance
             */
            GetErrorRequest.create = function create(properties) {
                return new GetErrorRequest(properties);
            };
    
            /**
             * Encodes the specified GetErrorRequest message. Does not implicitly {@link PB_App.GetErrorRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_App.GetErrorRequest
             * @static
             * @param {PB_App.IGetErrorRequest} message GetErrorRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetErrorRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified GetErrorRequest message, length delimited. Does not implicitly {@link PB_App.GetErrorRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_App.GetErrorRequest
             * @static
             * @param {PB_App.IGetErrorRequest} message GetErrorRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetErrorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a GetErrorRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_App.GetErrorRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_App.GetErrorRequest} GetErrorRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetErrorRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_App.GetErrorRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a GetErrorRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_App.GetErrorRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_App.GetErrorRequest} GetErrorRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetErrorRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a GetErrorRequest message.
             * @function verify
             * @memberof PB_App.GetErrorRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetErrorRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a GetErrorRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_App.GetErrorRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_App.GetErrorRequest} GetErrorRequest
             */
            GetErrorRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_App.GetErrorRequest)
                    return object;
                return new $root.PB_App.GetErrorRequest();
            };
    
            /**
             * Creates a plain object from a GetErrorRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_App.GetErrorRequest
             * @static
             * @param {PB_App.GetErrorRequest} message GetErrorRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetErrorRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this GetErrorRequest to JSON.
             * @function toJSON
             * @memberof PB_App.GetErrorRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetErrorRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for GetErrorRequest
             * @function getTypeUrl
             * @memberof PB_App.GetErrorRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetErrorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_App.GetErrorRequest";
            };
    
            return GetErrorRequest;
        })();
    
        PB_App.GetErrorResponse = (function() {
    
            /**
             * Properties of a GetErrorResponse.
             * @memberof PB_App
             * @interface IGetErrorResponse
             * @property {number|null} [code] GetErrorResponse code
             * @property {string|null} [text] GetErrorResponse text
             */
    
            /**
             * Constructs a new GetErrorResponse.
             * @memberof PB_App
             * @classdesc Represents a GetErrorResponse.
             * @implements IGetErrorResponse
             * @constructor
             * @param {PB_App.IGetErrorResponse=} [properties] Properties to set
             */
            function GetErrorResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * GetErrorResponse code.
             * @member {number} code
             * @memberof PB_App.GetErrorResponse
             * @instance
             */
            GetErrorResponse.prototype.code = 0;
    
            /**
             * GetErrorResponse text.
             * @member {string} text
             * @memberof PB_App.GetErrorResponse
             * @instance
             */
            GetErrorResponse.prototype.text = "";
    
            /**
             * Creates a new GetErrorResponse instance using the specified properties.
             * @function create
             * @memberof PB_App.GetErrorResponse
             * @static
             * @param {PB_App.IGetErrorResponse=} [properties] Properties to set
             * @returns {PB_App.GetErrorResponse} GetErrorResponse instance
             */
            GetErrorResponse.create = function create(properties) {
                return new GetErrorResponse(properties);
            };
    
            /**
             * Encodes the specified GetErrorResponse message. Does not implicitly {@link PB_App.GetErrorResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_App.GetErrorResponse
             * @static
             * @param {PB_App.IGetErrorResponse} message GetErrorResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetErrorResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.code);
                if (message.text != null && Object.hasOwnProperty.call(message, "text"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.text);
                return writer;
            };
    
            /**
             * Encodes the specified GetErrorResponse message, length delimited. Does not implicitly {@link PB_App.GetErrorResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_App.GetErrorResponse
             * @static
             * @param {PB_App.IGetErrorResponse} message GetErrorResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetErrorResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a GetErrorResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_App.GetErrorResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_App.GetErrorResponse} GetErrorResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetErrorResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_App.GetErrorResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.code = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.text = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a GetErrorResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_App.GetErrorResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_App.GetErrorResponse} GetErrorResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetErrorResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a GetErrorResponse message.
             * @function verify
             * @memberof PB_App.GetErrorResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetErrorResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.code != null && message.hasOwnProperty("code"))
                    if (!$util.isInteger(message.code))
                        return "code: integer expected";
                if (message.text != null && message.hasOwnProperty("text"))
                    if (!$util.isString(message.text))
                        return "text: string expected";
                return null;
            };
    
            /**
             * Creates a GetErrorResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_App.GetErrorResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_App.GetErrorResponse} GetErrorResponse
             */
            GetErrorResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_App.GetErrorResponse)
                    return object;
                var message = new $root.PB_App.GetErrorResponse();
                if (object.code != null)
                    message.code = object.code >>> 0;
                if (object.text != null)
                    message.text = String(object.text);
                return message;
            };
    
            /**
             * Creates a plain object from a GetErrorResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_App.GetErrorResponse
             * @static
             * @param {PB_App.GetErrorResponse} message GetErrorResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetErrorResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.code = 0;
                    object.text = "";
                }
                if (message.code != null && message.hasOwnProperty("code"))
                    object.code = message.code;
                if (message.text != null && message.hasOwnProperty("text"))
                    object.text = message.text;
                return object;
            };
    
            /**
             * Converts this GetErrorResponse to JSON.
             * @function toJSON
             * @memberof PB_App.GetErrorResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetErrorResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for GetErrorResponse
             * @function getTypeUrl
             * @memberof PB_App.GetErrorResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetErrorResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_App.GetErrorResponse";
            };
    
            return GetErrorResponse;
        })();
    
        PB_App.DataExchangeRequest = (function() {
    
            /**
             * Properties of a DataExchangeRequest.
             * @memberof PB_App
             * @interface IDataExchangeRequest
             * @property {Uint8Array|null} [data] DataExchangeRequest data
             */
    
            /**
             * Constructs a new DataExchangeRequest.
             * @memberof PB_App
             * @classdesc Represents a DataExchangeRequest.
             * @implements IDataExchangeRequest
             * @constructor
             * @param {PB_App.IDataExchangeRequest=} [properties] Properties to set
             */
            function DataExchangeRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * DataExchangeRequest data.
             * @member {Uint8Array} data
             * @memberof PB_App.DataExchangeRequest
             * @instance
             */
            DataExchangeRequest.prototype.data = $util.newBuffer([]);
    
            /**
             * Creates a new DataExchangeRequest instance using the specified properties.
             * @function create
             * @memberof PB_App.DataExchangeRequest
             * @static
             * @param {PB_App.IDataExchangeRequest=} [properties] Properties to set
             * @returns {PB_App.DataExchangeRequest} DataExchangeRequest instance
             */
            DataExchangeRequest.create = function create(properties) {
                return new DataExchangeRequest(properties);
            };
    
            /**
             * Encodes the specified DataExchangeRequest message. Does not implicitly {@link PB_App.DataExchangeRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_App.DataExchangeRequest
             * @static
             * @param {PB_App.IDataExchangeRequest} message DataExchangeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DataExchangeRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.data);
                return writer;
            };
    
            /**
             * Encodes the specified DataExchangeRequest message, length delimited. Does not implicitly {@link PB_App.DataExchangeRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_App.DataExchangeRequest
             * @static
             * @param {PB_App.IDataExchangeRequest} message DataExchangeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DataExchangeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a DataExchangeRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_App.DataExchangeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_App.DataExchangeRequest} DataExchangeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DataExchangeRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_App.DataExchangeRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.data = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a DataExchangeRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_App.DataExchangeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_App.DataExchangeRequest} DataExchangeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DataExchangeRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a DataExchangeRequest message.
             * @function verify
             * @memberof PB_App.DataExchangeRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DataExchangeRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.data != null && message.hasOwnProperty("data"))
                    if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                        return "data: buffer expected";
                return null;
            };
    
            /**
             * Creates a DataExchangeRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_App.DataExchangeRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_App.DataExchangeRequest} DataExchangeRequest
             */
            DataExchangeRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_App.DataExchangeRequest)
                    return object;
                var message = new $root.PB_App.DataExchangeRequest();
                if (object.data != null)
                    if (typeof object.data === "string")
                        $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                    else if (object.data.length >= 0)
                        message.data = object.data;
                return message;
            };
    
            /**
             * Creates a plain object from a DataExchangeRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_App.DataExchangeRequest
             * @static
             * @param {PB_App.DataExchangeRequest} message DataExchangeRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DataExchangeRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if (options.bytes === String)
                        object.data = "";
                    else {
                        object.data = [];
                        if (options.bytes !== Array)
                            object.data = $util.newBuffer(object.data);
                    }
                if (message.data != null && message.hasOwnProperty("data"))
                    object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                return object;
            };
    
            /**
             * Converts this DataExchangeRequest to JSON.
             * @function toJSON
             * @memberof PB_App.DataExchangeRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DataExchangeRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for DataExchangeRequest
             * @function getTypeUrl
             * @memberof PB_App.DataExchangeRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            DataExchangeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_App.DataExchangeRequest";
            };
    
            return DataExchangeRequest;
        })();
    
        return PB_App;
    })();
    
    $root.PB_Gui = (function() {
    
        /**
         * Namespace PB_Gui.
         * @exports PB_Gui
         * @namespace
         */
        var PB_Gui = {};
    
        /**
         * InputKey enum.
         * @name PB_Gui.InputKey
         * @enum {number}
         * @property {number} UP=0 UP value
         * @property {number} DOWN=1 DOWN value
         * @property {number} RIGHT=2 RIGHT value
         * @property {number} LEFT=3 LEFT value
         * @property {number} OK=4 OK value
         * @property {number} BACK=5 BACK value
         */
        PB_Gui.InputKey = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "UP"] = 0;
            values[valuesById[1] = "DOWN"] = 1;
            values[valuesById[2] = "RIGHT"] = 2;
            values[valuesById[3] = "LEFT"] = 3;
            values[valuesById[4] = "OK"] = 4;
            values[valuesById[5] = "BACK"] = 5;
            return values;
        })();
    
        /**
         * InputType enum.
         * @name PB_Gui.InputType
         * @enum {number}
         * @property {number} PRESS=0 PRESS value
         * @property {number} RELEASE=1 RELEASE value
         * @property {number} SHORT=2 SHORT value
         * @property {number} LONG=3 LONG value
         * @property {number} REPEAT=4 REPEAT value
         */
        PB_Gui.InputType = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "PRESS"] = 0;
            values[valuesById[1] = "RELEASE"] = 1;
            values[valuesById[2] = "SHORT"] = 2;
            values[valuesById[3] = "LONG"] = 3;
            values[valuesById[4] = "REPEAT"] = 4;
            return values;
        })();
    
        /**
         * ScreenOrientation enum.
         * @name PB_Gui.ScreenOrientation
         * @enum {number}
         * @property {number} HORIZONTAL=0 HORIZONTAL value
         * @property {number} HORIZONTAL_FLIP=1 HORIZONTAL_FLIP value
         * @property {number} VERTICAL=2 VERTICAL value
         * @property {number} VERTICAL_FLIP=3 VERTICAL_FLIP value
         */
        PB_Gui.ScreenOrientation = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "HORIZONTAL"] = 0;
            values[valuesById[1] = "HORIZONTAL_FLIP"] = 1;
            values[valuesById[2] = "VERTICAL"] = 2;
            values[valuesById[3] = "VERTICAL_FLIP"] = 3;
            return values;
        })();
    
        PB_Gui.ScreenFrame = (function() {
    
            /**
             * Properties of a ScreenFrame.
             * @memberof PB_Gui
             * @interface IScreenFrame
             * @property {Uint8Array|null} [data] ScreenFrame data
             * @property {PB_Gui.ScreenOrientation|null} [orientation] ScreenFrame orientation
             */
    
            /**
             * Constructs a new ScreenFrame.
             * @memberof PB_Gui
             * @classdesc Represents a ScreenFrame.
             * @implements IScreenFrame
             * @constructor
             * @param {PB_Gui.IScreenFrame=} [properties] Properties to set
             */
            function ScreenFrame(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ScreenFrame data.
             * @member {Uint8Array} data
             * @memberof PB_Gui.ScreenFrame
             * @instance
             */
            ScreenFrame.prototype.data = $util.newBuffer([]);
    
            /**
             * ScreenFrame orientation.
             * @member {PB_Gui.ScreenOrientation} orientation
             * @memberof PB_Gui.ScreenFrame
             * @instance
             */
            ScreenFrame.prototype.orientation = 0;
    
            /**
             * Creates a new ScreenFrame instance using the specified properties.
             * @function create
             * @memberof PB_Gui.ScreenFrame
             * @static
             * @param {PB_Gui.IScreenFrame=} [properties] Properties to set
             * @returns {PB_Gui.ScreenFrame} ScreenFrame instance
             */
            ScreenFrame.create = function create(properties) {
                return new ScreenFrame(properties);
            };
    
            /**
             * Encodes the specified ScreenFrame message. Does not implicitly {@link PB_Gui.ScreenFrame.verify|verify} messages.
             * @function encode
             * @memberof PB_Gui.ScreenFrame
             * @static
             * @param {PB_Gui.IScreenFrame} message ScreenFrame message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ScreenFrame.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.data);
                if (message.orientation != null && Object.hasOwnProperty.call(message, "orientation"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.orientation);
                return writer;
            };
    
            /**
             * Encodes the specified ScreenFrame message, length delimited. Does not implicitly {@link PB_Gui.ScreenFrame.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gui.ScreenFrame
             * @static
             * @param {PB_Gui.IScreenFrame} message ScreenFrame message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ScreenFrame.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ScreenFrame message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gui.ScreenFrame
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gui.ScreenFrame} ScreenFrame
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ScreenFrame.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gui.ScreenFrame();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.data = reader.bytes();
                            break;
                        }
                    case 2: {
                            message.orientation = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ScreenFrame message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gui.ScreenFrame
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gui.ScreenFrame} ScreenFrame
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ScreenFrame.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ScreenFrame message.
             * @function verify
             * @memberof PB_Gui.ScreenFrame
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ScreenFrame.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.data != null && message.hasOwnProperty("data"))
                    if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                        return "data: buffer expected";
                if (message.orientation != null && message.hasOwnProperty("orientation"))
                    switch (message.orientation) {
                    default:
                        return "orientation: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    }
                return null;
            };
    
            /**
             * Creates a ScreenFrame message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gui.ScreenFrame
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gui.ScreenFrame} ScreenFrame
             */
            ScreenFrame.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gui.ScreenFrame)
                    return object;
                var message = new $root.PB_Gui.ScreenFrame();
                if (object.data != null)
                    if (typeof object.data === "string")
                        $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                    else if (object.data.length >= 0)
                        message.data = object.data;
                switch (object.orientation) {
                default:
                    if (typeof object.orientation === "number") {
                        message.orientation = object.orientation;
                        break;
                    }
                    break;
                case "HORIZONTAL":
                case 0:
                    message.orientation = 0;
                    break;
                case "HORIZONTAL_FLIP":
                case 1:
                    message.orientation = 1;
                    break;
                case "VERTICAL":
                case 2:
                    message.orientation = 2;
                    break;
                case "VERTICAL_FLIP":
                case 3:
                    message.orientation = 3;
                    break;
                }
                return message;
            };
    
            /**
             * Creates a plain object from a ScreenFrame message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gui.ScreenFrame
             * @static
             * @param {PB_Gui.ScreenFrame} message ScreenFrame
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ScreenFrame.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if (options.bytes === String)
                        object.data = "";
                    else {
                        object.data = [];
                        if (options.bytes !== Array)
                            object.data = $util.newBuffer(object.data);
                    }
                    object.orientation = options.enums === String ? "HORIZONTAL" : 0;
                }
                if (message.data != null && message.hasOwnProperty("data"))
                    object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                if (message.orientation != null && message.hasOwnProperty("orientation"))
                    object.orientation = options.enums === String ? $root.PB_Gui.ScreenOrientation[message.orientation] === undefined ? message.orientation : $root.PB_Gui.ScreenOrientation[message.orientation] : message.orientation;
                return object;
            };
    
            /**
             * Converts this ScreenFrame to JSON.
             * @function toJSON
             * @memberof PB_Gui.ScreenFrame
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ScreenFrame.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ScreenFrame
             * @function getTypeUrl
             * @memberof PB_Gui.ScreenFrame
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ScreenFrame.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gui.ScreenFrame";
            };
    
            return ScreenFrame;
        })();
    
        PB_Gui.StartScreenStreamRequest = (function() {
    
            /**
             * Properties of a StartScreenStreamRequest.
             * @memberof PB_Gui
             * @interface IStartScreenStreamRequest
             */
    
            /**
             * Constructs a new StartScreenStreamRequest.
             * @memberof PB_Gui
             * @classdesc Represents a StartScreenStreamRequest.
             * @implements IStartScreenStreamRequest
             * @constructor
             * @param {PB_Gui.IStartScreenStreamRequest=} [properties] Properties to set
             */
            function StartScreenStreamRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new StartScreenStreamRequest instance using the specified properties.
             * @function create
             * @memberof PB_Gui.StartScreenStreamRequest
             * @static
             * @param {PB_Gui.IStartScreenStreamRequest=} [properties] Properties to set
             * @returns {PB_Gui.StartScreenStreamRequest} StartScreenStreamRequest instance
             */
            StartScreenStreamRequest.create = function create(properties) {
                return new StartScreenStreamRequest(properties);
            };
    
            /**
             * Encodes the specified StartScreenStreamRequest message. Does not implicitly {@link PB_Gui.StartScreenStreamRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Gui.StartScreenStreamRequest
             * @static
             * @param {PB_Gui.IStartScreenStreamRequest} message StartScreenStreamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StartScreenStreamRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified StartScreenStreamRequest message, length delimited. Does not implicitly {@link PB_Gui.StartScreenStreamRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gui.StartScreenStreamRequest
             * @static
             * @param {PB_Gui.IStartScreenStreamRequest} message StartScreenStreamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StartScreenStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a StartScreenStreamRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gui.StartScreenStreamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gui.StartScreenStreamRequest} StartScreenStreamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StartScreenStreamRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gui.StartScreenStreamRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a StartScreenStreamRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gui.StartScreenStreamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gui.StartScreenStreamRequest} StartScreenStreamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StartScreenStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a StartScreenStreamRequest message.
             * @function verify
             * @memberof PB_Gui.StartScreenStreamRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StartScreenStreamRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a StartScreenStreamRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gui.StartScreenStreamRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gui.StartScreenStreamRequest} StartScreenStreamRequest
             */
            StartScreenStreamRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gui.StartScreenStreamRequest)
                    return object;
                return new $root.PB_Gui.StartScreenStreamRequest();
            };
    
            /**
             * Creates a plain object from a StartScreenStreamRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gui.StartScreenStreamRequest
             * @static
             * @param {PB_Gui.StartScreenStreamRequest} message StartScreenStreamRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StartScreenStreamRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this StartScreenStreamRequest to JSON.
             * @function toJSON
             * @memberof PB_Gui.StartScreenStreamRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StartScreenStreamRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for StartScreenStreamRequest
             * @function getTypeUrl
             * @memberof PB_Gui.StartScreenStreamRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            StartScreenStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gui.StartScreenStreamRequest";
            };
    
            return StartScreenStreamRequest;
        })();
    
        PB_Gui.StopScreenStreamRequest = (function() {
    
            /**
             * Properties of a StopScreenStreamRequest.
             * @memberof PB_Gui
             * @interface IStopScreenStreamRequest
             */
    
            /**
             * Constructs a new StopScreenStreamRequest.
             * @memberof PB_Gui
             * @classdesc Represents a StopScreenStreamRequest.
             * @implements IStopScreenStreamRequest
             * @constructor
             * @param {PB_Gui.IStopScreenStreamRequest=} [properties] Properties to set
             */
            function StopScreenStreamRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new StopScreenStreamRequest instance using the specified properties.
             * @function create
             * @memberof PB_Gui.StopScreenStreamRequest
             * @static
             * @param {PB_Gui.IStopScreenStreamRequest=} [properties] Properties to set
             * @returns {PB_Gui.StopScreenStreamRequest} StopScreenStreamRequest instance
             */
            StopScreenStreamRequest.create = function create(properties) {
                return new StopScreenStreamRequest(properties);
            };
    
            /**
             * Encodes the specified StopScreenStreamRequest message. Does not implicitly {@link PB_Gui.StopScreenStreamRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Gui.StopScreenStreamRequest
             * @static
             * @param {PB_Gui.IStopScreenStreamRequest} message StopScreenStreamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StopScreenStreamRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified StopScreenStreamRequest message, length delimited. Does not implicitly {@link PB_Gui.StopScreenStreamRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gui.StopScreenStreamRequest
             * @static
             * @param {PB_Gui.IStopScreenStreamRequest} message StopScreenStreamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StopScreenStreamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a StopScreenStreamRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gui.StopScreenStreamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gui.StopScreenStreamRequest} StopScreenStreamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StopScreenStreamRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gui.StopScreenStreamRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a StopScreenStreamRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gui.StopScreenStreamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gui.StopScreenStreamRequest} StopScreenStreamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StopScreenStreamRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a StopScreenStreamRequest message.
             * @function verify
             * @memberof PB_Gui.StopScreenStreamRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StopScreenStreamRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a StopScreenStreamRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gui.StopScreenStreamRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gui.StopScreenStreamRequest} StopScreenStreamRequest
             */
            StopScreenStreamRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gui.StopScreenStreamRequest)
                    return object;
                return new $root.PB_Gui.StopScreenStreamRequest();
            };
    
            /**
             * Creates a plain object from a StopScreenStreamRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gui.StopScreenStreamRequest
             * @static
             * @param {PB_Gui.StopScreenStreamRequest} message StopScreenStreamRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StopScreenStreamRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this StopScreenStreamRequest to JSON.
             * @function toJSON
             * @memberof PB_Gui.StopScreenStreamRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StopScreenStreamRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for StopScreenStreamRequest
             * @function getTypeUrl
             * @memberof PB_Gui.StopScreenStreamRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            StopScreenStreamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gui.StopScreenStreamRequest";
            };
    
            return StopScreenStreamRequest;
        })();
    
        PB_Gui.SendInputEventRequest = (function() {
    
            /**
             * Properties of a SendInputEventRequest.
             * @memberof PB_Gui
             * @interface ISendInputEventRequest
             * @property {PB_Gui.InputKey|null} [key] SendInputEventRequest key
             * @property {PB_Gui.InputType|null} [type] SendInputEventRequest type
             */
    
            /**
             * Constructs a new SendInputEventRequest.
             * @memberof PB_Gui
             * @classdesc Represents a SendInputEventRequest.
             * @implements ISendInputEventRequest
             * @constructor
             * @param {PB_Gui.ISendInputEventRequest=} [properties] Properties to set
             */
            function SendInputEventRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * SendInputEventRequest key.
             * @member {PB_Gui.InputKey} key
             * @memberof PB_Gui.SendInputEventRequest
             * @instance
             */
            SendInputEventRequest.prototype.key = 0;
    
            /**
             * SendInputEventRequest type.
             * @member {PB_Gui.InputType} type
             * @memberof PB_Gui.SendInputEventRequest
             * @instance
             */
            SendInputEventRequest.prototype.type = 0;
    
            /**
             * Creates a new SendInputEventRequest instance using the specified properties.
             * @function create
             * @memberof PB_Gui.SendInputEventRequest
             * @static
             * @param {PB_Gui.ISendInputEventRequest=} [properties] Properties to set
             * @returns {PB_Gui.SendInputEventRequest} SendInputEventRequest instance
             */
            SendInputEventRequest.create = function create(properties) {
                return new SendInputEventRequest(properties);
            };
    
            /**
             * Encodes the specified SendInputEventRequest message. Does not implicitly {@link PB_Gui.SendInputEventRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Gui.SendInputEventRequest
             * @static
             * @param {PB_Gui.ISendInputEventRequest} message SendInputEventRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SendInputEventRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.key);
                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                return writer;
            };
    
            /**
             * Encodes the specified SendInputEventRequest message, length delimited. Does not implicitly {@link PB_Gui.SendInputEventRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gui.SendInputEventRequest
             * @static
             * @param {PB_Gui.ISendInputEventRequest} message SendInputEventRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SendInputEventRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a SendInputEventRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gui.SendInputEventRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gui.SendInputEventRequest} SendInputEventRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SendInputEventRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gui.SendInputEventRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.key = reader.int32();
                            break;
                        }
                    case 2: {
                            message.type = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a SendInputEventRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gui.SendInputEventRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gui.SendInputEventRequest} SendInputEventRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SendInputEventRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a SendInputEventRequest message.
             * @function verify
             * @memberof PB_Gui.SendInputEventRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SendInputEventRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.key != null && message.hasOwnProperty("key"))
                    switch (message.key) {
                    default:
                        return "key: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    }
                if (message.type != null && message.hasOwnProperty("type"))
                    switch (message.type) {
                    default:
                        return "type: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    }
                return null;
            };
    
            /**
             * Creates a SendInputEventRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gui.SendInputEventRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gui.SendInputEventRequest} SendInputEventRequest
             */
            SendInputEventRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gui.SendInputEventRequest)
                    return object;
                var message = new $root.PB_Gui.SendInputEventRequest();
                switch (object.key) {
                default:
                    if (typeof object.key === "number") {
                        message.key = object.key;
                        break;
                    }
                    break;
                case "UP":
                case 0:
                    message.key = 0;
                    break;
                case "DOWN":
                case 1:
                    message.key = 1;
                    break;
                case "RIGHT":
                case 2:
                    message.key = 2;
                    break;
                case "LEFT":
                case 3:
                    message.key = 3;
                    break;
                case "OK":
                case 4:
                    message.key = 4;
                    break;
                case "BACK":
                case 5:
                    message.key = 5;
                    break;
                }
                switch (object.type) {
                default:
                    if (typeof object.type === "number") {
                        message.type = object.type;
                        break;
                    }
                    break;
                case "PRESS":
                case 0:
                    message.type = 0;
                    break;
                case "RELEASE":
                case 1:
                    message.type = 1;
                    break;
                case "SHORT":
                case 2:
                    message.type = 2;
                    break;
                case "LONG":
                case 3:
                    message.type = 3;
                    break;
                case "REPEAT":
                case 4:
                    message.type = 4;
                    break;
                }
                return message;
            };
    
            /**
             * Creates a plain object from a SendInputEventRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gui.SendInputEventRequest
             * @static
             * @param {PB_Gui.SendInputEventRequest} message SendInputEventRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SendInputEventRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.key = options.enums === String ? "UP" : 0;
                    object.type = options.enums === String ? "PRESS" : 0;
                }
                if (message.key != null && message.hasOwnProperty("key"))
                    object.key = options.enums === String ? $root.PB_Gui.InputKey[message.key] === undefined ? message.key : $root.PB_Gui.InputKey[message.key] : message.key;
                if (message.type != null && message.hasOwnProperty("type"))
                    object.type = options.enums === String ? $root.PB_Gui.InputType[message.type] === undefined ? message.type : $root.PB_Gui.InputType[message.type] : message.type;
                return object;
            };
    
            /**
             * Converts this SendInputEventRequest to JSON.
             * @function toJSON
             * @memberof PB_Gui.SendInputEventRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SendInputEventRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for SendInputEventRequest
             * @function getTypeUrl
             * @memberof PB_Gui.SendInputEventRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SendInputEventRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gui.SendInputEventRequest";
            };
    
            return SendInputEventRequest;
        })();
    
        PB_Gui.StartVirtualDisplayRequest = (function() {
    
            /**
             * Properties of a StartVirtualDisplayRequest.
             * @memberof PB_Gui
             * @interface IStartVirtualDisplayRequest
             * @property {PB_Gui.IScreenFrame|null} [firstFrame] StartVirtualDisplayRequest firstFrame
             * @property {boolean|null} [sendInput] StartVirtualDisplayRequest sendInput
             */
    
            /**
             * Constructs a new StartVirtualDisplayRequest.
             * @memberof PB_Gui
             * @classdesc Represents a StartVirtualDisplayRequest.
             * @implements IStartVirtualDisplayRequest
             * @constructor
             * @param {PB_Gui.IStartVirtualDisplayRequest=} [properties] Properties to set
             */
            function StartVirtualDisplayRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * StartVirtualDisplayRequest firstFrame.
             * @member {PB_Gui.IScreenFrame|null|undefined} firstFrame
             * @memberof PB_Gui.StartVirtualDisplayRequest
             * @instance
             */
            StartVirtualDisplayRequest.prototype.firstFrame = null;
    
            /**
             * StartVirtualDisplayRequest sendInput.
             * @member {boolean} sendInput
             * @memberof PB_Gui.StartVirtualDisplayRequest
             * @instance
             */
            StartVirtualDisplayRequest.prototype.sendInput = false;
    
            /**
             * Creates a new StartVirtualDisplayRequest instance using the specified properties.
             * @function create
             * @memberof PB_Gui.StartVirtualDisplayRequest
             * @static
             * @param {PB_Gui.IStartVirtualDisplayRequest=} [properties] Properties to set
             * @returns {PB_Gui.StartVirtualDisplayRequest} StartVirtualDisplayRequest instance
             */
            StartVirtualDisplayRequest.create = function create(properties) {
                return new StartVirtualDisplayRequest(properties);
            };
    
            /**
             * Encodes the specified StartVirtualDisplayRequest message. Does not implicitly {@link PB_Gui.StartVirtualDisplayRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Gui.StartVirtualDisplayRequest
             * @static
             * @param {PB_Gui.IStartVirtualDisplayRequest} message StartVirtualDisplayRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StartVirtualDisplayRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.firstFrame != null && Object.hasOwnProperty.call(message, "firstFrame"))
                    $root.PB_Gui.ScreenFrame.encode(message.firstFrame, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.sendInput != null && Object.hasOwnProperty.call(message, "sendInput"))
                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.sendInput);
                return writer;
            };
    
            /**
             * Encodes the specified StartVirtualDisplayRequest message, length delimited. Does not implicitly {@link PB_Gui.StartVirtualDisplayRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gui.StartVirtualDisplayRequest
             * @static
             * @param {PB_Gui.IStartVirtualDisplayRequest} message StartVirtualDisplayRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StartVirtualDisplayRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a StartVirtualDisplayRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gui.StartVirtualDisplayRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gui.StartVirtualDisplayRequest} StartVirtualDisplayRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StartVirtualDisplayRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gui.StartVirtualDisplayRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.firstFrame = $root.PB_Gui.ScreenFrame.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.sendInput = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a StartVirtualDisplayRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gui.StartVirtualDisplayRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gui.StartVirtualDisplayRequest} StartVirtualDisplayRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StartVirtualDisplayRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a StartVirtualDisplayRequest message.
             * @function verify
             * @memberof PB_Gui.StartVirtualDisplayRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StartVirtualDisplayRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.firstFrame != null && message.hasOwnProperty("firstFrame")) {
                    var error = $root.PB_Gui.ScreenFrame.verify(message.firstFrame);
                    if (error)
                        return "firstFrame." + error;
                }
                if (message.sendInput != null && message.hasOwnProperty("sendInput"))
                    if (typeof message.sendInput !== "boolean")
                        return "sendInput: boolean expected";
                return null;
            };
    
            /**
             * Creates a StartVirtualDisplayRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gui.StartVirtualDisplayRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gui.StartVirtualDisplayRequest} StartVirtualDisplayRequest
             */
            StartVirtualDisplayRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gui.StartVirtualDisplayRequest)
                    return object;
                var message = new $root.PB_Gui.StartVirtualDisplayRequest();
                if (object.firstFrame != null) {
                    if (typeof object.firstFrame !== "object")
                        throw TypeError(".PB_Gui.StartVirtualDisplayRequest.firstFrame: object expected");
                    message.firstFrame = $root.PB_Gui.ScreenFrame.fromObject(object.firstFrame);
                }
                if (object.sendInput != null)
                    message.sendInput = Boolean(object.sendInput);
                return message;
            };
    
            /**
             * Creates a plain object from a StartVirtualDisplayRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gui.StartVirtualDisplayRequest
             * @static
             * @param {PB_Gui.StartVirtualDisplayRequest} message StartVirtualDisplayRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StartVirtualDisplayRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.firstFrame = null;
                    object.sendInput = false;
                }
                if (message.firstFrame != null && message.hasOwnProperty("firstFrame"))
                    object.firstFrame = $root.PB_Gui.ScreenFrame.toObject(message.firstFrame, options);
                if (message.sendInput != null && message.hasOwnProperty("sendInput"))
                    object.sendInput = message.sendInput;
                return object;
            };
    
            /**
             * Converts this StartVirtualDisplayRequest to JSON.
             * @function toJSON
             * @memberof PB_Gui.StartVirtualDisplayRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StartVirtualDisplayRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for StartVirtualDisplayRequest
             * @function getTypeUrl
             * @memberof PB_Gui.StartVirtualDisplayRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            StartVirtualDisplayRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gui.StartVirtualDisplayRequest";
            };
    
            return StartVirtualDisplayRequest;
        })();
    
        PB_Gui.StopVirtualDisplayRequest = (function() {
    
            /**
             * Properties of a StopVirtualDisplayRequest.
             * @memberof PB_Gui
             * @interface IStopVirtualDisplayRequest
             */
    
            /**
             * Constructs a new StopVirtualDisplayRequest.
             * @memberof PB_Gui
             * @classdesc Represents a StopVirtualDisplayRequest.
             * @implements IStopVirtualDisplayRequest
             * @constructor
             * @param {PB_Gui.IStopVirtualDisplayRequest=} [properties] Properties to set
             */
            function StopVirtualDisplayRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new StopVirtualDisplayRequest instance using the specified properties.
             * @function create
             * @memberof PB_Gui.StopVirtualDisplayRequest
             * @static
             * @param {PB_Gui.IStopVirtualDisplayRequest=} [properties] Properties to set
             * @returns {PB_Gui.StopVirtualDisplayRequest} StopVirtualDisplayRequest instance
             */
            StopVirtualDisplayRequest.create = function create(properties) {
                return new StopVirtualDisplayRequest(properties);
            };
    
            /**
             * Encodes the specified StopVirtualDisplayRequest message. Does not implicitly {@link PB_Gui.StopVirtualDisplayRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Gui.StopVirtualDisplayRequest
             * @static
             * @param {PB_Gui.IStopVirtualDisplayRequest} message StopVirtualDisplayRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StopVirtualDisplayRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified StopVirtualDisplayRequest message, length delimited. Does not implicitly {@link PB_Gui.StopVirtualDisplayRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gui.StopVirtualDisplayRequest
             * @static
             * @param {PB_Gui.IStopVirtualDisplayRequest} message StopVirtualDisplayRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StopVirtualDisplayRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a StopVirtualDisplayRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gui.StopVirtualDisplayRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gui.StopVirtualDisplayRequest} StopVirtualDisplayRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StopVirtualDisplayRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gui.StopVirtualDisplayRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a StopVirtualDisplayRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gui.StopVirtualDisplayRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gui.StopVirtualDisplayRequest} StopVirtualDisplayRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StopVirtualDisplayRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a StopVirtualDisplayRequest message.
             * @function verify
             * @memberof PB_Gui.StopVirtualDisplayRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StopVirtualDisplayRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a StopVirtualDisplayRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gui.StopVirtualDisplayRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gui.StopVirtualDisplayRequest} StopVirtualDisplayRequest
             */
            StopVirtualDisplayRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gui.StopVirtualDisplayRequest)
                    return object;
                return new $root.PB_Gui.StopVirtualDisplayRequest();
            };
    
            /**
             * Creates a plain object from a StopVirtualDisplayRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gui.StopVirtualDisplayRequest
             * @static
             * @param {PB_Gui.StopVirtualDisplayRequest} message StopVirtualDisplayRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StopVirtualDisplayRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this StopVirtualDisplayRequest to JSON.
             * @function toJSON
             * @memberof PB_Gui.StopVirtualDisplayRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StopVirtualDisplayRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for StopVirtualDisplayRequest
             * @function getTypeUrl
             * @memberof PB_Gui.StopVirtualDisplayRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            StopVirtualDisplayRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gui.StopVirtualDisplayRequest";
            };
    
            return StopVirtualDisplayRequest;
        })();
    
        return PB_Gui;
    })();
    
    $root.PB_Gpio = (function() {
    
        /**
         * Namespace PB_Gpio.
         * @exports PB_Gpio
         * @namespace
         */
        var PB_Gpio = {};
    
        /**
         * GpioPin enum.
         * @name PB_Gpio.GpioPin
         * @enum {number}
         * @property {number} PC0=0 PC0 value
         * @property {number} PC1=1 PC1 value
         * @property {number} PC3=2 PC3 value
         * @property {number} PB2=3 PB2 value
         * @property {number} PB3=4 PB3 value
         * @property {number} PA4=5 PA4 value
         * @property {number} PA6=6 PA6 value
         * @property {number} PA7=7 PA7 value
         */
        PB_Gpio.GpioPin = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "PC0"] = 0;
            values[valuesById[1] = "PC1"] = 1;
            values[valuesById[2] = "PC3"] = 2;
            values[valuesById[3] = "PB2"] = 3;
            values[valuesById[4] = "PB3"] = 4;
            values[valuesById[5] = "PA4"] = 5;
            values[valuesById[6] = "PA6"] = 6;
            values[valuesById[7] = "PA7"] = 7;
            return values;
        })();
    
        /**
         * GpioPinMode enum.
         * @name PB_Gpio.GpioPinMode
         * @enum {number}
         * @property {number} OUTPUT=0 OUTPUT value
         * @property {number} INPUT=1 INPUT value
         */
        PB_Gpio.GpioPinMode = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "OUTPUT"] = 0;
            values[valuesById[1] = "INPUT"] = 1;
            return values;
        })();
    
        /**
         * GpioInputPull enum.
         * @name PB_Gpio.GpioInputPull
         * @enum {number}
         * @property {number} NO=0 NO value
         * @property {number} UP=1 UP value
         * @property {number} DOWN=2 DOWN value
         */
        PB_Gpio.GpioInputPull = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "NO"] = 0;
            values[valuesById[1] = "UP"] = 1;
            values[valuesById[2] = "DOWN"] = 2;
            return values;
        })();
    
        /**
         * GpioOtgMode enum.
         * @name PB_Gpio.GpioOtgMode
         * @enum {number}
         * @property {number} OFF=0 OFF value
         * @property {number} ON=1 ON value
         */
        PB_Gpio.GpioOtgMode = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "OFF"] = 0;
            values[valuesById[1] = "ON"] = 1;
            return values;
        })();
    
        PB_Gpio.SetPinMode = (function() {
    
            /**
             * Properties of a SetPinMode.
             * @memberof PB_Gpio
             * @interface ISetPinMode
             * @property {PB_Gpio.GpioPin|null} [pin] SetPinMode pin
             * @property {PB_Gpio.GpioPinMode|null} [mode] SetPinMode mode
             */
    
            /**
             * Constructs a new SetPinMode.
             * @memberof PB_Gpio
             * @classdesc Represents a SetPinMode.
             * @implements ISetPinMode
             * @constructor
             * @param {PB_Gpio.ISetPinMode=} [properties] Properties to set
             */
            function SetPinMode(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * SetPinMode pin.
             * @member {PB_Gpio.GpioPin} pin
             * @memberof PB_Gpio.SetPinMode
             * @instance
             */
            SetPinMode.prototype.pin = 0;
    
            /**
             * SetPinMode mode.
             * @member {PB_Gpio.GpioPinMode} mode
             * @memberof PB_Gpio.SetPinMode
             * @instance
             */
            SetPinMode.prototype.mode = 0;
    
            /**
             * Creates a new SetPinMode instance using the specified properties.
             * @function create
             * @memberof PB_Gpio.SetPinMode
             * @static
             * @param {PB_Gpio.ISetPinMode=} [properties] Properties to set
             * @returns {PB_Gpio.SetPinMode} SetPinMode instance
             */
            SetPinMode.create = function create(properties) {
                return new SetPinMode(properties);
            };
    
            /**
             * Encodes the specified SetPinMode message. Does not implicitly {@link PB_Gpio.SetPinMode.verify|verify} messages.
             * @function encode
             * @memberof PB_Gpio.SetPinMode
             * @static
             * @param {PB_Gpio.ISetPinMode} message SetPinMode message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SetPinMode.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.pin != null && Object.hasOwnProperty.call(message, "pin"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.pin);
                if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.mode);
                return writer;
            };
    
            /**
             * Encodes the specified SetPinMode message, length delimited. Does not implicitly {@link PB_Gpio.SetPinMode.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gpio.SetPinMode
             * @static
             * @param {PB_Gpio.ISetPinMode} message SetPinMode message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SetPinMode.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a SetPinMode message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gpio.SetPinMode
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gpio.SetPinMode} SetPinMode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SetPinMode.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gpio.SetPinMode();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.pin = reader.int32();
                            break;
                        }
                    case 2: {
                            message.mode = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a SetPinMode message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gpio.SetPinMode
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gpio.SetPinMode} SetPinMode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SetPinMode.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a SetPinMode message.
             * @function verify
             * @memberof PB_Gpio.SetPinMode
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SetPinMode.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.pin != null && message.hasOwnProperty("pin"))
                    switch (message.pin) {
                    default:
                        return "pin: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                        break;
                    }
                if (message.mode != null && message.hasOwnProperty("mode"))
                    switch (message.mode) {
                    default:
                        return "mode: enum value expected";
                    case 0:
                    case 1:
                        break;
                    }
                return null;
            };
    
            /**
             * Creates a SetPinMode message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gpio.SetPinMode
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gpio.SetPinMode} SetPinMode
             */
            SetPinMode.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gpio.SetPinMode)
                    return object;
                var message = new $root.PB_Gpio.SetPinMode();
                switch (object.pin) {
                default:
                    if (typeof object.pin === "number") {
                        message.pin = object.pin;
                        break;
                    }
                    break;
                case "PC0":
                case 0:
                    message.pin = 0;
                    break;
                case "PC1":
                case 1:
                    message.pin = 1;
                    break;
                case "PC3":
                case 2:
                    message.pin = 2;
                    break;
                case "PB2":
                case 3:
                    message.pin = 3;
                    break;
                case "PB3":
                case 4:
                    message.pin = 4;
                    break;
                case "PA4":
                case 5:
                    message.pin = 5;
                    break;
                case "PA6":
                case 6:
                    message.pin = 6;
                    break;
                case "PA7":
                case 7:
                    message.pin = 7;
                    break;
                }
                switch (object.mode) {
                default:
                    if (typeof object.mode === "number") {
                        message.mode = object.mode;
                        break;
                    }
                    break;
                case "OUTPUT":
                case 0:
                    message.mode = 0;
                    break;
                case "INPUT":
                case 1:
                    message.mode = 1;
                    break;
                }
                return message;
            };
    
            /**
             * Creates a plain object from a SetPinMode message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gpio.SetPinMode
             * @static
             * @param {PB_Gpio.SetPinMode} message SetPinMode
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SetPinMode.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.pin = options.enums === String ? "PC0" : 0;
                    object.mode = options.enums === String ? "OUTPUT" : 0;
                }
                if (message.pin != null && message.hasOwnProperty("pin"))
                    object.pin = options.enums === String ? $root.PB_Gpio.GpioPin[message.pin] === undefined ? message.pin : $root.PB_Gpio.GpioPin[message.pin] : message.pin;
                if (message.mode != null && message.hasOwnProperty("mode"))
                    object.mode = options.enums === String ? $root.PB_Gpio.GpioPinMode[message.mode] === undefined ? message.mode : $root.PB_Gpio.GpioPinMode[message.mode] : message.mode;
                return object;
            };
    
            /**
             * Converts this SetPinMode to JSON.
             * @function toJSON
             * @memberof PB_Gpio.SetPinMode
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SetPinMode.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for SetPinMode
             * @function getTypeUrl
             * @memberof PB_Gpio.SetPinMode
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SetPinMode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gpio.SetPinMode";
            };
    
            return SetPinMode;
        })();
    
        PB_Gpio.SetInputPull = (function() {
    
            /**
             * Properties of a SetInputPull.
             * @memberof PB_Gpio
             * @interface ISetInputPull
             * @property {PB_Gpio.GpioPin|null} [pin] SetInputPull pin
             * @property {PB_Gpio.GpioInputPull|null} [pullMode] SetInputPull pullMode
             */
    
            /**
             * Constructs a new SetInputPull.
             * @memberof PB_Gpio
             * @classdesc Represents a SetInputPull.
             * @implements ISetInputPull
             * @constructor
             * @param {PB_Gpio.ISetInputPull=} [properties] Properties to set
             */
            function SetInputPull(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * SetInputPull pin.
             * @member {PB_Gpio.GpioPin} pin
             * @memberof PB_Gpio.SetInputPull
             * @instance
             */
            SetInputPull.prototype.pin = 0;
    
            /**
             * SetInputPull pullMode.
             * @member {PB_Gpio.GpioInputPull} pullMode
             * @memberof PB_Gpio.SetInputPull
             * @instance
             */
            SetInputPull.prototype.pullMode = 0;
    
            /**
             * Creates a new SetInputPull instance using the specified properties.
             * @function create
             * @memberof PB_Gpio.SetInputPull
             * @static
             * @param {PB_Gpio.ISetInputPull=} [properties] Properties to set
             * @returns {PB_Gpio.SetInputPull} SetInputPull instance
             */
            SetInputPull.create = function create(properties) {
                return new SetInputPull(properties);
            };
    
            /**
             * Encodes the specified SetInputPull message. Does not implicitly {@link PB_Gpio.SetInputPull.verify|verify} messages.
             * @function encode
             * @memberof PB_Gpio.SetInputPull
             * @static
             * @param {PB_Gpio.ISetInputPull} message SetInputPull message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SetInputPull.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.pin != null && Object.hasOwnProperty.call(message, "pin"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.pin);
                if (message.pullMode != null && Object.hasOwnProperty.call(message, "pullMode"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pullMode);
                return writer;
            };
    
            /**
             * Encodes the specified SetInputPull message, length delimited. Does not implicitly {@link PB_Gpio.SetInputPull.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gpio.SetInputPull
             * @static
             * @param {PB_Gpio.ISetInputPull} message SetInputPull message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SetInputPull.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a SetInputPull message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gpio.SetInputPull
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gpio.SetInputPull} SetInputPull
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SetInputPull.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gpio.SetInputPull();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.pin = reader.int32();
                            break;
                        }
                    case 2: {
                            message.pullMode = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a SetInputPull message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gpio.SetInputPull
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gpio.SetInputPull} SetInputPull
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SetInputPull.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a SetInputPull message.
             * @function verify
             * @memberof PB_Gpio.SetInputPull
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SetInputPull.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.pin != null && message.hasOwnProperty("pin"))
                    switch (message.pin) {
                    default:
                        return "pin: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                        break;
                    }
                if (message.pullMode != null && message.hasOwnProperty("pullMode"))
                    switch (message.pullMode) {
                    default:
                        return "pullMode: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                        break;
                    }
                return null;
            };
    
            /**
             * Creates a SetInputPull message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gpio.SetInputPull
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gpio.SetInputPull} SetInputPull
             */
            SetInputPull.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gpio.SetInputPull)
                    return object;
                var message = new $root.PB_Gpio.SetInputPull();
                switch (object.pin) {
                default:
                    if (typeof object.pin === "number") {
                        message.pin = object.pin;
                        break;
                    }
                    break;
                case "PC0":
                case 0:
                    message.pin = 0;
                    break;
                case "PC1":
                case 1:
                    message.pin = 1;
                    break;
                case "PC3":
                case 2:
                    message.pin = 2;
                    break;
                case "PB2":
                case 3:
                    message.pin = 3;
                    break;
                case "PB3":
                case 4:
                    message.pin = 4;
                    break;
                case "PA4":
                case 5:
                    message.pin = 5;
                    break;
                case "PA6":
                case 6:
                    message.pin = 6;
                    break;
                case "PA7":
                case 7:
                    message.pin = 7;
                    break;
                }
                switch (object.pullMode) {
                default:
                    if (typeof object.pullMode === "number") {
                        message.pullMode = object.pullMode;
                        break;
                    }
                    break;
                case "NO":
                case 0:
                    message.pullMode = 0;
                    break;
                case "UP":
                case 1:
                    message.pullMode = 1;
                    break;
                case "DOWN":
                case 2:
                    message.pullMode = 2;
                    break;
                }
                return message;
            };
    
            /**
             * Creates a plain object from a SetInputPull message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gpio.SetInputPull
             * @static
             * @param {PB_Gpio.SetInputPull} message SetInputPull
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SetInputPull.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.pin = options.enums === String ? "PC0" : 0;
                    object.pullMode = options.enums === String ? "NO" : 0;
                }
                if (message.pin != null && message.hasOwnProperty("pin"))
                    object.pin = options.enums === String ? $root.PB_Gpio.GpioPin[message.pin] === undefined ? message.pin : $root.PB_Gpio.GpioPin[message.pin] : message.pin;
                if (message.pullMode != null && message.hasOwnProperty("pullMode"))
                    object.pullMode = options.enums === String ? $root.PB_Gpio.GpioInputPull[message.pullMode] === undefined ? message.pullMode : $root.PB_Gpio.GpioInputPull[message.pullMode] : message.pullMode;
                return object;
            };
    
            /**
             * Converts this SetInputPull to JSON.
             * @function toJSON
             * @memberof PB_Gpio.SetInputPull
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SetInputPull.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for SetInputPull
             * @function getTypeUrl
             * @memberof PB_Gpio.SetInputPull
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SetInputPull.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gpio.SetInputPull";
            };
    
            return SetInputPull;
        })();
    
        PB_Gpio.GetPinMode = (function() {
    
            /**
             * Properties of a GetPinMode.
             * @memberof PB_Gpio
             * @interface IGetPinMode
             * @property {PB_Gpio.GpioPin|null} [pin] GetPinMode pin
             */
    
            /**
             * Constructs a new GetPinMode.
             * @memberof PB_Gpio
             * @classdesc Represents a GetPinMode.
             * @implements IGetPinMode
             * @constructor
             * @param {PB_Gpio.IGetPinMode=} [properties] Properties to set
             */
            function GetPinMode(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * GetPinMode pin.
             * @member {PB_Gpio.GpioPin} pin
             * @memberof PB_Gpio.GetPinMode
             * @instance
             */
            GetPinMode.prototype.pin = 0;
    
            /**
             * Creates a new GetPinMode instance using the specified properties.
             * @function create
             * @memberof PB_Gpio.GetPinMode
             * @static
             * @param {PB_Gpio.IGetPinMode=} [properties] Properties to set
             * @returns {PB_Gpio.GetPinMode} GetPinMode instance
             */
            GetPinMode.create = function create(properties) {
                return new GetPinMode(properties);
            };
    
            /**
             * Encodes the specified GetPinMode message. Does not implicitly {@link PB_Gpio.GetPinMode.verify|verify} messages.
             * @function encode
             * @memberof PB_Gpio.GetPinMode
             * @static
             * @param {PB_Gpio.IGetPinMode} message GetPinMode message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetPinMode.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.pin != null && Object.hasOwnProperty.call(message, "pin"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.pin);
                return writer;
            };
    
            /**
             * Encodes the specified GetPinMode message, length delimited. Does not implicitly {@link PB_Gpio.GetPinMode.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gpio.GetPinMode
             * @static
             * @param {PB_Gpio.IGetPinMode} message GetPinMode message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetPinMode.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a GetPinMode message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gpio.GetPinMode
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gpio.GetPinMode} GetPinMode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetPinMode.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gpio.GetPinMode();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.pin = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a GetPinMode message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gpio.GetPinMode
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gpio.GetPinMode} GetPinMode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetPinMode.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a GetPinMode message.
             * @function verify
             * @memberof PB_Gpio.GetPinMode
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetPinMode.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.pin != null && message.hasOwnProperty("pin"))
                    switch (message.pin) {
                    default:
                        return "pin: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                        break;
                    }
                return null;
            };
    
            /**
             * Creates a GetPinMode message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gpio.GetPinMode
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gpio.GetPinMode} GetPinMode
             */
            GetPinMode.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gpio.GetPinMode)
                    return object;
                var message = new $root.PB_Gpio.GetPinMode();
                switch (object.pin) {
                default:
                    if (typeof object.pin === "number") {
                        message.pin = object.pin;
                        break;
                    }
                    break;
                case "PC0":
                case 0:
                    message.pin = 0;
                    break;
                case "PC1":
                case 1:
                    message.pin = 1;
                    break;
                case "PC3":
                case 2:
                    message.pin = 2;
                    break;
                case "PB2":
                case 3:
                    message.pin = 3;
                    break;
                case "PB3":
                case 4:
                    message.pin = 4;
                    break;
                case "PA4":
                case 5:
                    message.pin = 5;
                    break;
                case "PA6":
                case 6:
                    message.pin = 6;
                    break;
                case "PA7":
                case 7:
                    message.pin = 7;
                    break;
                }
                return message;
            };
    
            /**
             * Creates a plain object from a GetPinMode message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gpio.GetPinMode
             * @static
             * @param {PB_Gpio.GetPinMode} message GetPinMode
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetPinMode.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.pin = options.enums === String ? "PC0" : 0;
                if (message.pin != null && message.hasOwnProperty("pin"))
                    object.pin = options.enums === String ? $root.PB_Gpio.GpioPin[message.pin] === undefined ? message.pin : $root.PB_Gpio.GpioPin[message.pin] : message.pin;
                return object;
            };
    
            /**
             * Converts this GetPinMode to JSON.
             * @function toJSON
             * @memberof PB_Gpio.GetPinMode
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetPinMode.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for GetPinMode
             * @function getTypeUrl
             * @memberof PB_Gpio.GetPinMode
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetPinMode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gpio.GetPinMode";
            };
    
            return GetPinMode;
        })();
    
        PB_Gpio.GetPinModeResponse = (function() {
    
            /**
             * Properties of a GetPinModeResponse.
             * @memberof PB_Gpio
             * @interface IGetPinModeResponse
             * @property {PB_Gpio.GpioPinMode|null} [mode] GetPinModeResponse mode
             */
    
            /**
             * Constructs a new GetPinModeResponse.
             * @memberof PB_Gpio
             * @classdesc Represents a GetPinModeResponse.
             * @implements IGetPinModeResponse
             * @constructor
             * @param {PB_Gpio.IGetPinModeResponse=} [properties] Properties to set
             */
            function GetPinModeResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * GetPinModeResponse mode.
             * @member {PB_Gpio.GpioPinMode} mode
             * @memberof PB_Gpio.GetPinModeResponse
             * @instance
             */
            GetPinModeResponse.prototype.mode = 0;
    
            /**
             * Creates a new GetPinModeResponse instance using the specified properties.
             * @function create
             * @memberof PB_Gpio.GetPinModeResponse
             * @static
             * @param {PB_Gpio.IGetPinModeResponse=} [properties] Properties to set
             * @returns {PB_Gpio.GetPinModeResponse} GetPinModeResponse instance
             */
            GetPinModeResponse.create = function create(properties) {
                return new GetPinModeResponse(properties);
            };
    
            /**
             * Encodes the specified GetPinModeResponse message. Does not implicitly {@link PB_Gpio.GetPinModeResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_Gpio.GetPinModeResponse
             * @static
             * @param {PB_Gpio.IGetPinModeResponse} message GetPinModeResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetPinModeResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.mode);
                return writer;
            };
    
            /**
             * Encodes the specified GetPinModeResponse message, length delimited. Does not implicitly {@link PB_Gpio.GetPinModeResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gpio.GetPinModeResponse
             * @static
             * @param {PB_Gpio.IGetPinModeResponse} message GetPinModeResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetPinModeResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a GetPinModeResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gpio.GetPinModeResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gpio.GetPinModeResponse} GetPinModeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetPinModeResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gpio.GetPinModeResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.mode = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a GetPinModeResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gpio.GetPinModeResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gpio.GetPinModeResponse} GetPinModeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetPinModeResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a GetPinModeResponse message.
             * @function verify
             * @memberof PB_Gpio.GetPinModeResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetPinModeResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.mode != null && message.hasOwnProperty("mode"))
                    switch (message.mode) {
                    default:
                        return "mode: enum value expected";
                    case 0:
                    case 1:
                        break;
                    }
                return null;
            };
    
            /**
             * Creates a GetPinModeResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gpio.GetPinModeResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gpio.GetPinModeResponse} GetPinModeResponse
             */
            GetPinModeResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gpio.GetPinModeResponse)
                    return object;
                var message = new $root.PB_Gpio.GetPinModeResponse();
                switch (object.mode) {
                default:
                    if (typeof object.mode === "number") {
                        message.mode = object.mode;
                        break;
                    }
                    break;
                case "OUTPUT":
                case 0:
                    message.mode = 0;
                    break;
                case "INPUT":
                case 1:
                    message.mode = 1;
                    break;
                }
                return message;
            };
    
            /**
             * Creates a plain object from a GetPinModeResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gpio.GetPinModeResponse
             * @static
             * @param {PB_Gpio.GetPinModeResponse} message GetPinModeResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetPinModeResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.mode = options.enums === String ? "OUTPUT" : 0;
                if (message.mode != null && message.hasOwnProperty("mode"))
                    object.mode = options.enums === String ? $root.PB_Gpio.GpioPinMode[message.mode] === undefined ? message.mode : $root.PB_Gpio.GpioPinMode[message.mode] : message.mode;
                return object;
            };
    
            /**
             * Converts this GetPinModeResponse to JSON.
             * @function toJSON
             * @memberof PB_Gpio.GetPinModeResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetPinModeResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for GetPinModeResponse
             * @function getTypeUrl
             * @memberof PB_Gpio.GetPinModeResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetPinModeResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gpio.GetPinModeResponse";
            };
    
            return GetPinModeResponse;
        })();
    
        PB_Gpio.ReadPin = (function() {
    
            /**
             * Properties of a ReadPin.
             * @memberof PB_Gpio
             * @interface IReadPin
             * @property {PB_Gpio.GpioPin|null} [pin] ReadPin pin
             */
    
            /**
             * Constructs a new ReadPin.
             * @memberof PB_Gpio
             * @classdesc Represents a ReadPin.
             * @implements IReadPin
             * @constructor
             * @param {PB_Gpio.IReadPin=} [properties] Properties to set
             */
            function ReadPin(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ReadPin pin.
             * @member {PB_Gpio.GpioPin} pin
             * @memberof PB_Gpio.ReadPin
             * @instance
             */
            ReadPin.prototype.pin = 0;
    
            /**
             * Creates a new ReadPin instance using the specified properties.
             * @function create
             * @memberof PB_Gpio.ReadPin
             * @static
             * @param {PB_Gpio.IReadPin=} [properties] Properties to set
             * @returns {PB_Gpio.ReadPin} ReadPin instance
             */
            ReadPin.create = function create(properties) {
                return new ReadPin(properties);
            };
    
            /**
             * Encodes the specified ReadPin message. Does not implicitly {@link PB_Gpio.ReadPin.verify|verify} messages.
             * @function encode
             * @memberof PB_Gpio.ReadPin
             * @static
             * @param {PB_Gpio.IReadPin} message ReadPin message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReadPin.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.pin != null && Object.hasOwnProperty.call(message, "pin"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.pin);
                return writer;
            };
    
            /**
             * Encodes the specified ReadPin message, length delimited. Does not implicitly {@link PB_Gpio.ReadPin.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gpio.ReadPin
             * @static
             * @param {PB_Gpio.IReadPin} message ReadPin message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReadPin.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ReadPin message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gpio.ReadPin
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gpio.ReadPin} ReadPin
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReadPin.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gpio.ReadPin();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.pin = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ReadPin message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gpio.ReadPin
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gpio.ReadPin} ReadPin
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReadPin.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ReadPin message.
             * @function verify
             * @memberof PB_Gpio.ReadPin
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ReadPin.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.pin != null && message.hasOwnProperty("pin"))
                    switch (message.pin) {
                    default:
                        return "pin: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                        break;
                    }
                return null;
            };
    
            /**
             * Creates a ReadPin message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gpio.ReadPin
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gpio.ReadPin} ReadPin
             */
            ReadPin.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gpio.ReadPin)
                    return object;
                var message = new $root.PB_Gpio.ReadPin();
                switch (object.pin) {
                default:
                    if (typeof object.pin === "number") {
                        message.pin = object.pin;
                        break;
                    }
                    break;
                case "PC0":
                case 0:
                    message.pin = 0;
                    break;
                case "PC1":
                case 1:
                    message.pin = 1;
                    break;
                case "PC3":
                case 2:
                    message.pin = 2;
                    break;
                case "PB2":
                case 3:
                    message.pin = 3;
                    break;
                case "PB3":
                case 4:
                    message.pin = 4;
                    break;
                case "PA4":
                case 5:
                    message.pin = 5;
                    break;
                case "PA6":
                case 6:
                    message.pin = 6;
                    break;
                case "PA7":
                case 7:
                    message.pin = 7;
                    break;
                }
                return message;
            };
    
            /**
             * Creates a plain object from a ReadPin message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gpio.ReadPin
             * @static
             * @param {PB_Gpio.ReadPin} message ReadPin
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ReadPin.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.pin = options.enums === String ? "PC0" : 0;
                if (message.pin != null && message.hasOwnProperty("pin"))
                    object.pin = options.enums === String ? $root.PB_Gpio.GpioPin[message.pin] === undefined ? message.pin : $root.PB_Gpio.GpioPin[message.pin] : message.pin;
                return object;
            };
    
            /**
             * Converts this ReadPin to JSON.
             * @function toJSON
             * @memberof PB_Gpio.ReadPin
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ReadPin.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ReadPin
             * @function getTypeUrl
             * @memberof PB_Gpio.ReadPin
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ReadPin.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gpio.ReadPin";
            };
    
            return ReadPin;
        })();
    
        PB_Gpio.ReadPinResponse = (function() {
    
            /**
             * Properties of a ReadPinResponse.
             * @memberof PB_Gpio
             * @interface IReadPinResponse
             * @property {number|null} [value] ReadPinResponse value
             */
    
            /**
             * Constructs a new ReadPinResponse.
             * @memberof PB_Gpio
             * @classdesc Represents a ReadPinResponse.
             * @implements IReadPinResponse
             * @constructor
             * @param {PB_Gpio.IReadPinResponse=} [properties] Properties to set
             */
            function ReadPinResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ReadPinResponse value.
             * @member {number} value
             * @memberof PB_Gpio.ReadPinResponse
             * @instance
             */
            ReadPinResponse.prototype.value = 0;
    
            /**
             * Creates a new ReadPinResponse instance using the specified properties.
             * @function create
             * @memberof PB_Gpio.ReadPinResponse
             * @static
             * @param {PB_Gpio.IReadPinResponse=} [properties] Properties to set
             * @returns {PB_Gpio.ReadPinResponse} ReadPinResponse instance
             */
            ReadPinResponse.create = function create(properties) {
                return new ReadPinResponse(properties);
            };
    
            /**
             * Encodes the specified ReadPinResponse message. Does not implicitly {@link PB_Gpio.ReadPinResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_Gpio.ReadPinResponse
             * @static
             * @param {PB_Gpio.IReadPinResponse} message ReadPinResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReadPinResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified ReadPinResponse message, length delimited. Does not implicitly {@link PB_Gpio.ReadPinResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gpio.ReadPinResponse
             * @static
             * @param {PB_Gpio.IReadPinResponse} message ReadPinResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReadPinResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ReadPinResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gpio.ReadPinResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gpio.ReadPinResponse} ReadPinResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReadPinResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gpio.ReadPinResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 2: {
                            message.value = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ReadPinResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gpio.ReadPinResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gpio.ReadPinResponse} ReadPinResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReadPinResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ReadPinResponse message.
             * @function verify
             * @memberof PB_Gpio.ReadPinResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ReadPinResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isInteger(message.value))
                        return "value: integer expected";
                return null;
            };
    
            /**
             * Creates a ReadPinResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gpio.ReadPinResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gpio.ReadPinResponse} ReadPinResponse
             */
            ReadPinResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gpio.ReadPinResponse)
                    return object;
                var message = new $root.PB_Gpio.ReadPinResponse();
                if (object.value != null)
                    message.value = object.value >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a ReadPinResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gpio.ReadPinResponse
             * @static
             * @param {PB_Gpio.ReadPinResponse} message ReadPinResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ReadPinResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.value = 0;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };
    
            /**
             * Converts this ReadPinResponse to JSON.
             * @function toJSON
             * @memberof PB_Gpio.ReadPinResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ReadPinResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ReadPinResponse
             * @function getTypeUrl
             * @memberof PB_Gpio.ReadPinResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ReadPinResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gpio.ReadPinResponse";
            };
    
            return ReadPinResponse;
        })();
    
        PB_Gpio.WritePin = (function() {
    
            /**
             * Properties of a WritePin.
             * @memberof PB_Gpio
             * @interface IWritePin
             * @property {PB_Gpio.GpioPin|null} [pin] WritePin pin
             * @property {number|null} [value] WritePin value
             */
    
            /**
             * Constructs a new WritePin.
             * @memberof PB_Gpio
             * @classdesc Represents a WritePin.
             * @implements IWritePin
             * @constructor
             * @param {PB_Gpio.IWritePin=} [properties] Properties to set
             */
            function WritePin(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * WritePin pin.
             * @member {PB_Gpio.GpioPin} pin
             * @memberof PB_Gpio.WritePin
             * @instance
             */
            WritePin.prototype.pin = 0;
    
            /**
             * WritePin value.
             * @member {number} value
             * @memberof PB_Gpio.WritePin
             * @instance
             */
            WritePin.prototype.value = 0;
    
            /**
             * Creates a new WritePin instance using the specified properties.
             * @function create
             * @memberof PB_Gpio.WritePin
             * @static
             * @param {PB_Gpio.IWritePin=} [properties] Properties to set
             * @returns {PB_Gpio.WritePin} WritePin instance
             */
            WritePin.create = function create(properties) {
                return new WritePin(properties);
            };
    
            /**
             * Encodes the specified WritePin message. Does not implicitly {@link PB_Gpio.WritePin.verify|verify} messages.
             * @function encode
             * @memberof PB_Gpio.WritePin
             * @static
             * @param {PB_Gpio.IWritePin} message WritePin message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WritePin.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.pin != null && Object.hasOwnProperty.call(message, "pin"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.pin);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified WritePin message, length delimited. Does not implicitly {@link PB_Gpio.WritePin.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gpio.WritePin
             * @static
             * @param {PB_Gpio.IWritePin} message WritePin message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WritePin.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a WritePin message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gpio.WritePin
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gpio.WritePin} WritePin
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WritePin.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gpio.WritePin();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.pin = reader.int32();
                            break;
                        }
                    case 2: {
                            message.value = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a WritePin message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gpio.WritePin
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gpio.WritePin} WritePin
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WritePin.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a WritePin message.
             * @function verify
             * @memberof PB_Gpio.WritePin
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            WritePin.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.pin != null && message.hasOwnProperty("pin"))
                    switch (message.pin) {
                    default:
                        return "pin: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                        break;
                    }
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isInteger(message.value))
                        return "value: integer expected";
                return null;
            };
    
            /**
             * Creates a WritePin message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gpio.WritePin
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gpio.WritePin} WritePin
             */
            WritePin.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gpio.WritePin)
                    return object;
                var message = new $root.PB_Gpio.WritePin();
                switch (object.pin) {
                default:
                    if (typeof object.pin === "number") {
                        message.pin = object.pin;
                        break;
                    }
                    break;
                case "PC0":
                case 0:
                    message.pin = 0;
                    break;
                case "PC1":
                case 1:
                    message.pin = 1;
                    break;
                case "PC3":
                case 2:
                    message.pin = 2;
                    break;
                case "PB2":
                case 3:
                    message.pin = 3;
                    break;
                case "PB3":
                case 4:
                    message.pin = 4;
                    break;
                case "PA4":
                case 5:
                    message.pin = 5;
                    break;
                case "PA6":
                case 6:
                    message.pin = 6;
                    break;
                case "PA7":
                case 7:
                    message.pin = 7;
                    break;
                }
                if (object.value != null)
                    message.value = object.value >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a WritePin message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gpio.WritePin
             * @static
             * @param {PB_Gpio.WritePin} message WritePin
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            WritePin.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.pin = options.enums === String ? "PC0" : 0;
                    object.value = 0;
                }
                if (message.pin != null && message.hasOwnProperty("pin"))
                    object.pin = options.enums === String ? $root.PB_Gpio.GpioPin[message.pin] === undefined ? message.pin : $root.PB_Gpio.GpioPin[message.pin] : message.pin;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };
    
            /**
             * Converts this WritePin to JSON.
             * @function toJSON
             * @memberof PB_Gpio.WritePin
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            WritePin.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for WritePin
             * @function getTypeUrl
             * @memberof PB_Gpio.WritePin
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            WritePin.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gpio.WritePin";
            };
    
            return WritePin;
        })();
    
        PB_Gpio.GetOtgMode = (function() {
    
            /**
             * Properties of a GetOtgMode.
             * @memberof PB_Gpio
             * @interface IGetOtgMode
             */
    
            /**
             * Constructs a new GetOtgMode.
             * @memberof PB_Gpio
             * @classdesc Represents a GetOtgMode.
             * @implements IGetOtgMode
             * @constructor
             * @param {PB_Gpio.IGetOtgMode=} [properties] Properties to set
             */
            function GetOtgMode(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new GetOtgMode instance using the specified properties.
             * @function create
             * @memberof PB_Gpio.GetOtgMode
             * @static
             * @param {PB_Gpio.IGetOtgMode=} [properties] Properties to set
             * @returns {PB_Gpio.GetOtgMode} GetOtgMode instance
             */
            GetOtgMode.create = function create(properties) {
                return new GetOtgMode(properties);
            };
    
            /**
             * Encodes the specified GetOtgMode message. Does not implicitly {@link PB_Gpio.GetOtgMode.verify|verify} messages.
             * @function encode
             * @memberof PB_Gpio.GetOtgMode
             * @static
             * @param {PB_Gpio.IGetOtgMode} message GetOtgMode message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetOtgMode.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified GetOtgMode message, length delimited. Does not implicitly {@link PB_Gpio.GetOtgMode.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gpio.GetOtgMode
             * @static
             * @param {PB_Gpio.IGetOtgMode} message GetOtgMode message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetOtgMode.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a GetOtgMode message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gpio.GetOtgMode
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gpio.GetOtgMode} GetOtgMode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetOtgMode.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gpio.GetOtgMode();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a GetOtgMode message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gpio.GetOtgMode
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gpio.GetOtgMode} GetOtgMode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetOtgMode.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a GetOtgMode message.
             * @function verify
             * @memberof PB_Gpio.GetOtgMode
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetOtgMode.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a GetOtgMode message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gpio.GetOtgMode
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gpio.GetOtgMode} GetOtgMode
             */
            GetOtgMode.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gpio.GetOtgMode)
                    return object;
                return new $root.PB_Gpio.GetOtgMode();
            };
    
            /**
             * Creates a plain object from a GetOtgMode message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gpio.GetOtgMode
             * @static
             * @param {PB_Gpio.GetOtgMode} message GetOtgMode
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetOtgMode.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this GetOtgMode to JSON.
             * @function toJSON
             * @memberof PB_Gpio.GetOtgMode
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetOtgMode.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for GetOtgMode
             * @function getTypeUrl
             * @memberof PB_Gpio.GetOtgMode
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetOtgMode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gpio.GetOtgMode";
            };
    
            return GetOtgMode;
        })();
    
        PB_Gpio.GetOtgModeResponse = (function() {
    
            /**
             * Properties of a GetOtgModeResponse.
             * @memberof PB_Gpio
             * @interface IGetOtgModeResponse
             * @property {PB_Gpio.GpioOtgMode|null} [mode] GetOtgModeResponse mode
             */
    
            /**
             * Constructs a new GetOtgModeResponse.
             * @memberof PB_Gpio
             * @classdesc Represents a GetOtgModeResponse.
             * @implements IGetOtgModeResponse
             * @constructor
             * @param {PB_Gpio.IGetOtgModeResponse=} [properties] Properties to set
             */
            function GetOtgModeResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * GetOtgModeResponse mode.
             * @member {PB_Gpio.GpioOtgMode} mode
             * @memberof PB_Gpio.GetOtgModeResponse
             * @instance
             */
            GetOtgModeResponse.prototype.mode = 0;
    
            /**
             * Creates a new GetOtgModeResponse instance using the specified properties.
             * @function create
             * @memberof PB_Gpio.GetOtgModeResponse
             * @static
             * @param {PB_Gpio.IGetOtgModeResponse=} [properties] Properties to set
             * @returns {PB_Gpio.GetOtgModeResponse} GetOtgModeResponse instance
             */
            GetOtgModeResponse.create = function create(properties) {
                return new GetOtgModeResponse(properties);
            };
    
            /**
             * Encodes the specified GetOtgModeResponse message. Does not implicitly {@link PB_Gpio.GetOtgModeResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_Gpio.GetOtgModeResponse
             * @static
             * @param {PB_Gpio.IGetOtgModeResponse} message GetOtgModeResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetOtgModeResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.mode);
                return writer;
            };
    
            /**
             * Encodes the specified GetOtgModeResponse message, length delimited. Does not implicitly {@link PB_Gpio.GetOtgModeResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gpio.GetOtgModeResponse
             * @static
             * @param {PB_Gpio.IGetOtgModeResponse} message GetOtgModeResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetOtgModeResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a GetOtgModeResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gpio.GetOtgModeResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gpio.GetOtgModeResponse} GetOtgModeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetOtgModeResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gpio.GetOtgModeResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.mode = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a GetOtgModeResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gpio.GetOtgModeResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gpio.GetOtgModeResponse} GetOtgModeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetOtgModeResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a GetOtgModeResponse message.
             * @function verify
             * @memberof PB_Gpio.GetOtgModeResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetOtgModeResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.mode != null && message.hasOwnProperty("mode"))
                    switch (message.mode) {
                    default:
                        return "mode: enum value expected";
                    case 0:
                    case 1:
                        break;
                    }
                return null;
            };
    
            /**
             * Creates a GetOtgModeResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gpio.GetOtgModeResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gpio.GetOtgModeResponse} GetOtgModeResponse
             */
            GetOtgModeResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gpio.GetOtgModeResponse)
                    return object;
                var message = new $root.PB_Gpio.GetOtgModeResponse();
                switch (object.mode) {
                default:
                    if (typeof object.mode === "number") {
                        message.mode = object.mode;
                        break;
                    }
                    break;
                case "OFF":
                case 0:
                    message.mode = 0;
                    break;
                case "ON":
                case 1:
                    message.mode = 1;
                    break;
                }
                return message;
            };
    
            /**
             * Creates a plain object from a GetOtgModeResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gpio.GetOtgModeResponse
             * @static
             * @param {PB_Gpio.GetOtgModeResponse} message GetOtgModeResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetOtgModeResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.mode = options.enums === String ? "OFF" : 0;
                if (message.mode != null && message.hasOwnProperty("mode"))
                    object.mode = options.enums === String ? $root.PB_Gpio.GpioOtgMode[message.mode] === undefined ? message.mode : $root.PB_Gpio.GpioOtgMode[message.mode] : message.mode;
                return object;
            };
    
            /**
             * Converts this GetOtgModeResponse to JSON.
             * @function toJSON
             * @memberof PB_Gpio.GetOtgModeResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetOtgModeResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for GetOtgModeResponse
             * @function getTypeUrl
             * @memberof PB_Gpio.GetOtgModeResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetOtgModeResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gpio.GetOtgModeResponse";
            };
    
            return GetOtgModeResponse;
        })();
    
        PB_Gpio.SetOtgMode = (function() {
    
            /**
             * Properties of a SetOtgMode.
             * @memberof PB_Gpio
             * @interface ISetOtgMode
             * @property {PB_Gpio.GpioOtgMode|null} [mode] SetOtgMode mode
             */
    
            /**
             * Constructs a new SetOtgMode.
             * @memberof PB_Gpio
             * @classdesc Represents a SetOtgMode.
             * @implements ISetOtgMode
             * @constructor
             * @param {PB_Gpio.ISetOtgMode=} [properties] Properties to set
             */
            function SetOtgMode(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * SetOtgMode mode.
             * @member {PB_Gpio.GpioOtgMode} mode
             * @memberof PB_Gpio.SetOtgMode
             * @instance
             */
            SetOtgMode.prototype.mode = 0;
    
            /**
             * Creates a new SetOtgMode instance using the specified properties.
             * @function create
             * @memberof PB_Gpio.SetOtgMode
             * @static
             * @param {PB_Gpio.ISetOtgMode=} [properties] Properties to set
             * @returns {PB_Gpio.SetOtgMode} SetOtgMode instance
             */
            SetOtgMode.create = function create(properties) {
                return new SetOtgMode(properties);
            };
    
            /**
             * Encodes the specified SetOtgMode message. Does not implicitly {@link PB_Gpio.SetOtgMode.verify|verify} messages.
             * @function encode
             * @memberof PB_Gpio.SetOtgMode
             * @static
             * @param {PB_Gpio.ISetOtgMode} message SetOtgMode message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SetOtgMode.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.mode);
                return writer;
            };
    
            /**
             * Encodes the specified SetOtgMode message, length delimited. Does not implicitly {@link PB_Gpio.SetOtgMode.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Gpio.SetOtgMode
             * @static
             * @param {PB_Gpio.ISetOtgMode} message SetOtgMode message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SetOtgMode.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a SetOtgMode message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Gpio.SetOtgMode
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Gpio.SetOtgMode} SetOtgMode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SetOtgMode.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Gpio.SetOtgMode();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.mode = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a SetOtgMode message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Gpio.SetOtgMode
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Gpio.SetOtgMode} SetOtgMode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SetOtgMode.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a SetOtgMode message.
             * @function verify
             * @memberof PB_Gpio.SetOtgMode
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SetOtgMode.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.mode != null && message.hasOwnProperty("mode"))
                    switch (message.mode) {
                    default:
                        return "mode: enum value expected";
                    case 0:
                    case 1:
                        break;
                    }
                return null;
            };
    
            /**
             * Creates a SetOtgMode message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Gpio.SetOtgMode
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Gpio.SetOtgMode} SetOtgMode
             */
            SetOtgMode.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Gpio.SetOtgMode)
                    return object;
                var message = new $root.PB_Gpio.SetOtgMode();
                switch (object.mode) {
                default:
                    if (typeof object.mode === "number") {
                        message.mode = object.mode;
                        break;
                    }
                    break;
                case "OFF":
                case 0:
                    message.mode = 0;
                    break;
                case "ON":
                case 1:
                    message.mode = 1;
                    break;
                }
                return message;
            };
    
            /**
             * Creates a plain object from a SetOtgMode message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Gpio.SetOtgMode
             * @static
             * @param {PB_Gpio.SetOtgMode} message SetOtgMode
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SetOtgMode.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.mode = options.enums === String ? "OFF" : 0;
                if (message.mode != null && message.hasOwnProperty("mode"))
                    object.mode = options.enums === String ? $root.PB_Gpio.GpioOtgMode[message.mode] === undefined ? message.mode : $root.PB_Gpio.GpioOtgMode[message.mode] : message.mode;
                return object;
            };
    
            /**
             * Converts this SetOtgMode to JSON.
             * @function toJSON
             * @memberof PB_Gpio.SetOtgMode
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SetOtgMode.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for SetOtgMode
             * @function getTypeUrl
             * @memberof PB_Gpio.SetOtgMode
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SetOtgMode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Gpio.SetOtgMode";
            };
    
            return SetOtgMode;
        })();
    
        return PB_Gpio;
    })();
    
    $root.PB_Property = (function() {
    
        /**
         * Namespace PB_Property.
         * @exports PB_Property
         * @namespace
         */
        var PB_Property = {};
    
        PB_Property.GetRequest = (function() {
    
            /**
             * Properties of a GetRequest.
             * @memberof PB_Property
             * @interface IGetRequest
             * @property {string|null} [key] GetRequest key
             */
    
            /**
             * Constructs a new GetRequest.
             * @memberof PB_Property
             * @classdesc Represents a GetRequest.
             * @implements IGetRequest
             * @constructor
             * @param {PB_Property.IGetRequest=} [properties] Properties to set
             */
            function GetRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * GetRequest key.
             * @member {string} key
             * @memberof PB_Property.GetRequest
             * @instance
             */
            GetRequest.prototype.key = "";
    
            /**
             * Creates a new GetRequest instance using the specified properties.
             * @function create
             * @memberof PB_Property.GetRequest
             * @static
             * @param {PB_Property.IGetRequest=} [properties] Properties to set
             * @returns {PB_Property.GetRequest} GetRequest instance
             */
            GetRequest.create = function create(properties) {
                return new GetRequest(properties);
            };
    
            /**
             * Encodes the specified GetRequest message. Does not implicitly {@link PB_Property.GetRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Property.GetRequest
             * @static
             * @param {PB_Property.IGetRequest} message GetRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                return writer;
            };
    
            /**
             * Encodes the specified GetRequest message, length delimited. Does not implicitly {@link PB_Property.GetRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Property.GetRequest
             * @static
             * @param {PB_Property.IGetRequest} message GetRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a GetRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Property.GetRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Property.GetRequest} GetRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Property.GetRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.key = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a GetRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Property.GetRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Property.GetRequest} GetRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a GetRequest message.
             * @function verify
             * @memberof PB_Property.GetRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.key != null && message.hasOwnProperty("key"))
                    if (!$util.isString(message.key))
                        return "key: string expected";
                return null;
            };
    
            /**
             * Creates a GetRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Property.GetRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Property.GetRequest} GetRequest
             */
            GetRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Property.GetRequest)
                    return object;
                var message = new $root.PB_Property.GetRequest();
                if (object.key != null)
                    message.key = String(object.key);
                return message;
            };
    
            /**
             * Creates a plain object from a GetRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Property.GetRequest
             * @static
             * @param {PB_Property.GetRequest} message GetRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.key = "";
                if (message.key != null && message.hasOwnProperty("key"))
                    object.key = message.key;
                return object;
            };
    
            /**
             * Converts this GetRequest to JSON.
             * @function toJSON
             * @memberof PB_Property.GetRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for GetRequest
             * @function getTypeUrl
             * @memberof PB_Property.GetRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Property.GetRequest";
            };
    
            return GetRequest;
        })();
    
        PB_Property.GetResponse = (function() {
    
            /**
             * Properties of a GetResponse.
             * @memberof PB_Property
             * @interface IGetResponse
             * @property {string|null} [key] GetResponse key
             * @property {string|null} [value] GetResponse value
             */
    
            /**
             * Constructs a new GetResponse.
             * @memberof PB_Property
             * @classdesc Represents a GetResponse.
             * @implements IGetResponse
             * @constructor
             * @param {PB_Property.IGetResponse=} [properties] Properties to set
             */
            function GetResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * GetResponse key.
             * @member {string} key
             * @memberof PB_Property.GetResponse
             * @instance
             */
            GetResponse.prototype.key = "";
    
            /**
             * GetResponse value.
             * @member {string} value
             * @memberof PB_Property.GetResponse
             * @instance
             */
            GetResponse.prototype.value = "";
    
            /**
             * Creates a new GetResponse instance using the specified properties.
             * @function create
             * @memberof PB_Property.GetResponse
             * @static
             * @param {PB_Property.IGetResponse=} [properties] Properties to set
             * @returns {PB_Property.GetResponse} GetResponse instance
             */
            GetResponse.create = function create(properties) {
                return new GetResponse(properties);
            };
    
            /**
             * Encodes the specified GetResponse message. Does not implicitly {@link PB_Property.GetResponse.verify|verify} messages.
             * @function encode
             * @memberof PB_Property.GetResponse
             * @static
             * @param {PB_Property.IGetResponse} message GetResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified GetResponse message, length delimited. Does not implicitly {@link PB_Property.GetResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Property.GetResponse
             * @static
             * @param {PB_Property.IGetResponse} message GetResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a GetResponse message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Property.GetResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Property.GetResponse} GetResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetResponse.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Property.GetResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.key = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a GetResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Property.GetResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Property.GetResponse} GetResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a GetResponse message.
             * @function verify
             * @memberof PB_Property.GetResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.key != null && message.hasOwnProperty("key"))
                    if (!$util.isString(message.key))
                        return "key: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isString(message.value))
                        return "value: string expected";
                return null;
            };
    
            /**
             * Creates a GetResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Property.GetResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Property.GetResponse} GetResponse
             */
            GetResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Property.GetResponse)
                    return object;
                var message = new $root.PB_Property.GetResponse();
                if (object.key != null)
                    message.key = String(object.key);
                if (object.value != null)
                    message.value = String(object.value);
                return message;
            };
    
            /**
             * Creates a plain object from a GetResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Property.GetResponse
             * @static
             * @param {PB_Property.GetResponse} message GetResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.key = "";
                    object.value = "";
                }
                if (message.key != null && message.hasOwnProperty("key"))
                    object.key = message.key;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };
    
            /**
             * Converts this GetResponse to JSON.
             * @function toJSON
             * @memberof PB_Property.GetResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for GetResponse
             * @function getTypeUrl
             * @memberof PB_Property.GetResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Property.GetResponse";
            };
    
            return GetResponse;
        })();
    
        return PB_Property;
    })();
    
    $root.PB_Desktop = (function() {
    
        /**
         * Namespace PB_Desktop.
         * @exports PB_Desktop
         * @namespace
         */
        var PB_Desktop = {};
    
        PB_Desktop.IsLockedRequest = (function() {
    
            /**
             * Properties of an IsLockedRequest.
             * @memberof PB_Desktop
             * @interface IIsLockedRequest
             */
    
            /**
             * Constructs a new IsLockedRequest.
             * @memberof PB_Desktop
             * @classdesc Represents an IsLockedRequest.
             * @implements IIsLockedRequest
             * @constructor
             * @param {PB_Desktop.IIsLockedRequest=} [properties] Properties to set
             */
            function IsLockedRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new IsLockedRequest instance using the specified properties.
             * @function create
             * @memberof PB_Desktop.IsLockedRequest
             * @static
             * @param {PB_Desktop.IIsLockedRequest=} [properties] Properties to set
             * @returns {PB_Desktop.IsLockedRequest} IsLockedRequest instance
             */
            IsLockedRequest.create = function create(properties) {
                return new IsLockedRequest(properties);
            };
    
            /**
             * Encodes the specified IsLockedRequest message. Does not implicitly {@link PB_Desktop.IsLockedRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Desktop.IsLockedRequest
             * @static
             * @param {PB_Desktop.IIsLockedRequest} message IsLockedRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            IsLockedRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified IsLockedRequest message, length delimited. Does not implicitly {@link PB_Desktop.IsLockedRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Desktop.IsLockedRequest
             * @static
             * @param {PB_Desktop.IIsLockedRequest} message IsLockedRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            IsLockedRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an IsLockedRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Desktop.IsLockedRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Desktop.IsLockedRequest} IsLockedRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            IsLockedRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Desktop.IsLockedRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an IsLockedRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Desktop.IsLockedRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Desktop.IsLockedRequest} IsLockedRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            IsLockedRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an IsLockedRequest message.
             * @function verify
             * @memberof PB_Desktop.IsLockedRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            IsLockedRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates an IsLockedRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Desktop.IsLockedRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Desktop.IsLockedRequest} IsLockedRequest
             */
            IsLockedRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Desktop.IsLockedRequest)
                    return object;
                return new $root.PB_Desktop.IsLockedRequest();
            };
    
            /**
             * Creates a plain object from an IsLockedRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Desktop.IsLockedRequest
             * @static
             * @param {PB_Desktop.IsLockedRequest} message IsLockedRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            IsLockedRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this IsLockedRequest to JSON.
             * @function toJSON
             * @memberof PB_Desktop.IsLockedRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            IsLockedRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for IsLockedRequest
             * @function getTypeUrl
             * @memberof PB_Desktop.IsLockedRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            IsLockedRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Desktop.IsLockedRequest";
            };
    
            return IsLockedRequest;
        })();
    
        PB_Desktop.UnlockRequest = (function() {
    
            /**
             * Properties of an UnlockRequest.
             * @memberof PB_Desktop
             * @interface IUnlockRequest
             */
    
            /**
             * Constructs a new UnlockRequest.
             * @memberof PB_Desktop
             * @classdesc Represents an UnlockRequest.
             * @implements IUnlockRequest
             * @constructor
             * @param {PB_Desktop.IUnlockRequest=} [properties] Properties to set
             */
            function UnlockRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new UnlockRequest instance using the specified properties.
             * @function create
             * @memberof PB_Desktop.UnlockRequest
             * @static
             * @param {PB_Desktop.IUnlockRequest=} [properties] Properties to set
             * @returns {PB_Desktop.UnlockRequest} UnlockRequest instance
             */
            UnlockRequest.create = function create(properties) {
                return new UnlockRequest(properties);
            };
    
            /**
             * Encodes the specified UnlockRequest message. Does not implicitly {@link PB_Desktop.UnlockRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Desktop.UnlockRequest
             * @static
             * @param {PB_Desktop.IUnlockRequest} message UnlockRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UnlockRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified UnlockRequest message, length delimited. Does not implicitly {@link PB_Desktop.UnlockRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Desktop.UnlockRequest
             * @static
             * @param {PB_Desktop.IUnlockRequest} message UnlockRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UnlockRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an UnlockRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Desktop.UnlockRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Desktop.UnlockRequest} UnlockRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UnlockRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Desktop.UnlockRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an UnlockRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Desktop.UnlockRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Desktop.UnlockRequest} UnlockRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UnlockRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an UnlockRequest message.
             * @function verify
             * @memberof PB_Desktop.UnlockRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UnlockRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates an UnlockRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Desktop.UnlockRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Desktop.UnlockRequest} UnlockRequest
             */
            UnlockRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Desktop.UnlockRequest)
                    return object;
                return new $root.PB_Desktop.UnlockRequest();
            };
    
            /**
             * Creates a plain object from an UnlockRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Desktop.UnlockRequest
             * @static
             * @param {PB_Desktop.UnlockRequest} message UnlockRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UnlockRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this UnlockRequest to JSON.
             * @function toJSON
             * @memberof PB_Desktop.UnlockRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UnlockRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for UnlockRequest
             * @function getTypeUrl
             * @memberof PB_Desktop.UnlockRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UnlockRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Desktop.UnlockRequest";
            };
    
            return UnlockRequest;
        })();
    
        PB_Desktop.StatusSubscribeRequest = (function() {
    
            /**
             * Properties of a StatusSubscribeRequest.
             * @memberof PB_Desktop
             * @interface IStatusSubscribeRequest
             */
    
            /**
             * Constructs a new StatusSubscribeRequest.
             * @memberof PB_Desktop
             * @classdesc Represents a StatusSubscribeRequest.
             * @implements IStatusSubscribeRequest
             * @constructor
             * @param {PB_Desktop.IStatusSubscribeRequest=} [properties] Properties to set
             */
            function StatusSubscribeRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new StatusSubscribeRequest instance using the specified properties.
             * @function create
             * @memberof PB_Desktop.StatusSubscribeRequest
             * @static
             * @param {PB_Desktop.IStatusSubscribeRequest=} [properties] Properties to set
             * @returns {PB_Desktop.StatusSubscribeRequest} StatusSubscribeRequest instance
             */
            StatusSubscribeRequest.create = function create(properties) {
                return new StatusSubscribeRequest(properties);
            };
    
            /**
             * Encodes the specified StatusSubscribeRequest message. Does not implicitly {@link PB_Desktop.StatusSubscribeRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Desktop.StatusSubscribeRequest
             * @static
             * @param {PB_Desktop.IStatusSubscribeRequest} message StatusSubscribeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StatusSubscribeRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified StatusSubscribeRequest message, length delimited. Does not implicitly {@link PB_Desktop.StatusSubscribeRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Desktop.StatusSubscribeRequest
             * @static
             * @param {PB_Desktop.IStatusSubscribeRequest} message StatusSubscribeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StatusSubscribeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a StatusSubscribeRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Desktop.StatusSubscribeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Desktop.StatusSubscribeRequest} StatusSubscribeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StatusSubscribeRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Desktop.StatusSubscribeRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a StatusSubscribeRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Desktop.StatusSubscribeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Desktop.StatusSubscribeRequest} StatusSubscribeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StatusSubscribeRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a StatusSubscribeRequest message.
             * @function verify
             * @memberof PB_Desktop.StatusSubscribeRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StatusSubscribeRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a StatusSubscribeRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Desktop.StatusSubscribeRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Desktop.StatusSubscribeRequest} StatusSubscribeRequest
             */
            StatusSubscribeRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Desktop.StatusSubscribeRequest)
                    return object;
                return new $root.PB_Desktop.StatusSubscribeRequest();
            };
    
            /**
             * Creates a plain object from a StatusSubscribeRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Desktop.StatusSubscribeRequest
             * @static
             * @param {PB_Desktop.StatusSubscribeRequest} message StatusSubscribeRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StatusSubscribeRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this StatusSubscribeRequest to JSON.
             * @function toJSON
             * @memberof PB_Desktop.StatusSubscribeRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StatusSubscribeRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for StatusSubscribeRequest
             * @function getTypeUrl
             * @memberof PB_Desktop.StatusSubscribeRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            StatusSubscribeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Desktop.StatusSubscribeRequest";
            };
    
            return StatusSubscribeRequest;
        })();
    
        PB_Desktop.StatusUnsubscribeRequest = (function() {
    
            /**
             * Properties of a StatusUnsubscribeRequest.
             * @memberof PB_Desktop
             * @interface IStatusUnsubscribeRequest
             */
    
            /**
             * Constructs a new StatusUnsubscribeRequest.
             * @memberof PB_Desktop
             * @classdesc Represents a StatusUnsubscribeRequest.
             * @implements IStatusUnsubscribeRequest
             * @constructor
             * @param {PB_Desktop.IStatusUnsubscribeRequest=} [properties] Properties to set
             */
            function StatusUnsubscribeRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Creates a new StatusUnsubscribeRequest instance using the specified properties.
             * @function create
             * @memberof PB_Desktop.StatusUnsubscribeRequest
             * @static
             * @param {PB_Desktop.IStatusUnsubscribeRequest=} [properties] Properties to set
             * @returns {PB_Desktop.StatusUnsubscribeRequest} StatusUnsubscribeRequest instance
             */
            StatusUnsubscribeRequest.create = function create(properties) {
                return new StatusUnsubscribeRequest(properties);
            };
    
            /**
             * Encodes the specified StatusUnsubscribeRequest message. Does not implicitly {@link PB_Desktop.StatusUnsubscribeRequest.verify|verify} messages.
             * @function encode
             * @memberof PB_Desktop.StatusUnsubscribeRequest
             * @static
             * @param {PB_Desktop.IStatusUnsubscribeRequest} message StatusUnsubscribeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StatusUnsubscribeRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };
    
            /**
             * Encodes the specified StatusUnsubscribeRequest message, length delimited. Does not implicitly {@link PB_Desktop.StatusUnsubscribeRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Desktop.StatusUnsubscribeRequest
             * @static
             * @param {PB_Desktop.IStatusUnsubscribeRequest} message StatusUnsubscribeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StatusUnsubscribeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a StatusUnsubscribeRequest message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Desktop.StatusUnsubscribeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Desktop.StatusUnsubscribeRequest} StatusUnsubscribeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StatusUnsubscribeRequest.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Desktop.StatusUnsubscribeRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a StatusUnsubscribeRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Desktop.StatusUnsubscribeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Desktop.StatusUnsubscribeRequest} StatusUnsubscribeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StatusUnsubscribeRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a StatusUnsubscribeRequest message.
             * @function verify
             * @memberof PB_Desktop.StatusUnsubscribeRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StatusUnsubscribeRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };
    
            /**
             * Creates a StatusUnsubscribeRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Desktop.StatusUnsubscribeRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Desktop.StatusUnsubscribeRequest} StatusUnsubscribeRequest
             */
            StatusUnsubscribeRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Desktop.StatusUnsubscribeRequest)
                    return object;
                return new $root.PB_Desktop.StatusUnsubscribeRequest();
            };
    
            /**
             * Creates a plain object from a StatusUnsubscribeRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Desktop.StatusUnsubscribeRequest
             * @static
             * @param {PB_Desktop.StatusUnsubscribeRequest} message StatusUnsubscribeRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StatusUnsubscribeRequest.toObject = function toObject() {
                return {};
            };
    
            /**
             * Converts this StatusUnsubscribeRequest to JSON.
             * @function toJSON
             * @memberof PB_Desktop.StatusUnsubscribeRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StatusUnsubscribeRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for StatusUnsubscribeRequest
             * @function getTypeUrl
             * @memberof PB_Desktop.StatusUnsubscribeRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            StatusUnsubscribeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Desktop.StatusUnsubscribeRequest";
            };
    
            return StatusUnsubscribeRequest;
        })();
    
        PB_Desktop.Status = (function() {
    
            /**
             * Properties of a Status.
             * @memberof PB_Desktop
             * @interface IStatus
             * @property {boolean|null} [locked] Status locked
             */
    
            /**
             * Constructs a new Status.
             * @memberof PB_Desktop
             * @classdesc Represents a Status.
             * @implements IStatus
             * @constructor
             * @param {PB_Desktop.IStatus=} [properties] Properties to set
             */
            function Status(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Status locked.
             * @member {boolean} locked
             * @memberof PB_Desktop.Status
             * @instance
             */
            Status.prototype.locked = false;
    
            /**
             * Creates a new Status instance using the specified properties.
             * @function create
             * @memberof PB_Desktop.Status
             * @static
             * @param {PB_Desktop.IStatus=} [properties] Properties to set
             * @returns {PB_Desktop.Status} Status instance
             */
            Status.create = function create(properties) {
                return new Status(properties);
            };
    
            /**
             * Encodes the specified Status message. Does not implicitly {@link PB_Desktop.Status.verify|verify} messages.
             * @function encode
             * @memberof PB_Desktop.Status
             * @static
             * @param {PB_Desktop.IStatus} message Status message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Status.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.locked != null && Object.hasOwnProperty.call(message, "locked"))
                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.locked);
                return writer;
            };
    
            /**
             * Encodes the specified Status message, length delimited. Does not implicitly {@link PB_Desktop.Status.verify|verify} messages.
             * @function encodeDelimited
             * @memberof PB_Desktop.Status
             * @static
             * @param {PB_Desktop.IStatus} message Status message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Status.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Status message from the specified reader or buffer.
             * @function decode
             * @memberof PB_Desktop.Status
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {PB_Desktop.Status} Status
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Status.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PB_Desktop.Status();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.locked = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Status message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof PB_Desktop.Status
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {PB_Desktop.Status} Status
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Status.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Status message.
             * @function verify
             * @memberof PB_Desktop.Status
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Status.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.locked != null && message.hasOwnProperty("locked"))
                    if (typeof message.locked !== "boolean")
                        return "locked: boolean expected";
                return null;
            };
    
            /**
             * Creates a Status message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof PB_Desktop.Status
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {PB_Desktop.Status} Status
             */
            Status.fromObject = function fromObject(object) {
                if (object instanceof $root.PB_Desktop.Status)
                    return object;
                var message = new $root.PB_Desktop.Status();
                if (object.locked != null)
                    message.locked = Boolean(object.locked);
                return message;
            };
    
            /**
             * Creates a plain object from a Status message. Also converts values to other types if specified.
             * @function toObject
             * @memberof PB_Desktop.Status
             * @static
             * @param {PB_Desktop.Status} message Status
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Status.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.locked = false;
                if (message.locked != null && message.hasOwnProperty("locked"))
                    object.locked = message.locked;
                return object;
            };
    
            /**
             * Converts this Status to JSON.
             * @function toJSON
             * @memberof PB_Desktop.Status
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Status.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Status
             * @function getTypeUrl
             * @memberof PB_Desktop.Status
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/PB_Desktop.Status";
            };
    
            return Status;
        })();
    
        return PB_Desktop;
    })();

    return $root;
});

},{"protobufjs/minimal":9}],2:[function(require,module,exports){
"use strict";
module.exports = asPromise;

/**
 * Callback as used by {@link util.asPromise}.
 * @typedef asPromiseCallback
 * @type {function}
 * @param {Error|null} error Error, if any
 * @param {...*} params Additional arguments
 * @returns {undefined}
 */

/**
 * Returns a promise from a node-style callback function.
 * @memberof util
 * @param {asPromiseCallback} fn Function to call
 * @param {*} ctx Function context
 * @param {...*} params Function arguments
 * @returns {Promise<*>} Promisified function
 */
function asPromise(fn, ctx/*, varargs */) {
    var params  = new Array(arguments.length - 1),
        offset  = 0,
        index   = 2,
        pending = true;
    while (index < arguments.length)
        params[offset++] = arguments[index++];
    return new Promise(function executor(resolve, reject) {
        params[offset] = function callback(err/*, varargs */) {
            if (pending) {
                pending = false;
                if (err)
                    reject(err);
                else {
                    var params = new Array(arguments.length - 1),
                        offset = 0;
                    while (offset < params.length)
                        params[offset++] = arguments[offset];
                    resolve.apply(null, params);
                }
            }
        };
        try {
            fn.apply(ctx || null, params);
        } catch (err) {
            if (pending) {
                pending = false;
                reject(err);
            }
        }
    });
}

},{}],3:[function(require,module,exports){
"use strict";

/**
 * A minimal base64 implementation for number arrays.
 * @memberof util
 * @namespace
 */
var base64 = exports;

/**
 * Calculates the byte length of a base64 encoded string.
 * @param {string} string Base64 encoded string
 * @returns {number} Byte length
 */
base64.length = function length(string) {
    var p = string.length;
    if (!p)
        return 0;
    var n = 0;
    while (--p % 4 > 1 && string.charAt(p) === "=")
        ++n;
    return Math.ceil(string.length * 3) / 4 - n;
};

// Base64 encoding table
var b64 = new Array(64);

// Base64 decoding table
var s64 = new Array(123);

// 65..90, 97..122, 48..57, 43, 47
for (var i = 0; i < 64;)
    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;

/**
 * Encodes a buffer to a base64 encoded string.
 * @param {Uint8Array} buffer Source buffer
 * @param {number} start Source start
 * @param {number} end Source end
 * @returns {string} Base64 encoded string
 */
base64.encode = function encode(buffer, start, end) {
    var parts = null,
        chunk = [];
    var i = 0, // output index
        j = 0, // goto index
        t;     // temporary
    while (start < end) {
        var b = buffer[start++];
        switch (j) {
            case 0:
                chunk[i++] = b64[b >> 2];
                t = (b & 3) << 4;
                j = 1;
                break;
            case 1:
                chunk[i++] = b64[t | b >> 4];
                t = (b & 15) << 2;
                j = 2;
                break;
            case 2:
                chunk[i++] = b64[t | b >> 6];
                chunk[i++] = b64[b & 63];
                j = 0;
                break;
        }
        if (i > 8191) {
            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));
            i = 0;
        }
    }
    if (j) {
        chunk[i++] = b64[t];
        chunk[i++] = 61;
        if (j === 1)
            chunk[i++] = 61;
    }
    if (parts) {
        if (i)
            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
        return parts.join("");
    }
    return String.fromCharCode.apply(String, chunk.slice(0, i));
};

var invalidEncoding = "invalid encoding";

/**
 * Decodes a base64 encoded string to a buffer.
 * @param {string} string Source string
 * @param {Uint8Array} buffer Destination buffer
 * @param {number} offset Destination offset
 * @returns {number} Number of bytes written
 * @throws {Error} If encoding is invalid
 */
base64.decode = function decode(string, buffer, offset) {
    var start = offset;
    var j = 0, // goto index
        t;     // temporary
    for (var i = 0; i < string.length;) {
        var c = string.charCodeAt(i++);
        if (c === 61 && j > 1)
            break;
        if ((c = s64[c]) === undefined)
            throw Error(invalidEncoding);
        switch (j) {
            case 0:
                t = c;
                j = 1;
                break;
            case 1:
                buffer[offset++] = t << 2 | (c & 48) >> 4;
                t = c;
                j = 2;
                break;
            case 2:
                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;
                t = c;
                j = 3;
                break;
            case 3:
                buffer[offset++] = (t & 3) << 6 | c;
                j = 0;
                break;
        }
    }
    if (j === 1)
        throw Error(invalidEncoding);
    return offset - start;
};

/**
 * Tests if the specified string appears to be base64 encoded.
 * @param {string} string String to test
 * @returns {boolean} `true` if probably base64 encoded, otherwise false
 */
base64.test = function test(string) {
    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);
};

},{}],4:[function(require,module,exports){
"use strict";
module.exports = EventEmitter;

/**
 * Constructs a new event emitter instance.
 * @classdesc A minimal event emitter.
 * @memberof util
 * @constructor
 */
function EventEmitter() {

    /**
     * Registered listeners.
     * @type {Object.<string,*>}
     * @private
     */
    this._listeners = {};
}

/**
 * Registers an event listener.
 * @param {string} evt Event name
 * @param {function} fn Listener
 * @param {*} [ctx] Listener context
 * @returns {util.EventEmitter} `this`
 */
EventEmitter.prototype.on = function on(evt, fn, ctx) {
    (this._listeners[evt] || (this._listeners[evt] = [])).push({
        fn  : fn,
        ctx : ctx || this
    });
    return this;
};

/**
 * Removes an event listener or any matching listeners if arguments are omitted.
 * @param {string} [evt] Event name. Removes all listeners if omitted.
 * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.
 * @returns {util.EventEmitter} `this`
 */
EventEmitter.prototype.off = function off(evt, fn) {
    if (evt === undefined)
        this._listeners = {};
    else {
        if (fn === undefined)
            this._listeners[evt] = [];
        else {
            var listeners = this._listeners[evt];
            for (var i = 0; i < listeners.length;)
                if (listeners[i].fn === fn)
                    listeners.splice(i, 1);
                else
                    ++i;
        }
    }
    return this;
};

/**
 * Emits an event by calling its listeners with the specified arguments.
 * @param {string} evt Event name
 * @param {...*} args Arguments
 * @returns {util.EventEmitter} `this`
 */
EventEmitter.prototype.emit = function emit(evt) {
    var listeners = this._listeners[evt];
    if (listeners) {
        var args = [],
            i = 1;
        for (; i < arguments.length;)
            args.push(arguments[i++]);
        for (i = 0; i < listeners.length;)
            listeners[i].fn.apply(listeners[i++].ctx, args);
    }
    return this;
};

},{}],5:[function(require,module,exports){
"use strict";

module.exports = factory(factory);

/**
 * Reads / writes floats / doubles from / to buffers.
 * @name util.float
 * @namespace
 */

/**
 * Writes a 32 bit float to a buffer using little endian byte order.
 * @name util.float.writeFloatLE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Writes a 32 bit float to a buffer using big endian byte order.
 * @name util.float.writeFloatBE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Reads a 32 bit float from a buffer using little endian byte order.
 * @name util.float.readFloatLE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

/**
 * Reads a 32 bit float from a buffer using big endian byte order.
 * @name util.float.readFloatBE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

/**
 * Writes a 64 bit double to a buffer using little endian byte order.
 * @name util.float.writeDoubleLE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Writes a 64 bit double to a buffer using big endian byte order.
 * @name util.float.writeDoubleBE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Reads a 64 bit double from a buffer using little endian byte order.
 * @name util.float.readDoubleLE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

/**
 * Reads a 64 bit double from a buffer using big endian byte order.
 * @name util.float.readDoubleBE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

// Factory function for the purpose of node-based testing in modified global environments
function factory(exports) {

    // float: typed array
    if (typeof Float32Array !== "undefined") (function() {

        var f32 = new Float32Array([ -0 ]),
            f8b = new Uint8Array(f32.buffer),
            le  = f8b[3] === 128;

        function writeFloat_f32_cpy(val, buf, pos) {
            f32[0] = val;
            buf[pos    ] = f8b[0];
            buf[pos + 1] = f8b[1];
            buf[pos + 2] = f8b[2];
            buf[pos + 3] = f8b[3];
        }

        function writeFloat_f32_rev(val, buf, pos) {
            f32[0] = val;
            buf[pos    ] = f8b[3];
            buf[pos + 1] = f8b[2];
            buf[pos + 2] = f8b[1];
            buf[pos + 3] = f8b[0];
        }

        /* istanbul ignore next */
        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;
        /* istanbul ignore next */
        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;

        function readFloat_f32_cpy(buf, pos) {
            f8b[0] = buf[pos    ];
            f8b[1] = buf[pos + 1];
            f8b[2] = buf[pos + 2];
            f8b[3] = buf[pos + 3];
            return f32[0];
        }

        function readFloat_f32_rev(buf, pos) {
            f8b[3] = buf[pos    ];
            f8b[2] = buf[pos + 1];
            f8b[1] = buf[pos + 2];
            f8b[0] = buf[pos + 3];
            return f32[0];
        }

        /* istanbul ignore next */
        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;
        /* istanbul ignore next */
        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;

    // float: ieee754
    })(); else (function() {

        function writeFloat_ieee754(writeUint, val, buf, pos) {
            var sign = val < 0 ? 1 : 0;
            if (sign)
                val = -val;
            if (val === 0)
                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);
            else if (isNaN(val))
                writeUint(2143289344, buf, pos);
            else if (val > 3.4028234663852886e+38) // +-Infinity
                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);
            else if (val < 1.1754943508222875e-38) // denormal
                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);
            else {
                var exponent = Math.floor(Math.log(val) / Math.LN2),
                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;
                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);
            }
        }

        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);
        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);

        function readFloat_ieee754(readUint, buf, pos) {
            var uint = readUint(buf, pos),
                sign = (uint >> 31) * 2 + 1,
                exponent = uint >>> 23 & 255,
                mantissa = uint & 8388607;
            return exponent === 255
                ? mantissa
                ? NaN
                : sign * Infinity
                : exponent === 0 // denormal
                ? sign * 1.401298464324817e-45 * mantissa
                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);
        }

        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);
        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);

    })();

    // double: typed array
    if (typeof Float64Array !== "undefined") (function() {

        var f64 = new Float64Array([-0]),
            f8b = new Uint8Array(f64.buffer),
            le  = f8b[7] === 128;

        function writeDouble_f64_cpy(val, buf, pos) {
            f64[0] = val;
            buf[pos    ] = f8b[0];
            buf[pos + 1] = f8b[1];
            buf[pos + 2] = f8b[2];
            buf[pos + 3] = f8b[3];
            buf[pos + 4] = f8b[4];
            buf[pos + 5] = f8b[5];
            buf[pos + 6] = f8b[6];
            buf[pos + 7] = f8b[7];
        }

        function writeDouble_f64_rev(val, buf, pos) {
            f64[0] = val;
            buf[pos    ] = f8b[7];
            buf[pos + 1] = f8b[6];
            buf[pos + 2] = f8b[5];
            buf[pos + 3] = f8b[4];
            buf[pos + 4] = f8b[3];
            buf[pos + 5] = f8b[2];
            buf[pos + 6] = f8b[1];
            buf[pos + 7] = f8b[0];
        }

        /* istanbul ignore next */
        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;
        /* istanbul ignore next */
        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;

        function readDouble_f64_cpy(buf, pos) {
            f8b[0] = buf[pos    ];
            f8b[1] = buf[pos + 1];
            f8b[2] = buf[pos + 2];
            f8b[3] = buf[pos + 3];
            f8b[4] = buf[pos + 4];
            f8b[5] = buf[pos + 5];
            f8b[6] = buf[pos + 6];
            f8b[7] = buf[pos + 7];
            return f64[0];
        }

        function readDouble_f64_rev(buf, pos) {
            f8b[7] = buf[pos    ];
            f8b[6] = buf[pos + 1];
            f8b[5] = buf[pos + 2];
            f8b[4] = buf[pos + 3];
            f8b[3] = buf[pos + 4];
            f8b[2] = buf[pos + 5];
            f8b[1] = buf[pos + 6];
            f8b[0] = buf[pos + 7];
            return f64[0];
        }

        /* istanbul ignore next */
        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;
        /* istanbul ignore next */
        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;

    // double: ieee754
    })(); else (function() {

        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {
            var sign = val < 0 ? 1 : 0;
            if (sign)
                val = -val;
            if (val === 0) {
                writeUint(0, buf, pos + off0);
                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);
            } else if (isNaN(val)) {
                writeUint(0, buf, pos + off0);
                writeUint(2146959360, buf, pos + off1);
            } else if (val > 1.7976931348623157e+308) { // +-Infinity
                writeUint(0, buf, pos + off0);
                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);
            } else {
                var mantissa;
                if (val < 2.2250738585072014e-308) { // denormal
                    mantissa = val / 5e-324;
                    writeUint(mantissa >>> 0, buf, pos + off0);
                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);
                } else {
                    var exponent = Math.floor(Math.log(val) / Math.LN2);
                    if (exponent === 1024)
                        exponent = 1023;
                    mantissa = val * Math.pow(2, -exponent);
                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);
                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);
                }
            }
        }

        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);
        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);

        function readDouble_ieee754(readUint, off0, off1, buf, pos) {
            var lo = readUint(buf, pos + off0),
                hi = readUint(buf, pos + off1);
            var sign = (hi >> 31) * 2 + 1,
                exponent = hi >>> 20 & 2047,
                mantissa = 4294967296 * (hi & 1048575) + lo;
            return exponent === 2047
                ? mantissa
                ? NaN
                : sign * Infinity
                : exponent === 0 // denormal
                ? sign * 5e-324 * mantissa
                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);
        }

        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);
        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);

    })();

    return exports;
}

// uint helpers

function writeUintLE(val, buf, pos) {
    buf[pos    ] =  val        & 255;
    buf[pos + 1] =  val >>> 8  & 255;
    buf[pos + 2] =  val >>> 16 & 255;
    buf[pos + 3] =  val >>> 24;
}

function writeUintBE(val, buf, pos) {
    buf[pos    ] =  val >>> 24;
    buf[pos + 1] =  val >>> 16 & 255;
    buf[pos + 2] =  val >>> 8  & 255;
    buf[pos + 3] =  val        & 255;
}

function readUintLE(buf, pos) {
    return (buf[pos    ]
          | buf[pos + 1] << 8
          | buf[pos + 2] << 16
          | buf[pos + 3] << 24) >>> 0;
}

function readUintBE(buf, pos) {
    return (buf[pos    ] << 24
          | buf[pos + 1] << 16
          | buf[pos + 2] << 8
          | buf[pos + 3]) >>> 0;
}

},{}],6:[function(require,module,exports){
"use strict";
module.exports = inquire;

/**
 * Requires a module only if available.
 * @memberof util
 * @param {string} moduleName Module to require
 * @returns {?Object} Required module if available and not empty, otherwise `null`
 */
function inquire(moduleName) {
    try {
        var mod = eval("quire".replace(/^/,"re"))(moduleName); // eslint-disable-line no-eval
        if (mod && (mod.length || Object.keys(mod).length))
            return mod;
    } catch (e) {} // eslint-disable-line no-empty
    return null;
}

},{}],7:[function(require,module,exports){
"use strict";
module.exports = pool;

/**
 * An allocator as used by {@link util.pool}.
 * @typedef PoolAllocator
 * @type {function}
 * @param {number} size Buffer size
 * @returns {Uint8Array} Buffer
 */

/**
 * A slicer as used by {@link util.pool}.
 * @typedef PoolSlicer
 * @type {function}
 * @param {number} start Start offset
 * @param {number} end End offset
 * @returns {Uint8Array} Buffer slice
 * @this {Uint8Array}
 */

/**
 * A general purpose buffer pool.
 * @memberof util
 * @function
 * @param {PoolAllocator} alloc Allocator
 * @param {PoolSlicer} slice Slicer
 * @param {number} [size=8192] Slab size
 * @returns {PoolAllocator} Pooled allocator
 */
function pool(alloc, slice, size) {
    var SIZE   = size || 8192;
    var MAX    = SIZE >>> 1;
    var slab   = null;
    var offset = SIZE;
    return function pool_alloc(size) {
        if (size < 1 || size > MAX)
            return alloc(size);
        if (offset + size > SIZE) {
            slab = alloc(SIZE);
            offset = 0;
        }
        var buf = slice.call(slab, offset, offset += size);
        if (offset & 7) // align to 32 bit
            offset = (offset | 7) + 1;
        return buf;
    };
}

},{}],8:[function(require,module,exports){
"use strict";

/**
 * A minimal UTF8 implementation for number arrays.
 * @memberof util
 * @namespace
 */
var utf8 = exports;

/**
 * Calculates the UTF8 byte length of a string.
 * @param {string} string String
 * @returns {number} Byte length
 */
utf8.length = function utf8_length(string) {
    var len = 0,
        c = 0;
    for (var i = 0; i < string.length; ++i) {
        c = string.charCodeAt(i);
        if (c < 128)
            len += 1;
        else if (c < 2048)
            len += 2;
        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {
            ++i;
            len += 4;
        } else
            len += 3;
    }
    return len;
};

/**
 * Reads UTF8 bytes as a string.
 * @param {Uint8Array} buffer Source buffer
 * @param {number} start Source start
 * @param {number} end Source end
 * @returns {string} String read
 */
utf8.read = function utf8_read(buffer, start, end) {
    var len = end - start;
    if (len < 1)
        return "";
    var parts = null,
        chunk = [],
        i = 0, // char offset
        t;     // temporary
    while (start < end) {
        t = buffer[start++];
        if (t < 128)
            chunk[i++] = t;
        else if (t > 191 && t < 224)
            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;
        else if (t > 239 && t < 365) {
            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;
            chunk[i++] = 0xD800 + (t >> 10);
            chunk[i++] = 0xDC00 + (t & 1023);
        } else
            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;
        if (i > 8191) {
            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));
            i = 0;
        }
    }
    if (parts) {
        if (i)
            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
        return parts.join("");
    }
    return String.fromCharCode.apply(String, chunk.slice(0, i));
};

/**
 * Writes a string as UTF8 bytes.
 * @param {string} string Source string
 * @param {Uint8Array} buffer Destination buffer
 * @param {number} offset Destination offset
 * @returns {number} Bytes written
 */
utf8.write = function utf8_write(string, buffer, offset) {
    var start = offset,
        c1, // character 1
        c2; // character 2
    for (var i = 0; i < string.length; ++i) {
        c1 = string.charCodeAt(i);
        if (c1 < 128) {
            buffer[offset++] = c1;
        } else if (c1 < 2048) {
            buffer[offset++] = c1 >> 6       | 192;
            buffer[offset++] = c1       & 63 | 128;
        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {
            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);
            ++i;
            buffer[offset++] = c1 >> 18      | 240;
            buffer[offset++] = c1 >> 12 & 63 | 128;
            buffer[offset++] = c1 >> 6  & 63 | 128;
            buffer[offset++] = c1       & 63 | 128;
        } else {
            buffer[offset++] = c1 >> 12      | 224;
            buffer[offset++] = c1 >> 6  & 63 | 128;
            buffer[offset++] = c1       & 63 | 128;
        }
    }
    return offset - start;
};

},{}],9:[function(require,module,exports){
// minimal library entry point.

"use strict";
module.exports = require("./src/index-minimal");

},{"./src/index-minimal":10}],10:[function(require,module,exports){
"use strict";
var protobuf = exports;

/**
 * Build type, one of `"full"`, `"light"` or `"minimal"`.
 * @name build
 * @type {string}
 * @const
 */
protobuf.build = "minimal";

// Serialization
protobuf.Writer       = require("./writer");
protobuf.BufferWriter = require("./writer_buffer");
protobuf.Reader       = require("./reader");
protobuf.BufferReader = require("./reader_buffer");

// Utility
protobuf.util         = require("./util/minimal");
protobuf.rpc          = require("./rpc");
protobuf.roots        = require("./roots");
protobuf.configure    = configure;

/* istanbul ignore next */
/**
 * Reconfigures the library according to the environment.
 * @returns {undefined}
 */
function configure() {
    protobuf.util._configure();
    protobuf.Writer._configure(protobuf.BufferWriter);
    protobuf.Reader._configure(protobuf.BufferReader);
}

// Set up buffer utility according to the environment
configure();

},{"./reader":11,"./reader_buffer":12,"./roots":13,"./rpc":14,"./util/minimal":17,"./writer":18,"./writer_buffer":19}],11:[function(require,module,exports){
"use strict";
module.exports = Reader;

var util      = require("./util/minimal");

var BufferReader; // cyclic

var LongBits  = util.LongBits,
    utf8      = util.utf8;

/* istanbul ignore next */
function indexOutOfRange(reader, writeLength) {
    return RangeError("index out of range: " + reader.pos + " + " + (writeLength || 1) + " > " + reader.len);
}

/**
 * Constructs a new reader instance using the specified buffer.
 * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.
 * @constructor
 * @param {Uint8Array} buffer Buffer to read from
 */
function Reader(buffer) {

    /**
     * Read buffer.
     * @type {Uint8Array}
     */
    this.buf = buffer;

    /**
     * Read buffer position.
     * @type {number}
     */
    this.pos = 0;

    /**
     * Read buffer length.
     * @type {number}
     */
    this.len = buffer.length;
}

var create_array = typeof Uint8Array !== "undefined"
    ? function create_typed_array(buffer) {
        if (buffer instanceof Uint8Array || Array.isArray(buffer))
            return new Reader(buffer);
        throw Error("illegal buffer");
    }
    /* istanbul ignore next */
    : function create_array(buffer) {
        if (Array.isArray(buffer))
            return new Reader(buffer);
        throw Error("illegal buffer");
    };

var create = function create() {
    return util.Buffer
        ? function create_buffer_setup(buffer) {
            return (Reader.create = function create_buffer(buffer) {
                return util.Buffer.isBuffer(buffer)
                    ? new BufferReader(buffer)
                    /* istanbul ignore next */
                    : create_array(buffer);
            })(buffer);
        }
        /* istanbul ignore next */
        : create_array;
};

/**
 * Creates a new reader using the specified buffer.
 * @function
 * @param {Uint8Array|Buffer} buffer Buffer to read from
 * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}
 * @throws {Error} If `buffer` is not a valid buffer
 */
Reader.create = create();

Reader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;

/**
 * Reads a varint as an unsigned 32 bit value.
 * @function
 * @returns {number} Value read
 */
Reader.prototype.uint32 = (function read_uint32_setup() {
    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)
    return function read_uint32() {
        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;

        /* istanbul ignore if */
        if ((this.pos += 5) > this.len) {
            this.pos = this.len;
            throw indexOutOfRange(this, 10);
        }
        return value;
    };
})();

/**
 * Reads a varint as a signed 32 bit value.
 * @returns {number} Value read
 */
Reader.prototype.int32 = function read_int32() {
    return this.uint32() | 0;
};

/**
 * Reads a zig-zag encoded varint as a signed 32 bit value.
 * @returns {number} Value read
 */
Reader.prototype.sint32 = function read_sint32() {
    var value = this.uint32();
    return value >>> 1 ^ -(value & 1) | 0;
};

/* eslint-disable no-invalid-this */

function readLongVarint() {
    // tends to deopt with local vars for octet etc.
    var bits = new LongBits(0, 0);
    var i = 0;
    if (this.len - this.pos > 4) { // fast route (lo)
        for (; i < 4; ++i) {
            // 1st..4th
            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
        // 5th
        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;
        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;
        if (this.buf[this.pos++] < 128)
            return bits;
        i = 0;
    } else {
        for (; i < 3; ++i) {
            /* istanbul ignore if */
            if (this.pos >= this.len)
                throw indexOutOfRange(this);
            // 1st..3th
            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
        // 4th
        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;
        return bits;
    }
    if (this.len - this.pos > 4) { // fast route (hi)
        for (; i < 5; ++i) {
            // 6th..10th
            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
    } else {
        for (; i < 5; ++i) {
            /* istanbul ignore if */
            if (this.pos >= this.len)
                throw indexOutOfRange(this);
            // 6th..10th
            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
    }
    /* istanbul ignore next */
    throw Error("invalid varint encoding");
}

/* eslint-enable no-invalid-this */

/**
 * Reads a varint as a signed 64 bit value.
 * @name Reader#int64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a varint as an unsigned 64 bit value.
 * @name Reader#uint64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a zig-zag encoded varint as a signed 64 bit value.
 * @name Reader#sint64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a varint as a boolean.
 * @returns {boolean} Value read
 */
Reader.prototype.bool = function read_bool() {
    return this.uint32() !== 0;
};

function readFixed32_end(buf, end) { // note that this uses `end`, not `pos`
    return (buf[end - 4]
          | buf[end - 3] << 8
          | buf[end - 2] << 16
          | buf[end - 1] << 24) >>> 0;
}

/**
 * Reads fixed 32 bits as an unsigned 32 bit integer.
 * @returns {number} Value read
 */
Reader.prototype.fixed32 = function read_fixed32() {

    /* istanbul ignore if */
    if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);

    return readFixed32_end(this.buf, this.pos += 4);
};

/**
 * Reads fixed 32 bits as a signed 32 bit integer.
 * @returns {number} Value read
 */
Reader.prototype.sfixed32 = function read_sfixed32() {

    /* istanbul ignore if */
    if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);

    return readFixed32_end(this.buf, this.pos += 4) | 0;
};

/* eslint-disable no-invalid-this */

function readFixed64(/* this: Reader */) {

    /* istanbul ignore if */
    if (this.pos + 8 > this.len)
        throw indexOutOfRange(this, 8);

    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));
}

/* eslint-enable no-invalid-this */

/**
 * Reads fixed 64 bits.
 * @name Reader#fixed64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads zig-zag encoded fixed 64 bits.
 * @name Reader#sfixed64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a float (32 bit) as a number.
 * @function
 * @returns {number} Value read
 */
Reader.prototype.float = function read_float() {

    /* istanbul ignore if */
    if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);

    var value = util.float.readFloatLE(this.buf, this.pos);
    this.pos += 4;
    return value;
};

/**
 * Reads a double (64 bit float) as a number.
 * @function
 * @returns {number} Value read
 */
Reader.prototype.double = function read_double() {

    /* istanbul ignore if */
    if (this.pos + 8 > this.len)
        throw indexOutOfRange(this, 4);

    var value = util.float.readDoubleLE(this.buf, this.pos);
    this.pos += 8;
    return value;
};

/**
 * Reads a sequence of bytes preceeded by its length as a varint.
 * @returns {Uint8Array} Value read
 */
Reader.prototype.bytes = function read_bytes() {
    var length = this.uint32(),
        start  = this.pos,
        end    = this.pos + length;

    /* istanbul ignore if */
    if (end > this.len)
        throw indexOutOfRange(this, length);

    this.pos += length;
    if (Array.isArray(this.buf)) // plain array
        return this.buf.slice(start, end);

    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1
        var nativeBuffer = util.Buffer;
        return nativeBuffer
            ? nativeBuffer.alloc(0)
            : new this.buf.constructor(0);
    }
    return this._slice.call(this.buf, start, end);
};

/**
 * Reads a string preceeded by its byte length as a varint.
 * @returns {string} Value read
 */
Reader.prototype.string = function read_string() {
    var bytes = this.bytes();
    return utf8.read(bytes, 0, bytes.length);
};

/**
 * Skips the specified number of bytes if specified, otherwise skips a varint.
 * @param {number} [length] Length if known, otherwise a varint is assumed
 * @returns {Reader} `this`
 */
Reader.prototype.skip = function skip(length) {
    if (typeof length === "number") {
        /* istanbul ignore if */
        if (this.pos + length > this.len)
            throw indexOutOfRange(this, length);
        this.pos += length;
    } else {
        do {
            /* istanbul ignore if */
            if (this.pos >= this.len)
                throw indexOutOfRange(this);
        } while (this.buf[this.pos++] & 128);
    }
    return this;
};

/**
 * Skips the next element of the specified wire type.
 * @param {number} wireType Wire type received
 * @returns {Reader} `this`
 */
Reader.prototype.skipType = function(wireType) {
    switch (wireType) {
        case 0:
            this.skip();
            break;
        case 1:
            this.skip(8);
            break;
        case 2:
            this.skip(this.uint32());
            break;
        case 3:
            while ((wireType = this.uint32() & 7) !== 4) {
                this.skipType(wireType);
            }
            break;
        case 5:
            this.skip(4);
            break;

        /* istanbul ignore next */
        default:
            throw Error("invalid wire type " + wireType + " at offset " + this.pos);
    }
    return this;
};

Reader._configure = function(BufferReader_) {
    BufferReader = BufferReader_;
    Reader.create = create();
    BufferReader._configure();

    var fn = util.Long ? "toLong" : /* istanbul ignore next */ "toNumber";
    util.merge(Reader.prototype, {

        int64: function read_int64() {
            return readLongVarint.call(this)[fn](false);
        },

        uint64: function read_uint64() {
            return readLongVarint.call(this)[fn](true);
        },

        sint64: function read_sint64() {
            return readLongVarint.call(this).zzDecode()[fn](false);
        },

        fixed64: function read_fixed64() {
            return readFixed64.call(this)[fn](true);
        },

        sfixed64: function read_sfixed64() {
            return readFixed64.call(this)[fn](false);
        }

    });
};

},{"./util/minimal":17}],12:[function(require,module,exports){
"use strict";
module.exports = BufferReader;

// extends Reader
var Reader = require("./reader");
(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;

var util = require("./util/minimal");

/**
 * Constructs a new buffer reader instance.
 * @classdesc Wire format reader using node buffers.
 * @extends Reader
 * @constructor
 * @param {Buffer} buffer Buffer to read from
 */
function BufferReader(buffer) {
    Reader.call(this, buffer);

    /**
     * Read buffer.
     * @name BufferReader#buf
     * @type {Buffer}
     */
}

BufferReader._configure = function () {
    /* istanbul ignore else */
    if (util.Buffer)
        BufferReader.prototype._slice = util.Buffer.prototype.slice;
};


/**
 * @override
 */
BufferReader.prototype.string = function read_string_buffer() {
    var len = this.uint32(); // modifies pos
    return this.buf.utf8Slice
        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))
        : this.buf.toString("utf-8", this.pos, this.pos = Math.min(this.pos + len, this.len));
};

/**
 * Reads a sequence of bytes preceeded by its length as a varint.
 * @name BufferReader#bytes
 * @function
 * @returns {Buffer} Value read
 */

BufferReader._configure();

},{"./reader":11,"./util/minimal":17}],13:[function(require,module,exports){
"use strict";
module.exports = {};

/**
 * Named roots.
 * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).
 * Can also be used manually to make roots available across modules.
 * @name roots
 * @type {Object.<string,Root>}
 * @example
 * // pbjs -r myroot -o compiled.js ...
 *
 * // in another module:
 * require("./compiled.js");
 *
 * // in any subsequent module:
 * var root = protobuf.roots["myroot"];
 */

},{}],14:[function(require,module,exports){
"use strict";

/**
 * Streaming RPC helpers.
 * @namespace
 */
var rpc = exports;

/**
 * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.
 * @typedef RPCImpl
 * @type {function}
 * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called
 * @param {Uint8Array} requestData Request data
 * @param {RPCImplCallback} callback Callback function
 * @returns {undefined}
 * @example
 * function rpcImpl(method, requestData, callback) {
 *     if (protobuf.util.lcFirst(method.name) !== "myMethod") // compatible with static code
 *         throw Error("no such method");
 *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {
 *         callback(err, responseData);
 *     });
 * }
 */

/**
 * Node-style callback as used by {@link RPCImpl}.
 * @typedef RPCImplCallback
 * @type {function}
 * @param {Error|null} error Error, if any, otherwise `null`
 * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error
 * @returns {undefined}
 */

rpc.Service = require("./rpc/service");

},{"./rpc/service":15}],15:[function(require,module,exports){
"use strict";
module.exports = Service;

var util = require("../util/minimal");

// Extends EventEmitter
(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;

/**
 * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.
 *
 * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.
 * @typedef rpc.ServiceMethodCallback
 * @template TRes extends Message<TRes>
 * @type {function}
 * @param {Error|null} error Error, if any
 * @param {TRes} [response] Response message
 * @returns {undefined}
 */

/**
 * A service method part of a {@link rpc.Service} as created by {@link Service.create}.
 * @typedef rpc.ServiceMethod
 * @template TReq extends Message<TReq>
 * @template TRes extends Message<TRes>
 * @type {function}
 * @param {TReq|Properties<TReq>} request Request message or plain object
 * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message
 * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`
 */

/**
 * Constructs a new RPC service instance.
 * @classdesc An RPC service as returned by {@link Service#create}.
 * @exports rpc.Service
 * @extends util.EventEmitter
 * @constructor
 * @param {RPCImpl} rpcImpl RPC implementation
 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
 */
function Service(rpcImpl, requestDelimited, responseDelimited) {

    if (typeof rpcImpl !== "function")
        throw TypeError("rpcImpl must be a function");

    util.EventEmitter.call(this);

    /**
     * RPC implementation. Becomes `null` once the service is ended.
     * @type {RPCImpl|null}
     */
    this.rpcImpl = rpcImpl;

    /**
     * Whether requests are length-delimited.
     * @type {boolean}
     */
    this.requestDelimited = Boolean(requestDelimited);

    /**
     * Whether responses are length-delimited.
     * @type {boolean}
     */
    this.responseDelimited = Boolean(responseDelimited);
}

/**
 * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.
 * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method
 * @param {Constructor<TReq>} requestCtor Request constructor
 * @param {Constructor<TRes>} responseCtor Response constructor
 * @param {TReq|Properties<TReq>} request Request message or plain object
 * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback
 * @returns {undefined}
 * @template TReq extends Message<TReq>
 * @template TRes extends Message<TRes>
 */
Service.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {

    if (!request)
        throw TypeError("request must be specified");

    var self = this;
    if (!callback)
        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);

    if (!self.rpcImpl) {
        setTimeout(function() { callback(Error("already ended")); }, 0);
        return undefined;
    }

    try {
        return self.rpcImpl(
            method,
            requestCtor[self.requestDelimited ? "encodeDelimited" : "encode"](request).finish(),
            function rpcCallback(err, response) {

                if (err) {
                    self.emit("error", err, method);
                    return callback(err);
                }

                if (response === null) {
                    self.end(/* endedByRPC */ true);
                    return undefined;
                }

                if (!(response instanceof responseCtor)) {
                    try {
                        response = responseCtor[self.responseDelimited ? "decodeDelimited" : "decode"](response);
                    } catch (err) {
                        self.emit("error", err, method);
                        return callback(err);
                    }
                }

                self.emit("data", response, method);
                return callback(null, response);
            }
        );
    } catch (err) {
        self.emit("error", err, method);
        setTimeout(function() { callback(err); }, 0);
        return undefined;
    }
};

/**
 * Ends this service and emits the `end` event.
 * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.
 * @returns {rpc.Service} `this`
 */
Service.prototype.end = function end(endedByRPC) {
    if (this.rpcImpl) {
        if (!endedByRPC) // signal end to rpcImpl
            this.rpcImpl(null, null, null);
        this.rpcImpl = null;
        this.emit("end").off();
    }
    return this;
};

},{"../util/minimal":17}],16:[function(require,module,exports){
"use strict";
module.exports = LongBits;

var util = require("../util/minimal");

/**
 * Constructs new long bits.
 * @classdesc Helper class for working with the low and high bits of a 64 bit value.
 * @memberof util
 * @constructor
 * @param {number} lo Low 32 bits, unsigned
 * @param {number} hi High 32 bits, unsigned
 */
function LongBits(lo, hi) {

    // note that the casts below are theoretically unnecessary as of today, but older statically
    // generated converter code might still call the ctor with signed 32bits. kept for compat.

    /**
     * Low bits.
     * @type {number}
     */
    this.lo = lo >>> 0;

    /**
     * High bits.
     * @type {number}
     */
    this.hi = hi >>> 0;
}

/**
 * Zero bits.
 * @memberof util.LongBits
 * @type {util.LongBits}
 */
var zero = LongBits.zero = new LongBits(0, 0);

zero.toNumber = function() { return 0; };
zero.zzEncode = zero.zzDecode = function() { return this; };
zero.length = function() { return 1; };

/**
 * Zero hash.
 * @memberof util.LongBits
 * @type {string}
 */
var zeroHash = LongBits.zeroHash = "\0\0\0\0\0\0\0\0";

/**
 * Constructs new long bits from the specified number.
 * @param {number} value Value
 * @returns {util.LongBits} Instance
 */
LongBits.fromNumber = function fromNumber(value) {
    if (value === 0)
        return zero;
    var sign = value < 0;
    if (sign)
        value = -value;
    var lo = value >>> 0,
        hi = (value - lo) / 4294967296 >>> 0;
    if (sign) {
        hi = ~hi >>> 0;
        lo = ~lo >>> 0;
        if (++lo > 4294967295) {
            lo = 0;
            if (++hi > 4294967295)
                hi = 0;
        }
    }
    return new LongBits(lo, hi);
};

/**
 * Constructs new long bits from a number, long or string.
 * @param {Long|number|string} value Value
 * @returns {util.LongBits} Instance
 */
LongBits.from = function from(value) {
    if (typeof value === "number")
        return LongBits.fromNumber(value);
    if (util.isString(value)) {
        /* istanbul ignore else */
        if (util.Long)
            value = util.Long.fromString(value);
        else
            return LongBits.fromNumber(parseInt(value, 10));
    }
    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;
};

/**
 * Converts this long bits to a possibly unsafe JavaScript number.
 * @param {boolean} [unsigned=false] Whether unsigned or not
 * @returns {number} Possibly unsafe number
 */
LongBits.prototype.toNumber = function toNumber(unsigned) {
    if (!unsigned && this.hi >>> 31) {
        var lo = ~this.lo + 1 >>> 0,
            hi = ~this.hi     >>> 0;
        if (!lo)
            hi = hi + 1 >>> 0;
        return -(lo + hi * 4294967296);
    }
    return this.lo + this.hi * 4294967296;
};

/**
 * Converts this long bits to a long.
 * @param {boolean} [unsigned=false] Whether unsigned or not
 * @returns {Long} Long
 */
LongBits.prototype.toLong = function toLong(unsigned) {
    return util.Long
        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))
        /* istanbul ignore next */
        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };
};

var charCodeAt = String.prototype.charCodeAt;

/**
 * Constructs new long bits from the specified 8 characters long hash.
 * @param {string} hash Hash
 * @returns {util.LongBits} Bits
 */
LongBits.fromHash = function fromHash(hash) {
    if (hash === zeroHash)
        return zero;
    return new LongBits(
        ( charCodeAt.call(hash, 0)
        | charCodeAt.call(hash, 1) << 8
        | charCodeAt.call(hash, 2) << 16
        | charCodeAt.call(hash, 3) << 24) >>> 0
    ,
        ( charCodeAt.call(hash, 4)
        | charCodeAt.call(hash, 5) << 8
        | charCodeAt.call(hash, 6) << 16
        | charCodeAt.call(hash, 7) << 24) >>> 0
    );
};

/**
 * Converts this long bits to a 8 characters long hash.
 * @returns {string} Hash
 */
LongBits.prototype.toHash = function toHash() {
    return String.fromCharCode(
        this.lo        & 255,
        this.lo >>> 8  & 255,
        this.lo >>> 16 & 255,
        this.lo >>> 24      ,
        this.hi        & 255,
        this.hi >>> 8  & 255,
        this.hi >>> 16 & 255,
        this.hi >>> 24
    );
};

/**
 * Zig-zag encodes this long bits.
 * @returns {util.LongBits} `this`
 */
LongBits.prototype.zzEncode = function zzEncode() {
    var mask =   this.hi >> 31;
    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;
    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;
    return this;
};

/**
 * Zig-zag decodes this long bits.
 * @returns {util.LongBits} `this`
 */
LongBits.prototype.zzDecode = function zzDecode() {
    var mask = -(this.lo & 1);
    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;
    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;
    return this;
};

/**
 * Calculates the length of this longbits when encoded as a varint.
 * @returns {number} Length
 */
LongBits.prototype.length = function length() {
    var part0 =  this.lo,
        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,
        part2 =  this.hi >>> 24;
    return part2 === 0
         ? part1 === 0
           ? part0 < 16384
             ? part0 < 128 ? 1 : 2
             : part0 < 2097152 ? 3 : 4
           : part1 < 16384
             ? part1 < 128 ? 5 : 6
             : part1 < 2097152 ? 7 : 8
         : part2 < 128 ? 9 : 10;
};

},{"../util/minimal":17}],17:[function(require,module,exports){
(function (global){(function (){
"use strict";
var util = exports;

// used to return a Promise where callback is omitted
util.asPromise = require("@protobufjs/aspromise");

// converts to / from base64 encoded strings
util.base64 = require("@protobufjs/base64");

// base class of rpc.Service
util.EventEmitter = require("@protobufjs/eventemitter");

// float handling accross browsers
util.float = require("@protobufjs/float");

// requires modules optionally and hides the call from bundlers
util.inquire = require("@protobufjs/inquire");

// converts to / from utf8 encoded strings
util.utf8 = require("@protobufjs/utf8");

// provides a node-like buffer pool in the browser
util.pool = require("@protobufjs/pool");

// utility to work with the low and high bits of a 64 bit value
util.LongBits = require("./longbits");

/**
 * Whether running within node or not.
 * @memberof util
 * @type {boolean}
 */
util.isNode = Boolean(typeof global !== "undefined"
                   && global
                   && global.process
                   && global.process.versions
                   && global.process.versions.node);

/**
 * Global object reference.
 * @memberof util
 * @type {Object}
 */
util.global = util.isNode && global
           || typeof window !== "undefined" && window
           || typeof self   !== "undefined" && self
           || this; // eslint-disable-line no-invalid-this

/**
 * An immuable empty array.
 * @memberof util
 * @type {Array.<*>}
 * @const
 */
util.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes

/**
 * An immutable empty object.
 * @type {Object}
 * @const
 */
util.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes

/**
 * Tests if the specified value is an integer.
 * @function
 * @param {*} value Value to test
 * @returns {boolean} `true` if the value is an integer
 */
util.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {
    return typeof value === "number" && isFinite(value) && Math.floor(value) === value;
};

/**
 * Tests if the specified value is a string.
 * @param {*} value Value to test
 * @returns {boolean} `true` if the value is a string
 */
util.isString = function isString(value) {
    return typeof value === "string" || value instanceof String;
};

/**
 * Tests if the specified value is a non-null object.
 * @param {*} value Value to test
 * @returns {boolean} `true` if the value is a non-null object
 */
util.isObject = function isObject(value) {
    return value && typeof value === "object";
};

/**
 * Checks if a property on a message is considered to be present.
 * This is an alias of {@link util.isSet}.
 * @function
 * @param {Object} obj Plain object or message instance
 * @param {string} prop Property name
 * @returns {boolean} `true` if considered to be present, otherwise `false`
 */
util.isset =

/**
 * Checks if a property on a message is considered to be present.
 * @param {Object} obj Plain object or message instance
 * @param {string} prop Property name
 * @returns {boolean} `true` if considered to be present, otherwise `false`
 */
util.isSet = function isSet(obj, prop) {
    var value = obj[prop];
    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins
        return typeof value !== "object" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;
    return false;
};

/**
 * Any compatible Buffer instance.
 * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.
 * @interface Buffer
 * @extends Uint8Array
 */

/**
 * Node's Buffer class if available.
 * @type {Constructor<Buffer>}
 */
util.Buffer = (function() {
    try {
        var Buffer = util.inquire("buffer").Buffer;
        // refuse to use non-node buffers if not explicitly assigned (perf reasons):
        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;
    } catch (e) {
        /* istanbul ignore next */
        return null;
    }
})();

// Internal alias of or polyfull for Buffer.from.
util._Buffer_from = null;

// Internal alias of or polyfill for Buffer.allocUnsafe.
util._Buffer_allocUnsafe = null;

/**
 * Creates a new buffer of whatever type supported by the environment.
 * @param {number|number[]} [sizeOrArray=0] Buffer size or number array
 * @returns {Uint8Array|Buffer} Buffer
 */
util.newBuffer = function newBuffer(sizeOrArray) {
    /* istanbul ignore next */
    return typeof sizeOrArray === "number"
        ? util.Buffer
            ? util._Buffer_allocUnsafe(sizeOrArray)
            : new util.Array(sizeOrArray)
        : util.Buffer
            ? util._Buffer_from(sizeOrArray)
            : typeof Uint8Array === "undefined"
                ? sizeOrArray
                : new Uint8Array(sizeOrArray);
};

/**
 * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.
 * @type {Constructor<Uint8Array>}
 */
util.Array = typeof Uint8Array !== "undefined" ? Uint8Array /* istanbul ignore next */ : Array;

/**
 * Any compatible Long instance.
 * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.
 * @interface Long
 * @property {number} low Low bits
 * @property {number} high High bits
 * @property {boolean} unsigned Whether unsigned or not
 */

/**
 * Long.js's Long class if available.
 * @type {Constructor<Long>}
 */
util.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long
         || /* istanbul ignore next */ util.global.Long
         || util.inquire("long");

/**
 * Regular expression used to verify 2 bit (`bool`) map keys.
 * @type {RegExp}
 * @const
 */
util.key2Re = /^true|false|0|1$/;

/**
 * Regular expression used to verify 32 bit (`int32` etc.) map keys.
 * @type {RegExp}
 * @const
 */
util.key32Re = /^-?(?:0|[1-9][0-9]*)$/;

/**
 * Regular expression used to verify 64 bit (`int64` etc.) map keys.
 * @type {RegExp}
 * @const
 */
util.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;

/**
 * Converts a number or long to an 8 characters long hash string.
 * @param {Long|number} value Value to convert
 * @returns {string} Hash
 */
util.longToHash = function longToHash(value) {
    return value
        ? util.LongBits.from(value).toHash()
        : util.LongBits.zeroHash;
};

/**
 * Converts an 8 characters long hash string to a long or number.
 * @param {string} hash Hash
 * @param {boolean} [unsigned=false] Whether unsigned or not
 * @returns {Long|number} Original value
 */
util.longFromHash = function longFromHash(hash, unsigned) {
    var bits = util.LongBits.fromHash(hash);
    if (util.Long)
        return util.Long.fromBits(bits.lo, bits.hi, unsigned);
    return bits.toNumber(Boolean(unsigned));
};

/**
 * Merges the properties of the source object into the destination object.
 * @memberof util
 * @param {Object.<string,*>} dst Destination object
 * @param {Object.<string,*>} src Source object
 * @param {boolean} [ifNotSet=false] Merges only if the key is not already set
 * @returns {Object.<string,*>} Destination object
 */
function merge(dst, src, ifNotSet) { // used by converters
    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)
        if (dst[keys[i]] === undefined || !ifNotSet)
            dst[keys[i]] = src[keys[i]];
    return dst;
}

util.merge = merge;

/**
 * Converts the first character of a string to lower case.
 * @param {string} str String to convert
 * @returns {string} Converted string
 */
util.lcFirst = function lcFirst(str) {
    return str.charAt(0).toLowerCase() + str.substring(1);
};

/**
 * Creates a custom error constructor.
 * @memberof util
 * @param {string} name Error name
 * @returns {Constructor<Error>} Custom error constructor
 */
function newError(name) {

    function CustomError(message, properties) {

        if (!(this instanceof CustomError))
            return new CustomError(message, properties);

        // Error.call(this, message);
        // ^ just returns a new error instance because the ctor can be called as a function

        Object.defineProperty(this, "message", { get: function() { return message; } });

        /* istanbul ignore next */
        if (Error.captureStackTrace) // node
            Error.captureStackTrace(this, CustomError);
        else
            Object.defineProperty(this, "stack", { value: new Error().stack || "" });

        if (properties)
            merge(this, properties);
    }

    CustomError.prototype = Object.create(Error.prototype, {
        constructor: {
            value: CustomError,
            writable: true,
            enumerable: false,
            configurable: true,
        },
        name: {
            get: function get() { return name; },
            set: undefined,
            enumerable: false,
            // configurable: false would accurately preserve the behavior of
            // the original, but I'm guessing that was not intentional.
            // For an actual error subclass, this property would
            // be configurable.
            configurable: true,
        },
        toString: {
            value: function value() { return this.name + ": " + this.message; },
            writable: true,
            enumerable: false,
            configurable: true,
        },
    });

    return CustomError;
}

util.newError = newError;

/**
 * Constructs a new protocol error.
 * @classdesc Error subclass indicating a protocol specifc error.
 * @memberof util
 * @extends Error
 * @template T extends Message<T>
 * @constructor
 * @param {string} message Error message
 * @param {Object.<string,*>} [properties] Additional properties
 * @example
 * try {
 *     MyMessage.decode(someBuffer); // throws if required fields are missing
 * } catch (e) {
 *     if (e instanceof ProtocolError && e.instance)
 *         console.log("decoded so far: " + JSON.stringify(e.instance));
 * }
 */
util.ProtocolError = newError("ProtocolError");

/**
 * So far decoded message instance.
 * @name util.ProtocolError#instance
 * @type {Message<T>}
 */

/**
 * A OneOf getter as returned by {@link util.oneOfGetter}.
 * @typedef OneOfGetter
 * @type {function}
 * @returns {string|undefined} Set field name, if any
 */

/**
 * Builds a getter for a oneof's present field name.
 * @param {string[]} fieldNames Field names
 * @returns {OneOfGetter} Unbound getter
 */
util.oneOfGetter = function getOneOf(fieldNames) {
    var fieldMap = {};
    for (var i = 0; i < fieldNames.length; ++i)
        fieldMap[fieldNames[i]] = 1;

    /**
     * @returns {string|undefined} Set field name, if any
     * @this Object
     * @ignore
     */
    return function() { // eslint-disable-line consistent-return
        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)
            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)
                return keys[i];
    };
};

/**
 * A OneOf setter as returned by {@link util.oneOfSetter}.
 * @typedef OneOfSetter
 * @type {function}
 * @param {string|undefined} value Field name
 * @returns {undefined}
 */

/**
 * Builds a setter for a oneof's present field name.
 * @param {string[]} fieldNames Field names
 * @returns {OneOfSetter} Unbound setter
 */
util.oneOfSetter = function setOneOf(fieldNames) {

    /**
     * @param {string} name Field name
     * @returns {undefined}
     * @this Object
     * @ignore
     */
    return function(name) {
        for (var i = 0; i < fieldNames.length; ++i)
            if (fieldNames[i] !== name)
                delete this[fieldNames[i]];
    };
};

/**
 * Default conversion options used for {@link Message#toJSON} implementations.
 *
 * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:
 *
 * - Longs become strings
 * - Enums become string keys
 * - Bytes become base64 encoded strings
 * - (Sub-)Messages become plain objects
 * - Maps become plain objects with all string keys
 * - Repeated fields become arrays
 * - NaN and Infinity for float and double fields become strings
 *
 * @type {IConversionOptions}
 * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json
 */
util.toJSONOptions = {
    longs: String,
    enums: String,
    bytes: String,
    json: true
};

// Sets up buffer utility according to the environment (called in index-minimal)
util._configure = function() {
    var Buffer = util.Buffer;
    /* istanbul ignore if */
    if (!Buffer) {
        util._Buffer_from = util._Buffer_allocUnsafe = null;
        return;
    }
    // because node 4.x buffers are incompatible & immutable
    // see: https://github.com/dcodeIO/protobuf.js/pull/665
    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||
        /* istanbul ignore next */
        function Buffer_from(value, encoding) {
            return new Buffer(value, encoding);
        };
    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||
        /* istanbul ignore next */
        function Buffer_allocUnsafe(size) {
            return new Buffer(size);
        };
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./longbits":16,"@protobufjs/aspromise":2,"@protobufjs/base64":3,"@protobufjs/eventemitter":4,"@protobufjs/float":5,"@protobufjs/inquire":6,"@protobufjs/pool":7,"@protobufjs/utf8":8}],18:[function(require,module,exports){
"use strict";
module.exports = Writer;

var util      = require("./util/minimal");

var BufferWriter; // cyclic

var LongBits  = util.LongBits,
    base64    = util.base64,
    utf8      = util.utf8;

/**
 * Constructs a new writer operation instance.
 * @classdesc Scheduled writer operation.
 * @constructor
 * @param {function(*, Uint8Array, number)} fn Function to call
 * @param {number} len Value byte length
 * @param {*} val Value to write
 * @ignore
 */
function Op(fn, len, val) {

    /**
     * Function to call.
     * @type {function(Uint8Array, number, *)}
     */
    this.fn = fn;

    /**
     * Value byte length.
     * @type {number}
     */
    this.len = len;

    /**
     * Next operation.
     * @type {Writer.Op|undefined}
     */
    this.next = undefined;

    /**
     * Value to write.
     * @type {*}
     */
    this.val = val; // type varies
}

/* istanbul ignore next */
function noop() {} // eslint-disable-line no-empty-function

/**
 * Constructs a new writer state instance.
 * @classdesc Copied writer state.
 * @memberof Writer
 * @constructor
 * @param {Writer} writer Writer to copy state from
 * @ignore
 */
function State(writer) {

    /**
     * Current head.
     * @type {Writer.Op}
     */
    this.head = writer.head;

    /**
     * Current tail.
     * @type {Writer.Op}
     */
    this.tail = writer.tail;

    /**
     * Current buffer length.
     * @type {number}
     */
    this.len = writer.len;

    /**
     * Next state.
     * @type {State|null}
     */
    this.next = writer.states;
}

/**
 * Constructs a new writer instance.
 * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.
 * @constructor
 */
function Writer() {

    /**
     * Current length.
     * @type {number}
     */
    this.len = 0;

    /**
     * Operations head.
     * @type {Object}
     */
    this.head = new Op(noop, 0, 0);

    /**
     * Operations tail
     * @type {Object}
     */
    this.tail = this.head;

    /**
     * Linked forked states.
     * @type {Object|null}
     */
    this.states = null;

    // When a value is written, the writer calculates its byte length and puts it into a linked
    // list of operations to perform when finish() is called. This both allows us to allocate
    // buffers of the exact required size and reduces the amount of work we have to do compared
    // to first calculating over objects and then encoding over objects. In our case, the encoding
    // part is just a linked list walk calling operations with already prepared values.
}

var create = function create() {
    return util.Buffer
        ? function create_buffer_setup() {
            return (Writer.create = function create_buffer() {
                return new BufferWriter();
            })();
        }
        /* istanbul ignore next */
        : function create_array() {
            return new Writer();
        };
};

/**
 * Creates a new writer.
 * @function
 * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}
 */
Writer.create = create();

/**
 * Allocates a buffer of the specified size.
 * @param {number} size Buffer size
 * @returns {Uint8Array} Buffer
 */
Writer.alloc = function alloc(size) {
    return new util.Array(size);
};

// Use Uint8Array buffer pool in the browser, just like node does with buffers
/* istanbul ignore else */
if (util.Array !== Array)
    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);

/**
 * Pushes a new operation to the queue.
 * @param {function(Uint8Array, number, *)} fn Function to call
 * @param {number} len Value byte length
 * @param {number} val Value to write
 * @returns {Writer} `this`
 * @private
 */
Writer.prototype._push = function push(fn, len, val) {
    this.tail = this.tail.next = new Op(fn, len, val);
    this.len += len;
    return this;
};

function writeByte(val, buf, pos) {
    buf[pos] = val & 255;
}

function writeVarint32(val, buf, pos) {
    while (val > 127) {
        buf[pos++] = val & 127 | 128;
        val >>>= 7;
    }
    buf[pos] = val;
}

/**
 * Constructs a new varint writer operation instance.
 * @classdesc Scheduled varint writer operation.
 * @extends Op
 * @constructor
 * @param {number} len Value byte length
 * @param {number} val Value to write
 * @ignore
 */
function VarintOp(len, val) {
    this.len = len;
    this.next = undefined;
    this.val = val;
}

VarintOp.prototype = Object.create(Op.prototype);
VarintOp.prototype.fn = writeVarint32;

/**
 * Writes an unsigned 32 bit value as a varint.
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.uint32 = function write_uint32(value) {
    // here, the call to this.push has been inlined and a varint specific Op subclass is used.
    // uint32 is by far the most frequently used operation and benefits significantly from this.
    this.len += (this.tail = this.tail.next = new VarintOp(
        (value = value >>> 0)
                < 128       ? 1
        : value < 16384     ? 2
        : value < 2097152   ? 3
        : value < 268435456 ? 4
        :                     5,
    value)).len;
    return this;
};

/**
 * Writes a signed 32 bit value as a varint.
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.int32 = function write_int32(value) {
    return value < 0
        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec
        : this.uint32(value);
};

/**
 * Writes a 32 bit value as a varint, zig-zag encoded.
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.sint32 = function write_sint32(value) {
    return this.uint32((value << 1 ^ value >> 31) >>> 0);
};

function writeVarint64(val, buf, pos) {
    while (val.hi) {
        buf[pos++] = val.lo & 127 | 128;
        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;
        val.hi >>>= 7;
    }
    while (val.lo > 127) {
        buf[pos++] = val.lo & 127 | 128;
        val.lo = val.lo >>> 7;
    }
    buf[pos++] = val.lo;
}

/**
 * Writes an unsigned 64 bit value as a varint.
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.uint64 = function write_uint64(value) {
    var bits = LongBits.from(value);
    return this._push(writeVarint64, bits.length(), bits);
};

/**
 * Writes a signed 64 bit value as a varint.
 * @function
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.int64 = Writer.prototype.uint64;

/**
 * Writes a signed 64 bit value as a varint, zig-zag encoded.
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.sint64 = function write_sint64(value) {
    var bits = LongBits.from(value).zzEncode();
    return this._push(writeVarint64, bits.length(), bits);
};

/**
 * Writes a boolish value as a varint.
 * @param {boolean} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.bool = function write_bool(value) {
    return this._push(writeByte, 1, value ? 1 : 0);
};

function writeFixed32(val, buf, pos) {
    buf[pos    ] =  val         & 255;
    buf[pos + 1] =  val >>> 8   & 255;
    buf[pos + 2] =  val >>> 16  & 255;
    buf[pos + 3] =  val >>> 24;
}

/**
 * Writes an unsigned 32 bit value as fixed 32 bits.
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.fixed32 = function write_fixed32(value) {
    return this._push(writeFixed32, 4, value >>> 0);
};

/**
 * Writes a signed 32 bit value as fixed 32 bits.
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.sfixed32 = Writer.prototype.fixed32;

/**
 * Writes an unsigned 64 bit value as fixed 64 bits.
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.fixed64 = function write_fixed64(value) {
    var bits = LongBits.from(value);
    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);
};

/**
 * Writes a signed 64 bit value as fixed 64 bits.
 * @function
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.sfixed64 = Writer.prototype.fixed64;

/**
 * Writes a float (32 bit).
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.float = function write_float(value) {
    return this._push(util.float.writeFloatLE, 4, value);
};

/**
 * Writes a double (64 bit float).
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.double = function write_double(value) {
    return this._push(util.float.writeDoubleLE, 8, value);
};

var writeBytes = util.Array.prototype.set
    ? function writeBytes_set(val, buf, pos) {
        buf.set(val, pos); // also works for plain array values
    }
    /* istanbul ignore next */
    : function writeBytes_for(val, buf, pos) {
        for (var i = 0; i < val.length; ++i)
            buf[pos + i] = val[i];
    };

/**
 * Writes a sequence of bytes.
 * @param {Uint8Array|string} value Buffer or base64 encoded string to write
 * @returns {Writer} `this`
 */
Writer.prototype.bytes = function write_bytes(value) {
    var len = value.length >>> 0;
    if (!len)
        return this._push(writeByte, 1, 0);
    if (util.isString(value)) {
        var buf = Writer.alloc(len = base64.length(value));
        base64.decode(value, buf, 0);
        value = buf;
    }
    return this.uint32(len)._push(writeBytes, len, value);
};

/**
 * Writes a string.
 * @param {string} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.string = function write_string(value) {
    var len = utf8.length(value);
    return len
        ? this.uint32(len)._push(utf8.write, len, value)
        : this._push(writeByte, 1, 0);
};

/**
 * Forks this writer's state by pushing it to a stack.
 * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.
 * @returns {Writer} `this`
 */
Writer.prototype.fork = function fork() {
    this.states = new State(this);
    this.head = this.tail = new Op(noop, 0, 0);
    this.len = 0;
    return this;
};

/**
 * Resets this instance to the last state.
 * @returns {Writer} `this`
 */
Writer.prototype.reset = function reset() {
    if (this.states) {
        this.head   = this.states.head;
        this.tail   = this.states.tail;
        this.len    = this.states.len;
        this.states = this.states.next;
    } else {
        this.head = this.tail = new Op(noop, 0, 0);
        this.len  = 0;
    }
    return this;
};

/**
 * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.
 * @returns {Writer} `this`
 */
Writer.prototype.ldelim = function ldelim() {
    var head = this.head,
        tail = this.tail,
        len  = this.len;
    this.reset().uint32(len);
    if (len) {
        this.tail.next = head.next; // skip noop
        this.tail = tail;
        this.len += len;
    }
    return this;
};

/**
 * Finishes the write operation.
 * @returns {Uint8Array} Finished buffer
 */
Writer.prototype.finish = function finish() {
    var head = this.head.next, // skip noop
        buf  = this.constructor.alloc(this.len),
        pos  = 0;
    while (head) {
        head.fn(head.val, buf, pos);
        pos += head.len;
        head = head.next;
    }
    // this.head = this.tail = null;
    return buf;
};

Writer._configure = function(BufferWriter_) {
    BufferWriter = BufferWriter_;
    Writer.create = create();
    BufferWriter._configure();
};

},{"./util/minimal":17}],19:[function(require,module,exports){
"use strict";
module.exports = BufferWriter;

// extends Writer
var Writer = require("./writer");
(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;

var util = require("./util/minimal");

/**
 * Constructs a new buffer writer instance.
 * @classdesc Wire format writer using node buffers.
 * @extends Writer
 * @constructor
 */
function BufferWriter() {
    Writer.call(this);
}

BufferWriter._configure = function () {
    /**
     * Allocates a buffer of the specified size.
     * @function
     * @param {number} size Buffer size
     * @returns {Buffer} Buffer
     */
    BufferWriter.alloc = util._Buffer_allocUnsafe;

    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === "set"
        ? function writeBytesBuffer_set(val, buf, pos) {
          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)
          // also works for plain array values
        }
        /* istanbul ignore next */
        : function writeBytesBuffer_copy(val, buf, pos) {
          if (val.copy) // Buffer values
            val.copy(buf, pos, 0, val.length);
          else for (var i = 0; i < val.length;) // plain array values
            buf[pos++] = val[i++];
        };
};


/**
 * @override
 */
BufferWriter.prototype.bytes = function write_bytes_buffer(value) {
    if (util.isString(value))
        value = util._Buffer_from(value, "base64");
    var len = value.length >>> 0;
    this.uint32(len);
    if (len)
        this._push(BufferWriter.writeBytesBuffer, len, value);
    return this;
};

function writeStringBuffer(val, buf, pos) {
    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)
        util.utf8.write(val, buf, pos);
    else if (buf.utf8Write)
        buf.utf8Write(val, pos);
    else
        buf.write(val, pos);
}

/**
 * @override
 */
BufferWriter.prototype.string = function write_string_buffer(value) {
    var len = util.Buffer.byteLength(value);
    this.uint32(len);
    if (len)
        this._push(writeStringBuffer, len, value);
    return this;
};


/**
 * Finishes the write operation.
 * @name BufferWriter#finish
 * @function
 * @returns {Buffer} Finished buffer
 */

BufferWriter._configure();

},{"./util/minimal":17,"./writer":18}]},{},[1]);
